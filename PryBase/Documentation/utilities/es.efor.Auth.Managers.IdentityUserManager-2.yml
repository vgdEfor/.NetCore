### YamlMime:ManagedReference
items:
- uid: es.efor.Auth.Managers.IdentityUserManager`2
  commentId: T:es.efor.Auth.Managers.IdentityUserManager`2
  id: IdentityUserManager`2
  parent: es.efor.Auth.Managers
  children:
  - es.efor.Auth.Managers.IdentityUserManager`2.#ctor(Microsoft.AspNetCore.Identity.IUserStore{`1},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Identity.IPasswordHasher{`1},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{`1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{`1}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{`1}})
  - es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync(`0)
  - es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync(System.Collections.Generic.IEnumerable{`0})
  - es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync(`1,System.Collections.Generic.IEnumerable{System.String})
  - es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync(`1,System.Collections.Generic.IEnumerable{System.String})
  - es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync(System.Collections.Generic.IEnumerable{`1})
  langs:
  - csharp
  - vb
  name: IdentityUserManager<TUserId, TUser>
  nameWithType: IdentityUserManager<TUserId, TUser>
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>
  type: Class
  source:
    remote:
      path: es.efor.Auth/Managers/IdentityUserManager.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: IdentityUserManager
    path: ../es.efor.Auth/Managers/IdentityUserManager.cs
    startLine: 12
  assemblies:
  - es.efor.Auth
  namespace: es.efor.Auth.Managers
  syntax:
    content: 'public class IdentityUserManager<TUserId, TUser> : UserManager<TUser>, IDisposable where TUserId : IEquatable<TUserId> where TUser : User<TUserId>'
    typeParameters:
    - id: TUserId
    - id: TUser
    content.vb: >-
      Public Class IdentityUserManager(Of TUserId As IEquatable(Of TUserId), TUser As User(Of TUserId))

          Inherits UserManager(Of TUser)

          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetPasswordTokenPurpose
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangePhoneNumberTokenPurpose
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ConfirmEmailTokenPurpose
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Dispose
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserName(System.Security.Claims.ClaimsPrincipal)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserId(System.Security.Claims.ClaimsPrincipal)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateConcurrencyStampAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.DeleteAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByIdAsync(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByNameAsync(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.NormalizeName(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.NormalizeEmail(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateNormalizedUserNameAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserNameAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetUserNameAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserIdAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CheckPasswordAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.HasPasswordAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddPasswordAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangePasswordAsync({TUser},System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemovePasswordAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{{TUser}},{TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetSecurityStampAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateSecurityStampAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GeneratePasswordResetTokenAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetPasswordAsync({TUser},System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByLoginAsync(System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveLoginAsync({TUser},System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddLoginAsync({TUser},Microsoft.AspNetCore.Identity.UserLoginInfo)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetLoginsAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddClaimAsync({TUser},System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddClaimsAsync({TUser},System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ReplaceClaimAsync({TUser},System.Security.Claims.Claim,System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveClaimAsync({TUser},System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveClaimsAsync({TUser},System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetClaimsAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddToRoleAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddToRolesAsync({TUser},System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveFromRoleAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveFromRolesAsync({TUser},System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetRolesAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsInRoleAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetEmailAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetEmailAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByEmailAsync(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateNormalizedEmailAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateEmailConfirmationTokenAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ConfirmEmailAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsEmailConfirmedAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateChangeEmailTokenAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangeEmailAsync({TUser},System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetPhoneNumberAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetPhoneNumberAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangePhoneNumberAsync({TUser},System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsPhoneNumberConfirmedAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateChangePhoneNumberTokenAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyChangePhoneNumberTokenAsync({TUser},System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyUserTokenAsync({TUser},System.String,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateUserTokenAsync({TUser},System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{{TUser}})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetValidTwoFactorProvidersAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyTwoFactorTokenAsync({TUser},System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateTwoFactorTokenAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetTwoFactorEnabledAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetTwoFactorEnabledAsync({TUser},System.Boolean)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsLockedOutAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetLockoutEnabledAsync({TUser},System.Boolean)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetLockoutEnabledAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetLockoutEndDateAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetLockoutEndDateAsync({TUser},System.Nullable{System.DateTimeOffset})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AccessFailedAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetAccessFailedCountAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetAccessFailedCountAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUsersForClaimAsync(System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUsersInRoleAsync(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetAuthenticationTokenAsync({TUser},System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetAuthenticationTokenAsync({TUser},System.String,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveAuthenticationTokenAsync({TUser},System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetAuthenticatorKeyAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetAuthenticatorKeyAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateNewAuthenticatorKey
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateNewTwoFactorRecoveryCodesAsync({TUser},System.Int32)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateTwoFactorRecoveryCode
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RedeemTwoFactorRecoveryCodeAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CountRecoveryCodesAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Dispose(System.Boolean)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateSecurityTokenAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdatePasswordHash({TUser},System.String,System.Boolean)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetChangeEmailTokenPurpose(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ValidateUserAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ValidatePasswordAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateUserAsync({TUser})
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ThrowIfDisposed
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CancellationToken
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Store
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Logger
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.PasswordHasher
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UserValidators
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.PasswordValidators
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.KeyNormalizer
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ErrorDescriber
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Options
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserAuthenticationTokens
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserAuthenticatorKey
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserTwoFactorRecoveryCodes
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserTwoFactor
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserPassword
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserSecurityStamp
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserRole
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserLogin
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserEmail
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserPhoneNumber
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserClaim
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserLockout
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsQueryableUsers
  - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Users
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
  - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser)
  name.vb: IdentityUserManager(Of TUserId, TUser)
- uid: es.efor.Auth.Managers.IdentityUserManager`2.#ctor(Microsoft.AspNetCore.Identity.IUserStore{`1},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Identity.IPasswordHasher{`1},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{`1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{`1}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{`1}})
  commentId: M:es.efor.Auth.Managers.IdentityUserManager`2.#ctor(Microsoft.AspNetCore.Identity.IUserStore{`1},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Identity.IPasswordHasher{`1},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{`1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{`1}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{`1}})
  id: '#ctor(Microsoft.AspNetCore.Identity.IUserStore{`1},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Identity.IPasswordHasher{`1},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{`1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{`1}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{`1}})'
  parent: es.efor.Auth.Managers.IdentityUserManager`2
  langs:
  - csharp
  - vb
  name: IdentityUserManager(IUserStore<TUser>, IOptions<IdentityOptions>, IPasswordHasher<TUser>, IEnumerable<IUserValidator<TUser>>, IEnumerable<IPasswordValidator<TUser>>, ILookupNormalizer, IdentityErrorDescriber, IServiceProvider, ILogger<UserManager<TUser>>)
  nameWithType: IdentityUserManager<TUserId, TUser>.IdentityUserManager(IUserStore<TUser>, IOptions<IdentityOptions>, IPasswordHasher<TUser>, IEnumerable<IUserValidator<TUser>>, IEnumerable<IPasswordValidator<TUser>>, ILookupNormalizer, IdentityErrorDescriber, IServiceProvider, ILogger<UserManager<TUser>>)
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.IdentityUserManager(Microsoft.AspNetCore.Identity.IUserStore<TUser>, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.IdentityOptions>, Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IUserValidator<TUser>>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IPasswordValidator<TUser>>, Microsoft.AspNetCore.Identity.ILookupNormalizer, Microsoft.AspNetCore.Identity.IdentityErrorDescriber, System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<Microsoft.AspNetCore.Identity.UserManager<TUser>>)
  type: Constructor
  source:
    remote:
      path: es.efor.Auth/Managers/IdentityUserManager.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: .ctor
    path: ../es.efor.Auth/Managers/IdentityUserManager.cs
    startLine: 16
  assemblies:
  - es.efor.Auth
  namespace: es.efor.Auth.Managers
  syntax:
    content: public IdentityUserManager(IUserStore<TUser> store, IOptions<IdentityOptions> optionsAccessor, IPasswordHasher<TUser> passwordHasher, IEnumerable<IUserValidator<TUser>> userValidators, IEnumerable<IPasswordValidator<TUser>> passwordValidators, ILookupNormalizer keyNormalizer, IdentityErrorDescriber errors, IServiceProvider services, ILogger<UserManager<TUser>> logger)
    parameters:
    - id: store
      type: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
    - id: optionsAccessor
      type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}
    - id: passwordHasher
      type: Microsoft.AspNetCore.Identity.IPasswordHasher{{TUser}}
    - id: userValidators
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{{TUser}}}
    - id: passwordValidators
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{{TUser}}}
    - id: keyNormalizer
      type: Microsoft.AspNetCore.Identity.ILookupNormalizer
    - id: errors
      type: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
    - id: services
      type: System.IServiceProvider
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{{TUser}}}
    content.vb: Public Sub New(store As IUserStore(Of TUser), optionsAccessor As IOptions(Of IdentityOptions), passwordHasher As IPasswordHasher(Of TUser), userValidators As IEnumerable(Of IUserValidator(Of TUser)), passwordValidators As IEnumerable(Of IPasswordValidator(Of TUser)), keyNormalizer As ILookupNormalizer, errors As IdentityErrorDescriber, services As IServiceProvider, logger As ILogger(Of UserManager(Of TUser)))
  overload: es.efor.Auth.Managers.IdentityUserManager`2.#ctor*
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser).IdentityUserManager(IUserStore(Of TUser), IOptions(Of IdentityOptions), IPasswordHasher(Of TUser), IEnumerable(Of IUserValidator(Of TUser)), IEnumerable(Of IPasswordValidator(Of TUser)), ILookupNormalizer, IdentityErrorDescriber, IServiceProvider, ILogger(Of UserManager(Of TUser)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).IdentityUserManager(Microsoft.AspNetCore.Identity.IUserStore(Of TUser), Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Identity.IdentityOptions), Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Identity.IUserValidator(Of TUser)), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Identity.IPasswordValidator(Of TUser)), Microsoft.AspNetCore.Identity.ILookupNormalizer, Microsoft.AspNetCore.Identity.IdentityErrorDescriber, System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of Microsoft.AspNetCore.Identity.UserManager(Of TUser)))
  name.vb: IdentityUserManager(IUserStore(Of TUser), IOptions(Of IdentityOptions), IPasswordHasher(Of TUser), IEnumerable(Of IUserValidator(Of TUser)), IEnumerable(Of IPasswordValidator(Of TUser)), ILookupNormalizer, IdentityErrorDescriber, IServiceProvider, ILogger(Of UserManager(Of TUser)))
- uid: es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync(System.Collections.Generic.IEnumerable{`0})
  commentId: M:es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync(System.Collections.Generic.IEnumerable{`0})
  id: FindByIdAsync(System.Collections.Generic.IEnumerable{`0})
  parent: es.efor.Auth.Managers.IdentityUserManager`2
  langs:
  - csharp
  - vb
  name: FindByIdAsync(IEnumerable<TUserId>)
  nameWithType: IdentityUserManager<TUserId, TUser>.FindByIdAsync(IEnumerable<TUserId>)
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.FindByIdAsync(System.Collections.Generic.IEnumerable<TUserId>)
  type: Method
  source:
    remote:
      path: es.efor.Auth/Managers/IdentityUserManager.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: FindByIdAsync
    path: ../es.efor.Auth/Managers/IdentityUserManager.cs
    startLine: 27
  assemblies:
  - es.efor.Auth
  namespace: es.efor.Auth.Managers
  syntax:
    content: public virtual Task<IEnumerable<TUser>> FindByIdAsync(IEnumerable<TUserId> userIds)
    parameters:
    - id: userIds
      type: System.Collections.Generic.IEnumerable{{TUserId}}
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TUser}}}
    content.vb: Public Overridable Function FindByIdAsync(userIds As IEnumerable(Of TUserId)) As Task(Of IEnumerable(Of TUser))
  overload: es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync*
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser).FindByIdAsync(IEnumerable(Of TUserId))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).FindByIdAsync(System.Collections.Generic.IEnumerable(Of TUserId))
  name.vb: FindByIdAsync(IEnumerable(Of TUserId))
- uid: es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync(`0)
  commentId: M:es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync(`0)
  id: FindByIdAsync(`0)
  parent: es.efor.Auth.Managers.IdentityUserManager`2
  langs:
  - csharp
  - vb
  name: FindByIdAsync(TUserId)
  nameWithType: IdentityUserManager<TUserId, TUser>.FindByIdAsync(TUserId)
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.FindByIdAsync(TUserId)
  type: Method
  source:
    remote:
      path: es.efor.Auth/Managers/IdentityUserManager.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: FindByIdAsync
    path: ../es.efor.Auth/Managers/IdentityUserManager.cs
    startLine: 35
  assemblies:
  - es.efor.Auth
  namespace: es.efor.Auth.Managers
  syntax:
    content: public virtual Task<TUser> FindByIdAsync(TUserId userId)
    parameters:
    - id: userId
      type: '{TUserId}'
    return:
      type: System.Threading.Tasks.Task{{TUser}}
    content.vb: Public Overridable Function FindByIdAsync(userId As TUserId) As Task(Of TUser)
  overload: es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync*
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser).FindByIdAsync(TUserId)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).FindByIdAsync(TUserId)
- uid: es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync(System.Collections.Generic.IEnumerable{`1})
  commentId: M:es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync(System.Collections.Generic.IEnumerable{`1})
  id: UpdateAsync(System.Collections.Generic.IEnumerable{`1})
  parent: es.efor.Auth.Managers.IdentityUserManager`2
  langs:
  - csharp
  - vb
  name: UpdateAsync(IEnumerable<TUser>)
  nameWithType: IdentityUserManager<TUserId, TUser>.UpdateAsync(IEnumerable<TUser>)
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.UpdateAsync(System.Collections.Generic.IEnumerable<TUser>)
  type: Method
  source:
    remote:
      path: es.efor.Auth/Managers/IdentityUserManager.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: UpdateAsync
    path: ../es.efor.Auth/Managers/IdentityUserManager.cs
    startLine: 40
  assemblies:
  - es.efor.Auth
  namespace: es.efor.Auth.Managers
  syntax:
    content: public virtual Task<Dictionary<TUserId, IdentityResult>> UpdateAsync(IEnumerable<TUser> users)
    parameters:
    - id: users
      type: System.Collections.Generic.IEnumerable{{TUser}}
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{{TUserId},Microsoft.AspNetCore.Identity.IdentityResult}}
    content.vb: Public Overridable Function UpdateAsync(users As IEnumerable(Of TUser)) As Task(Of Dictionary(Of TUserId, IdentityResult))
  overload: es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync*
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser).UpdateAsync(IEnumerable(Of TUser))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).UpdateAsync(System.Collections.Generic.IEnumerable(Of TUser))
  name.vb: UpdateAsync(IEnumerable(Of TUser))
- uid: es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync(`1,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync(`1,System.Collections.Generic.IEnumerable{System.String})
  id: IsInAllRolesAsync(`1,System.Collections.Generic.IEnumerable{System.String})
  parent: es.efor.Auth.Managers.IdentityUserManager`2
  langs:
  - csharp
  - vb
  name: IsInAllRolesAsync(TUser, IEnumerable<String>)
  nameWithType: IdentityUserManager<TUserId, TUser>.IsInAllRolesAsync(TUser, IEnumerable<String>)
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.IsInAllRolesAsync(TUser, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: es.efor.Auth/Managers/IdentityUserManager.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: IsInAllRolesAsync
    path: ../es.efor.Auth/Managers/IdentityUserManager.cs
    startLine: 53
  assemblies:
  - es.efor.Auth
  namespace: es.efor.Auth.Managers
  syntax:
    content: public virtual Task<bool> IsInAllRolesAsync(TUser user, IEnumerable<string> roles)
    parameters:
    - id: user
      type: '{TUser}'
    - id: roles
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Overridable Function IsInAllRolesAsync(user As TUser, roles As IEnumerable(Of String)) As Task(Of Boolean)
  overload: es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync*
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser).IsInAllRolesAsync(TUser, IEnumerable(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).IsInAllRolesAsync(TUser, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: IsInAllRolesAsync(TUser, IEnumerable(Of String))
- uid: es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync(`1,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync(`1,System.Collections.Generic.IEnumerable{System.String})
  id: IsInAnyRoleAsync(`1,System.Collections.Generic.IEnumerable{System.String})
  parent: es.efor.Auth.Managers.IdentityUserManager`2
  langs:
  - csharp
  - vb
  name: IsInAnyRoleAsync(TUser, IEnumerable<String>)
  nameWithType: IdentityUserManager<TUserId, TUser>.IsInAnyRoleAsync(TUser, IEnumerable<String>)
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.IsInAnyRoleAsync(TUser, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: es.efor.Auth/Managers/IdentityUserManager.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: IsInAnyRoleAsync
    path: ../es.efor.Auth/Managers/IdentityUserManager.cs
    startLine: 70
  assemblies:
  - es.efor.Auth
  namespace: es.efor.Auth.Managers
  syntax:
    content: public virtual Task<bool> IsInAnyRoleAsync(TUser user, IEnumerable<string> roles)
    parameters:
    - id: user
      type: '{TUser}'
    - id: roles
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Overridable Function IsInAnyRoleAsync(user As TUser, roles As IEnumerable(Of String)) As Task(Of Boolean)
  overload: es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync*
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser).IsInAnyRoleAsync(TUser, IEnumerable(Of String))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).IsInAnyRoleAsync(TUser, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: IsInAnyRoleAsync(TUser, IEnumerable(Of String))
references:
- uid: es.efor.Auth.Managers
  commentId: N:es.efor.Auth.Managers
  name: es.efor.Auth.Managers
  nameWithType: es.efor.Auth.Managers
  fullName: es.efor.Auth.Managers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.UserManager{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetPasswordTokenPurpose
  commentId: F:Microsoft.AspNetCore.Identity.UserManager{`1}.ResetPasswordTokenPurpose
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose
  name: ResetPasswordTokenPurpose
  nameWithType: UserManager<TUser>.ResetPasswordTokenPurpose
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordTokenPurpose
  nameWithType.vb: UserManager(Of TUser).ResetPasswordTokenPurpose
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordTokenPurpose
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangePhoneNumberTokenPurpose
  commentId: F:Microsoft.AspNetCore.Identity.UserManager{`1}.ChangePhoneNumberTokenPurpose
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberTokenPurpose
  name: ChangePhoneNumberTokenPurpose
  nameWithType: UserManager<TUser>.ChangePhoneNumberTokenPurpose
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePhoneNumberTokenPurpose
  nameWithType.vb: UserManager(Of TUser).ChangePhoneNumberTokenPurpose
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePhoneNumberTokenPurpose
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ConfirmEmailTokenPurpose
  commentId: F:Microsoft.AspNetCore.Identity.UserManager{`1}.ConfirmEmailTokenPurpose
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose
  name: ConfirmEmailTokenPurpose
  nameWithType: UserManager<TUser>.ConfirmEmailTokenPurpose
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailTokenPurpose
  nameWithType.vb: UserManager(Of TUser).ConfirmEmailTokenPurpose
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailTokenPurpose
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.Dispose
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
  name: Dispose()
  nameWithType: UserManager<TUser>.Dispose()
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose()
  nameWithType.vb: UserManager(Of TUser).Dispose()
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
    name: Dispose
    nameWithType: UserManager<TUser>.Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
    name: Dispose
    nameWithType: UserManager(Of TUser).Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserName(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUserName(System.Security.Claims.ClaimsPrincipal)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
  name: GetUserName(ClaimsPrincipal)
  nameWithType: UserManager<TUser>.GetUserName(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserName(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: UserManager(Of TUser).GetUserName(ClaimsPrincipal)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserName(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
    name: GetUserName
    nameWithType: UserManager<TUser>.GetUserName
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
    name: GetUserName
    nameWithType: UserManager(Of TUser).GetUserName
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserId(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUserId(System.Security.Claims.ClaimsPrincipal)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
  name: GetUserId(ClaimsPrincipal)
  nameWithType: UserManager<TUser>.GetUserId(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserId(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: UserManager(Of TUser).GetUserId(ClaimsPrincipal)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserId(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
    name: GetUserId
    nameWithType: UserManager<TUser>.GetUserId
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
    name: GetUserId
    nameWithType: UserManager(Of TUser).GetUserId
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  name: GetUserAsync(ClaimsPrincipal)
  nameWithType: UserManager<TUser>.GetUserAsync(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: UserManager(Of TUser).GetUserAsync(ClaimsPrincipal)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
    name: GetUserAsync
    nameWithType: UserManager<TUser>.GetUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
    name: GetUserAsync
    nameWithType: UserManager(Of TUser).GetUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateConcurrencyStampAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateConcurrencyStampAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
  name: GenerateConcurrencyStampAsync(TUser)
  nameWithType: UserManager<TUser>.GenerateConcurrencyStampAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateConcurrencyStampAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GenerateConcurrencyStampAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateConcurrencyStampAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
    name: GenerateConcurrencyStampAsync
    nameWithType: UserManager<TUser>.GenerateConcurrencyStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateConcurrencyStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
    name: GenerateConcurrencyStampAsync
    nameWithType: UserManager(Of TUser).GenerateConcurrencyStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateConcurrencyStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.CreateAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
  name: CreateAsync(TUser)
  nameWithType: UserManager<TUser>.CreateAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).CreateAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserManager<TUser>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserManager(Of TUser).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.UpdateAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
  name: UpdateAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserManager<TUser>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserManager(Of TUser).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.DeleteAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.DeleteAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
  name: DeleteAsync(TUser)
  nameWithType: UserManager<TUser>.DeleteAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.DeleteAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).DeleteAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).DeleteAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserManager<TUser>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserManager(Of TUser).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByIdAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.FindByIdAsync(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
  name: FindByIdAsync(String)
  nameWithType: UserManager<TUser>.FindByIdAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByIdAsync(System.String)
  nameWithType.vb: UserManager(Of TUser).FindByIdAsync(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByIdAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
    name: FindByIdAsync
    nameWithType: UserManager<TUser>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
    name: FindByIdAsync
    nameWithType: UserManager(Of TUser).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByNameAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.FindByNameAsync(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
  name: FindByNameAsync(String)
  nameWithType: UserManager<TUser>.FindByNameAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByNameAsync(System.String)
  nameWithType.vb: UserManager(Of TUser).FindByNameAsync(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByNameAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserManager<TUser>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserManager(Of TUser).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.CreateAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
  name: CreateAsync(TUser, String)
  nameWithType: UserManager<TUser>.CreateAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).CreateAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
    name: CreateAsync
    nameWithType: UserManager<TUser>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
    name: CreateAsync
    nameWithType: UserManager(Of TUser).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.NormalizeName(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.NormalizeName(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
  name: NormalizeName(String)
  nameWithType: UserManager<TUser>.NormalizeName(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeName(System.String)
  nameWithType.vb: UserManager(Of TUser).NormalizeName(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeName(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
    name: NormalizeName
    nameWithType: UserManager<TUser>.NormalizeName
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
    name: NormalizeName
    nameWithType: UserManager(Of TUser).NormalizeName
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.NormalizeEmail(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.NormalizeEmail(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
  name: NormalizeEmail(String)
  nameWithType: UserManager<TUser>.NormalizeEmail(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeEmail(System.String)
  nameWithType.vb: UserManager(Of TUser).NormalizeEmail(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeEmail(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
    name: NormalizeEmail
    nameWithType: UserManager<TUser>.NormalizeEmail
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeEmail
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
    name: NormalizeEmail
    nameWithType: UserManager(Of TUser).NormalizeEmail
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeEmail
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateNormalizedUserNameAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.UpdateNormalizedUserNameAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
  name: UpdateNormalizedUserNameAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateNormalizedUserNameAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedUserNameAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateNormalizedUserNameAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedUserNameAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
    name: UpdateNormalizedUserNameAsync
    nameWithType: UserManager<TUser>.UpdateNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
    name: UpdateNormalizedUserNameAsync
    nameWithType: UserManager(Of TUser).UpdateNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserNameAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUserNameAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
  name: GetUserNameAsync(TUser)
  nameWithType: UserManager<TUser>.GetUserNameAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserNameAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetUserNameAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserNameAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
    name: GetUserNameAsync
    nameWithType: UserManager<TUser>.GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
    name: GetUserNameAsync
    nameWithType: UserManager(Of TUser).GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetUserNameAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetUserNameAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
  name: SetUserNameAsync(TUser, String)
  nameWithType: UserManager<TUser>.SetUserNameAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetUserNameAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).SetUserNameAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetUserNameAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
    name: SetUserNameAsync
    nameWithType: UserManager<TUser>.SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
    name: SetUserNameAsync
    nameWithType: UserManager(Of TUser).SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserIdAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUserIdAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
  name: GetUserIdAsync(TUser)
  nameWithType: UserManager<TUser>.GetUserIdAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserIdAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetUserIdAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserIdAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
    name: GetUserIdAsync
    nameWithType: UserManager<TUser>.GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
    name: GetUserIdAsync
    nameWithType: UserManager(Of TUser).GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CheckPasswordAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.CheckPasswordAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
  name: CheckPasswordAsync(TUser, String)
  nameWithType: UserManager<TUser>.CheckPasswordAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CheckPasswordAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).CheckPasswordAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CheckPasswordAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
    name: CheckPasswordAsync
    nameWithType: UserManager<TUser>.CheckPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CheckPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
    name: CheckPasswordAsync
    nameWithType: UserManager(Of TUser).CheckPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CheckPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.HasPasswordAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.HasPasswordAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
  name: HasPasswordAsync(TUser)
  nameWithType: UserManager<TUser>.HasPasswordAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.HasPasswordAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).HasPasswordAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).HasPasswordAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
    name: HasPasswordAsync
    nameWithType: UserManager<TUser>.HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
    name: HasPasswordAsync
    nameWithType: UserManager(Of TUser).HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddPasswordAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AddPasswordAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
  name: AddPasswordAsync(TUser, String)
  nameWithType: UserManager<TUser>.AddPasswordAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddPasswordAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).AddPasswordAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddPasswordAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
    name: AddPasswordAsync
    nameWithType: UserManager<TUser>.AddPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
    name: AddPasswordAsync
    nameWithType: UserManager(Of TUser).AddPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangePasswordAsync({TUser},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ChangePasswordAsync(`1,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
  name: ChangePasswordAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.ChangePasswordAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePasswordAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).ChangePasswordAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePasswordAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
    name: ChangePasswordAsync
    nameWithType: UserManager<TUser>.ChangePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
    name: ChangePasswordAsync
    nameWithType: UserManager(Of TUser).ChangePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemovePasswordAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemovePasswordAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
  name: RemovePasswordAsync(TUser)
  nameWithType: UserManager<TUser>.RemovePasswordAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemovePasswordAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).RemovePasswordAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemovePasswordAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
    name: RemovePasswordAsync
    nameWithType: UserManager<TUser>.RemovePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemovePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
    name: RemovePasswordAsync
    nameWithType: UserManager(Of TUser).RemovePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemovePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{{TUser}},{TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`1},`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
  name: VerifyPasswordAsync(IUserPasswordStore<TUser>, TUser, String)
  nameWithType: UserManager<TUser>.VerifyPasswordAsync(IUserPasswordStore<TUser>, TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser>, TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).VerifyPasswordAsync(IUserPasswordStore(Of TUser), TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore(Of TUser), TUser, System.String)
  name.vb: VerifyPasswordAsync(IUserPasswordStore(Of TUser), TUser, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
    name: VerifyPasswordAsync
    nameWithType: UserManager<TUser>.VerifyPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
    name: VerifyPasswordAsync
    nameWithType: UserManager(Of TUser).VerifyPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetSecurityStampAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetSecurityStampAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
  name: GetSecurityStampAsync(TUser)
  nameWithType: UserManager<TUser>.GetSecurityStampAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetSecurityStampAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetSecurityStampAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetSecurityStampAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
    name: GetSecurityStampAsync
    nameWithType: UserManager<TUser>.GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
    name: GetSecurityStampAsync
    nameWithType: UserManager(Of TUser).GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateSecurityStampAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.UpdateSecurityStampAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
  name: UpdateSecurityStampAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateSecurityStampAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateSecurityStampAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateSecurityStampAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateSecurityStampAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
    name: UpdateSecurityStampAsync
    nameWithType: UserManager<TUser>.UpdateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
    name: UpdateSecurityStampAsync
    nameWithType: UserManager(Of TUser).UpdateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GeneratePasswordResetTokenAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GeneratePasswordResetTokenAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
  name: GeneratePasswordResetTokenAsync(TUser)
  nameWithType: UserManager<TUser>.GeneratePasswordResetTokenAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GeneratePasswordResetTokenAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GeneratePasswordResetTokenAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GeneratePasswordResetTokenAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
    name: GeneratePasswordResetTokenAsync
    nameWithType: UserManager<TUser>.GeneratePasswordResetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GeneratePasswordResetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
    name: GeneratePasswordResetTokenAsync
    nameWithType: UserManager(Of TUser).GeneratePasswordResetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GeneratePasswordResetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetPasswordAsync({TUser},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ResetPasswordAsync(`1,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
  name: ResetPasswordAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.ResetPasswordAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).ResetPasswordAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
    name: ResetPasswordAsync
    nameWithType: UserManager<TUser>.ResetPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
    name: ResetPasswordAsync
    nameWithType: UserManager(Of TUser).ResetPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByLoginAsync(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.FindByLoginAsync(System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
  name: FindByLoginAsync(String, String)
  nameWithType: UserManager<TUser>.FindByLoginAsync(String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByLoginAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).FindByLoginAsync(String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByLoginAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
    name: FindByLoginAsync
    nameWithType: UserManager<TUser>.FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
    name: FindByLoginAsync
    nameWithType: UserManager(Of TUser).FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveLoginAsync({TUser},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemoveLoginAsync(`1,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
  name: RemoveLoginAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.RemoveLoginAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveLoginAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).RemoveLoginAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveLoginAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
    name: RemoveLoginAsync
    nameWithType: UserManager<TUser>.RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
    name: RemoveLoginAsync
    nameWithType: UserManager(Of TUser).RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddLoginAsync({TUser},Microsoft.AspNetCore.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AddLoginAsync(`1,Microsoft.AspNetCore.Identity.UserLoginInfo)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  name: AddLoginAsync(TUser, UserLoginInfo)
  nameWithType: UserManager<TUser>.AddLoginAsync(TUser, UserLoginInfo)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  nameWithType.vb: UserManager(Of TUser).AddLoginAsync(TUser, UserLoginInfo)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserManager<TUser>.AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserManager(Of TUser).AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetLoginsAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetLoginsAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
  name: GetLoginsAsync(TUser)
  nameWithType: UserManager<TUser>.GetLoginsAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLoginsAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetLoginsAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLoginsAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
    name: GetLoginsAsync
    nameWithType: UserManager<TUser>.GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
    name: GetLoginsAsync
    nameWithType: UserManager(Of TUser).GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddClaimAsync({TUser},System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AddClaimAsync(`1,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
  name: AddClaimAsync(TUser, Claim)
  nameWithType: UserManager<TUser>.AddClaimAsync(TUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimAsync(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser).AddClaimAsync(TUser, Claim)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimAsync(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserManager<TUser>.AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserManager(Of TUser).AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddClaimsAsync({TUser},System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AddClaimsAsync(`1,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  name: AddClaimsAsync(TUser, IEnumerable<Claim>)
  nameWithType: UserManager<TUser>.AddClaimsAsync(TUser, IEnumerable<Claim>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  nameWithType.vb: UserManager(Of TUser).AddClaimsAsync(TUser, IEnumerable(Of Claim))
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: AddClaimsAsync(TUser, IEnumerable(Of Claim))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: AddClaimsAsync
    nameWithType: UserManager<TUser>.AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: AddClaimsAsync
    nameWithType: UserManager(Of TUser).AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ReplaceClaimAsync({TUser},System.Security.Claims.Claim,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ReplaceClaimAsync(`1,System.Security.Claims.Claim,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
  name: ReplaceClaimAsync(TUser, Claim, Claim)
  nameWithType: UserManager<TUser>.ReplaceClaimAsync(TUser, Claim, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser).ReplaceClaimAsync(TUser, Claim, Claim)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
    name: ReplaceClaimAsync
    nameWithType: UserManager<TUser>.ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ReplaceClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
    name: ReplaceClaimAsync
    nameWithType: UserManager(Of TUser).ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ReplaceClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveClaimAsync({TUser},System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemoveClaimAsync(`1,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
  name: RemoveClaimAsync(TUser, Claim)
  nameWithType: UserManager<TUser>.RemoveClaimAsync(TUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimAsync(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser).RemoveClaimAsync(TUser, Claim)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimAsync(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserManager<TUser>.RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserManager(Of TUser).RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveClaimsAsync({TUser},System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemoveClaimsAsync(`1,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  name: RemoveClaimsAsync(TUser, IEnumerable<Claim>)
  nameWithType: UserManager<TUser>.RemoveClaimsAsync(TUser, IEnumerable<Claim>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  nameWithType.vb: UserManager(Of TUser).RemoveClaimsAsync(TUser, IEnumerable(Of Claim))
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: RemoveClaimsAsync(TUser, IEnumerable(Of Claim))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: RemoveClaimsAsync
    nameWithType: UserManager<TUser>.RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: RemoveClaimsAsync
    nameWithType: UserManager(Of TUser).RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetClaimsAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetClaimsAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
  name: GetClaimsAsync(TUser)
  nameWithType: UserManager<TUser>.GetClaimsAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetClaimsAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetClaimsAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetClaimsAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
    name: GetClaimsAsync
    nameWithType: UserManager<TUser>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
    name: GetClaimsAsync
    nameWithType: UserManager(Of TUser).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddToRoleAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AddToRoleAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
  name: AddToRoleAsync(TUser, String)
  nameWithType: UserManager<TUser>.AddToRoleAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRoleAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).AddToRoleAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
    name: AddToRoleAsync
    nameWithType: UserManager<TUser>.AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
    name: AddToRoleAsync
    nameWithType: UserManager(Of TUser).AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddToRolesAsync({TUser},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AddToRolesAsync(`1,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  name: AddToRolesAsync(TUser, IEnumerable<String>)
  nameWithType: UserManager<TUser>.AddToRolesAsync(TUser, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRolesAsync(TUser, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: UserManager(Of TUser).AddToRolesAsync(TUser, IEnumerable(Of String))
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRolesAsync(TUser, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: AddToRolesAsync(TUser, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: AddToRolesAsync
    nameWithType: UserManager<TUser>.AddToRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: AddToRolesAsync
    nameWithType: UserManager(Of TUser).AddToRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveFromRoleAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemoveFromRoleAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
  name: RemoveFromRoleAsync(TUser, String)
  nameWithType: UserManager<TUser>.RemoveFromRoleAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRoleAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).RemoveFromRoleAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserManager<TUser>.RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserManager(Of TUser).RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveFromRolesAsync({TUser},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemoveFromRolesAsync(`1,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  name: RemoveFromRolesAsync(TUser, IEnumerable<String>)
  nameWithType: UserManager<TUser>.RemoveFromRolesAsync(TUser, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRolesAsync(TUser, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: UserManager(Of TUser).RemoveFromRolesAsync(TUser, IEnumerable(Of String))
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRolesAsync(TUser, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RemoveFromRolesAsync(TUser, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: RemoveFromRolesAsync
    nameWithType: UserManager<TUser>.RemoveFromRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: RemoveFromRolesAsync
    nameWithType: UserManager(Of TUser).RemoveFromRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetRolesAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetRolesAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
  name: GetRolesAsync(TUser)
  nameWithType: UserManager<TUser>.GetRolesAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetRolesAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetRolesAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetRolesAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
    name: GetRolesAsync
    nameWithType: UserManager<TUser>.GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
    name: GetRolesAsync
    nameWithType: UserManager(Of TUser).GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsInRoleAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.IsInRoleAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
  name: IsInRoleAsync(TUser, String)
  nameWithType: UserManager<TUser>.IsInRoleAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsInRoleAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).IsInRoleAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsInRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
    name: IsInRoleAsync
    nameWithType: UserManager<TUser>.IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
    name: IsInRoleAsync
    nameWithType: UserManager(Of TUser).IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetEmailAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetEmailAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
  name: GetEmailAsync(TUser)
  nameWithType: UserManager<TUser>.GetEmailAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetEmailAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetEmailAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetEmailAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
    name: GetEmailAsync
    nameWithType: UserManager<TUser>.GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
    name: GetEmailAsync
    nameWithType: UserManager(Of TUser).GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetEmailAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetEmailAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
  name: SetEmailAsync(TUser, String)
  nameWithType: UserManager<TUser>.SetEmailAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetEmailAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).SetEmailAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetEmailAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
    name: SetEmailAsync
    nameWithType: UserManager<TUser>.SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
    name: SetEmailAsync
    nameWithType: UserManager(Of TUser).SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByEmailAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.FindByEmailAsync(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
  name: FindByEmailAsync(String)
  nameWithType: UserManager<TUser>.FindByEmailAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByEmailAsync(System.String)
  nameWithType.vb: UserManager(Of TUser).FindByEmailAsync(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByEmailAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserManager<TUser>.FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserManager(Of TUser).FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateNormalizedEmailAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.UpdateNormalizedEmailAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
  name: UpdateNormalizedEmailAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateNormalizedEmailAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedEmailAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateNormalizedEmailAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedEmailAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
    name: UpdateNormalizedEmailAsync
    nameWithType: UserManager<TUser>.UpdateNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
    name: UpdateNormalizedEmailAsync
    nameWithType: UserManager(Of TUser).UpdateNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateEmailConfirmationTokenAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateEmailConfirmationTokenAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
  name: GenerateEmailConfirmationTokenAsync(TUser)
  nameWithType: UserManager<TUser>.GenerateEmailConfirmationTokenAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateEmailConfirmationTokenAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GenerateEmailConfirmationTokenAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateEmailConfirmationTokenAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
    name: GenerateEmailConfirmationTokenAsync
    nameWithType: UserManager<TUser>.GenerateEmailConfirmationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateEmailConfirmationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
    name: GenerateEmailConfirmationTokenAsync
    nameWithType: UserManager(Of TUser).GenerateEmailConfirmationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateEmailConfirmationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ConfirmEmailAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ConfirmEmailAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
  name: ConfirmEmailAsync(TUser, String)
  nameWithType: UserManager<TUser>.ConfirmEmailAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).ConfirmEmailAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
    name: ConfirmEmailAsync
    nameWithType: UserManager<TUser>.ConfirmEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
    name: ConfirmEmailAsync
    nameWithType: UserManager(Of TUser).ConfirmEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsEmailConfirmedAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.IsEmailConfirmedAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
  name: IsEmailConfirmedAsync(TUser)
  nameWithType: UserManager<TUser>.IsEmailConfirmedAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsEmailConfirmedAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).IsEmailConfirmedAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsEmailConfirmedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
    name: IsEmailConfirmedAsync
    nameWithType: UserManager<TUser>.IsEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
    name: IsEmailConfirmedAsync
    nameWithType: UserManager(Of TUser).IsEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateChangeEmailTokenAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateChangeEmailTokenAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
  name: GenerateChangeEmailTokenAsync(TUser, String)
  nameWithType: UserManager<TUser>.GenerateChangeEmailTokenAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangeEmailTokenAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).GenerateChangeEmailTokenAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangeEmailTokenAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
    name: GenerateChangeEmailTokenAsync
    nameWithType: UserManager<TUser>.GenerateChangeEmailTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangeEmailTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
    name: GenerateChangeEmailTokenAsync
    nameWithType: UserManager(Of TUser).GenerateChangeEmailTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangeEmailTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangeEmailAsync({TUser},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ChangeEmailAsync(`1,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
  name: ChangeEmailAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.ChangeEmailAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangeEmailAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).ChangeEmailAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangeEmailAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
    name: ChangeEmailAsync
    nameWithType: UserManager<TUser>.ChangeEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangeEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
    name: ChangeEmailAsync
    nameWithType: UserManager(Of TUser).ChangeEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangeEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetPhoneNumberAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetPhoneNumberAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
  name: GetPhoneNumberAsync(TUser)
  nameWithType: UserManager<TUser>.GetPhoneNumberAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetPhoneNumberAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetPhoneNumberAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetPhoneNumberAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
    name: GetPhoneNumberAsync
    nameWithType: UserManager<TUser>.GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
    name: GetPhoneNumberAsync
    nameWithType: UserManager(Of TUser).GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetPhoneNumberAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetPhoneNumberAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
  name: SetPhoneNumberAsync(TUser, String)
  nameWithType: UserManager<TUser>.SetPhoneNumberAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetPhoneNumberAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).SetPhoneNumberAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetPhoneNumberAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserManager<TUser>.SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserManager(Of TUser).SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangePhoneNumberAsync({TUser},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ChangePhoneNumberAsync(`1,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
  name: ChangePhoneNumberAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.ChangePhoneNumberAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePhoneNumberAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).ChangePhoneNumberAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePhoneNumberAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
    name: ChangePhoneNumberAsync
    nameWithType: UserManager<TUser>.ChangePhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
    name: ChangePhoneNumberAsync
    nameWithType: UserManager(Of TUser).ChangePhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsPhoneNumberConfirmedAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.IsPhoneNumberConfirmedAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
  name: IsPhoneNumberConfirmedAsync(TUser)
  nameWithType: UserManager<TUser>.IsPhoneNumberConfirmedAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsPhoneNumberConfirmedAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).IsPhoneNumberConfirmedAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsPhoneNumberConfirmedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
    name: IsPhoneNumberConfirmedAsync
    nameWithType: UserManager<TUser>.IsPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
    name: IsPhoneNumberConfirmedAsync
    nameWithType: UserManager(Of TUser).IsPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateChangePhoneNumberTokenAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateChangePhoneNumberTokenAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
  name: GenerateChangePhoneNumberTokenAsync(TUser, String)
  nameWithType: UserManager<TUser>.GenerateChangePhoneNumberTokenAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangePhoneNumberTokenAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
    name: GenerateChangePhoneNumberTokenAsync
    nameWithType: UserManager<TUser>.GenerateChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
    name: GenerateChangePhoneNumberTokenAsync
    nameWithType: UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyChangePhoneNumberTokenAsync({TUser},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
  name: VerifyChangePhoneNumberTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.VerifyChangePhoneNumberTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyChangePhoneNumberTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
    name: VerifyChangePhoneNumberTokenAsync
    nameWithType: UserManager<TUser>.VerifyChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
    name: VerifyChangePhoneNumberTokenAsync
    nameWithType: UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyUserTokenAsync({TUser},System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.VerifyUserTokenAsync(`1,System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
  name: VerifyUserTokenAsync(TUser, String, String, String)
  nameWithType: UserManager<TUser>.VerifyUserTokenAsync(TUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyUserTokenAsync(TUser, System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).VerifyUserTokenAsync(TUser, String, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyUserTokenAsync(TUser, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
    name: VerifyUserTokenAsync
    nameWithType: UserManager<TUser>.VerifyUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
    name: VerifyUserTokenAsync
    nameWithType: UserManager(Of TUser).VerifyUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateUserTokenAsync({TUser},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateUserTokenAsync(`1,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
  name: GenerateUserTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.GenerateUserTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateUserTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).GenerateUserTokenAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateUserTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
    name: GenerateUserTokenAsync
    nameWithType: UserManager<TUser>.GenerateUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
    name: GenerateUserTokenAsync
    nameWithType: UserManager(Of TUser).GenerateUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{{TUser}})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`1})
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
  name: RegisterTokenProvider(String, IUserTwoFactorTokenProvider<TUser>)
  nameWithType: UserManager<TUser>.RegisterTokenProvider(String, IUserTwoFactorTokenProvider<TUser>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RegisterTokenProvider(System.String, Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider<TUser>)
  nameWithType.vb: UserManager(Of TUser).RegisterTokenProvider(String, IUserTwoFactorTokenProvider(Of TUser))
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RegisterTokenProvider(System.String, Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider(Of TUser))
  name.vb: RegisterTokenProvider(String, IUserTwoFactorTokenProvider(Of TUser))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
    name: RegisterTokenProvider
    nameWithType: UserManager<TUser>.RegisterTokenProvider
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RegisterTokenProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1
    name: IUserTwoFactorTokenProvider
    nameWithType: IUserTwoFactorTokenProvider
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
    name: RegisterTokenProvider
    nameWithType: UserManager(Of TUser).RegisterTokenProvider
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RegisterTokenProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1
    name: IUserTwoFactorTokenProvider
    nameWithType: IUserTwoFactorTokenProvider
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetValidTwoFactorProvidersAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetValidTwoFactorProvidersAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
  name: GetValidTwoFactorProvidersAsync(TUser)
  nameWithType: UserManager<TUser>.GetValidTwoFactorProvidersAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetValidTwoFactorProvidersAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetValidTwoFactorProvidersAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetValidTwoFactorProvidersAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
    name: GetValidTwoFactorProvidersAsync
    nameWithType: UserManager<TUser>.GetValidTwoFactorProvidersAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetValidTwoFactorProvidersAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
    name: GetValidTwoFactorProvidersAsync
    nameWithType: UserManager(Of TUser).GetValidTwoFactorProvidersAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetValidTwoFactorProvidersAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyTwoFactorTokenAsync({TUser},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
  name: VerifyTwoFactorTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.VerifyTwoFactorTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyTwoFactorTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).VerifyTwoFactorTokenAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyTwoFactorTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
    name: VerifyTwoFactorTokenAsync
    nameWithType: UserManager<TUser>.VerifyTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
    name: VerifyTwoFactorTokenAsync
    nameWithType: UserManager(Of TUser).VerifyTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateTwoFactorTokenAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateTwoFactorTokenAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
  name: GenerateTwoFactorTokenAsync(TUser, String)
  nameWithType: UserManager<TUser>.GenerateTwoFactorTokenAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateTwoFactorTokenAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).GenerateTwoFactorTokenAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateTwoFactorTokenAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
    name: GenerateTwoFactorTokenAsync
    nameWithType: UserManager<TUser>.GenerateTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
    name: GenerateTwoFactorTokenAsync
    nameWithType: UserManager(Of TUser).GenerateTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetTwoFactorEnabledAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetTwoFactorEnabledAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
  name: GetTwoFactorEnabledAsync(TUser)
  nameWithType: UserManager<TUser>.GetTwoFactorEnabledAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetTwoFactorEnabledAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetTwoFactorEnabledAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetTwoFactorEnabledAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserManager<TUser>.GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserManager(Of TUser).GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetTwoFactorEnabledAsync({TUser},System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetTwoFactorEnabledAsync(`1,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
  name: SetTwoFactorEnabledAsync(TUser, Boolean)
  nameWithType: UserManager<TUser>.SetTwoFactorEnabledAsync(TUser, Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetTwoFactorEnabledAsync(TUser, System.Boolean)
  nameWithType.vb: UserManager(Of TUser).SetTwoFactorEnabledAsync(TUser, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetTwoFactorEnabledAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserManager<TUser>.SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserManager(Of TUser).SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsLockedOutAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.IsLockedOutAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
  name: IsLockedOutAsync(TUser)
  nameWithType: UserManager<TUser>.IsLockedOutAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsLockedOutAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).IsLockedOutAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsLockedOutAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
    name: IsLockedOutAsync
    nameWithType: UserManager<TUser>.IsLockedOutAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsLockedOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
    name: IsLockedOutAsync
    nameWithType: UserManager(Of TUser).IsLockedOutAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsLockedOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetLockoutEnabledAsync({TUser},System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetLockoutEnabledAsync(`1,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
  name: SetLockoutEnabledAsync(TUser, Boolean)
  nameWithType: UserManager<TUser>.SetLockoutEnabledAsync(TUser, Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEnabledAsync(TUser, System.Boolean)
  nameWithType.vb: UserManager(Of TUser).SetLockoutEnabledAsync(TUser, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEnabledAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserManager<TUser>.SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserManager(Of TUser).SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetLockoutEnabledAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetLockoutEnabledAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
  name: GetLockoutEnabledAsync(TUser)
  nameWithType: UserManager<TUser>.GetLockoutEnabledAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEnabledAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetLockoutEnabledAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEnabledAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
    name: GetLockoutEnabledAsync
    nameWithType: UserManager<TUser>.GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
    name: GetLockoutEnabledAsync
    nameWithType: UserManager(Of TUser).GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetLockoutEndDateAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetLockoutEndDateAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
  name: GetLockoutEndDateAsync(TUser)
  nameWithType: UserManager<TUser>.GetLockoutEndDateAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEndDateAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetLockoutEndDateAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEndDateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
    name: GetLockoutEndDateAsync
    nameWithType: UserManager<TUser>.GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
    name: GetLockoutEndDateAsync
    nameWithType: UserManager(Of TUser).GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetLockoutEndDateAsync({TUser},System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetLockoutEndDateAsync(`1,System.Nullable{System.DateTimeOffset})
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
  name: SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>)
  nameWithType: UserManager<TUser>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEndDateAsync(TUser, System.Nullable<System.DateTimeOffset>)
  nameWithType.vb: UserManager(Of TUser).SetLockoutEndDateAsync(TUser, Nullable(Of DateTimeOffset))
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEndDateAsync(TUser, System.Nullable(Of System.DateTimeOffset))
  name.vb: SetLockoutEndDateAsync(TUser, Nullable(Of DateTimeOffset))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
    name: SetLockoutEndDateAsync
    nameWithType: UserManager<TUser>.SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
    name: SetLockoutEndDateAsync
    nameWithType: UserManager(Of TUser).SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AccessFailedAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AccessFailedAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
  name: AccessFailedAsync(TUser)
  nameWithType: UserManager<TUser>.AccessFailedAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AccessFailedAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).AccessFailedAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AccessFailedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
    name: AccessFailedAsync
    nameWithType: UserManager<TUser>.AccessFailedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AccessFailedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
    name: AccessFailedAsync
    nameWithType: UserManager(Of TUser).AccessFailedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AccessFailedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetAccessFailedCountAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ResetAccessFailedCountAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
  name: ResetAccessFailedCountAsync(TUser)
  nameWithType: UserManager<TUser>.ResetAccessFailedCountAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAccessFailedCountAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).ResetAccessFailedCountAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAccessFailedCountAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
    name: ResetAccessFailedCountAsync
    nameWithType: UserManager<TUser>.ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
    name: ResetAccessFailedCountAsync
    nameWithType: UserManager(Of TUser).ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetAccessFailedCountAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetAccessFailedCountAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
  name: GetAccessFailedCountAsync(TUser)
  nameWithType: UserManager<TUser>.GetAccessFailedCountAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAccessFailedCountAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetAccessFailedCountAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAccessFailedCountAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
    name: GetAccessFailedCountAsync
    nameWithType: UserManager<TUser>.GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
    name: GetAccessFailedCountAsync
    nameWithType: UserManager(Of TUser).GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUsersForClaimAsync(System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUsersForClaimAsync(System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
  name: GetUsersForClaimAsync(Claim)
  nameWithType: UserManager<TUser>.GetUsersForClaimAsync(Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersForClaimAsync(System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser).GetUsersForClaimAsync(Claim)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersForClaimAsync(System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
    name: GetUsersForClaimAsync
    nameWithType: UserManager<TUser>.GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersForClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
    name: GetUsersForClaimAsync
    nameWithType: UserManager(Of TUser).GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersForClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUsersInRoleAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUsersInRoleAsync(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
  name: GetUsersInRoleAsync(String)
  nameWithType: UserManager<TUser>.GetUsersInRoleAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersInRoleAsync(System.String)
  nameWithType.vb: UserManager(Of TUser).GetUsersInRoleAsync(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersInRoleAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
    name: GetUsersInRoleAsync
    nameWithType: UserManager<TUser>.GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
    name: GetUsersInRoleAsync
    nameWithType: UserManager(Of TUser).GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetAuthenticationTokenAsync({TUser},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetAuthenticationTokenAsync(`1,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
  name: GetAuthenticationTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.GetAuthenticationTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticationTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).GetAuthenticationTokenAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticationTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
    name: GetAuthenticationTokenAsync
    nameWithType: UserManager<TUser>.GetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
    name: GetAuthenticationTokenAsync
    nameWithType: UserManager(Of TUser).GetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetAuthenticationTokenAsync({TUser},System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetAuthenticationTokenAsync(`1,System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
  name: SetAuthenticationTokenAsync(TUser, String, String, String)
  nameWithType: UserManager<TUser>.SetAuthenticationTokenAsync(TUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetAuthenticationTokenAsync(TUser, System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).SetAuthenticationTokenAsync(TUser, String, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetAuthenticationTokenAsync(TUser, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
    name: SetAuthenticationTokenAsync
    nameWithType: UserManager<TUser>.SetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetAuthenticationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
    name: SetAuthenticationTokenAsync
    nameWithType: UserManager(Of TUser).SetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetAuthenticationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveAuthenticationTokenAsync({TUser},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemoveAuthenticationTokenAsync(`1,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
  name: RemoveAuthenticationTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.RemoveAuthenticationTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveAuthenticationTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).RemoveAuthenticationTokenAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveAuthenticationTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
    name: RemoveAuthenticationTokenAsync
    nameWithType: UserManager<TUser>.RemoveAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveAuthenticationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
    name: RemoveAuthenticationTokenAsync
    nameWithType: UserManager(Of TUser).RemoveAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveAuthenticationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetAuthenticatorKeyAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetAuthenticatorKeyAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
  name: GetAuthenticatorKeyAsync(TUser)
  nameWithType: UserManager<TUser>.GetAuthenticatorKeyAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticatorKeyAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetAuthenticatorKeyAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticatorKeyAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
    name: GetAuthenticatorKeyAsync
    nameWithType: UserManager<TUser>.GetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
    name: GetAuthenticatorKeyAsync
    nameWithType: UserManager(Of TUser).GetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetAuthenticatorKeyAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ResetAuthenticatorKeyAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
  name: ResetAuthenticatorKeyAsync(TUser)
  nameWithType: UserManager<TUser>.ResetAuthenticatorKeyAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAuthenticatorKeyAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).ResetAuthenticatorKeyAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAuthenticatorKeyAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
    name: ResetAuthenticatorKeyAsync
    nameWithType: UserManager<TUser>.ResetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
    name: ResetAuthenticatorKeyAsync
    nameWithType: UserManager(Of TUser).ResetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateNewAuthenticatorKey
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateNewAuthenticatorKey
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
  name: GenerateNewAuthenticatorKey()
  nameWithType: UserManager<TUser>.GenerateNewAuthenticatorKey()
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateNewAuthenticatorKey()
  nameWithType.vb: UserManager(Of TUser).GenerateNewAuthenticatorKey()
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateNewAuthenticatorKey()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
    name: GenerateNewAuthenticatorKey
    nameWithType: UserManager<TUser>.GenerateNewAuthenticatorKey
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateNewAuthenticatorKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
    name: GenerateNewAuthenticatorKey
    nameWithType: UserManager(Of TUser).GenerateNewAuthenticatorKey
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateNewAuthenticatorKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateNewTwoFactorRecoveryCodesAsync({TUser},System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateNewTwoFactorRecoveryCodesAsync(`1,System.Int32)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
  name: GenerateNewTwoFactorRecoveryCodesAsync(TUser, Int32)
  nameWithType: UserManager<TUser>.GenerateNewTwoFactorRecoveryCodesAsync(TUser, Int32)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateNewTwoFactorRecoveryCodesAsync(TUser, System.Int32)
  nameWithType.vb: UserManager(Of TUser).GenerateNewTwoFactorRecoveryCodesAsync(TUser, Int32)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateNewTwoFactorRecoveryCodesAsync(TUser, System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
    name: GenerateNewTwoFactorRecoveryCodesAsync
    nameWithType: UserManager<TUser>.GenerateNewTwoFactorRecoveryCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateNewTwoFactorRecoveryCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
    name: GenerateNewTwoFactorRecoveryCodesAsync
    nameWithType: UserManager(Of TUser).GenerateNewTwoFactorRecoveryCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateNewTwoFactorRecoveryCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateTwoFactorRecoveryCode
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.CreateTwoFactorRecoveryCode
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
  name: CreateTwoFactorRecoveryCode()
  nameWithType: UserManager<TUser>.CreateTwoFactorRecoveryCode()
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateTwoFactorRecoveryCode()
  nameWithType.vb: UserManager(Of TUser).CreateTwoFactorRecoveryCode()
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateTwoFactorRecoveryCode()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
    name: CreateTwoFactorRecoveryCode
    nameWithType: UserManager<TUser>.CreateTwoFactorRecoveryCode
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateTwoFactorRecoveryCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
    name: CreateTwoFactorRecoveryCode
    nameWithType: UserManager(Of TUser).CreateTwoFactorRecoveryCode
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateTwoFactorRecoveryCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RedeemTwoFactorRecoveryCodeAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RedeemTwoFactorRecoveryCodeAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
  name: RedeemTwoFactorRecoveryCodeAsync(TUser, String)
  nameWithType: UserManager<TUser>.RedeemTwoFactorRecoveryCodeAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RedeemTwoFactorRecoveryCodeAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).RedeemTwoFactorRecoveryCodeAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RedeemTwoFactorRecoveryCodeAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
    name: RedeemTwoFactorRecoveryCodeAsync
    nameWithType: UserManager<TUser>.RedeemTwoFactorRecoveryCodeAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RedeemTwoFactorRecoveryCodeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
    name: RedeemTwoFactorRecoveryCodeAsync
    nameWithType: UserManager(Of TUser).RedeemTwoFactorRecoveryCodeAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RedeemTwoFactorRecoveryCodeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CountRecoveryCodesAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.CountRecoveryCodesAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
  name: CountRecoveryCodesAsync(TUser)
  nameWithType: UserManager<TUser>.CountRecoveryCodesAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CountRecoveryCodesAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).CountRecoveryCodesAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CountRecoveryCodesAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
    name: CountRecoveryCodesAsync
    nameWithType: UserManager<TUser>.CountRecoveryCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CountRecoveryCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
    name: CountRecoveryCodesAsync
    nameWithType: UserManager(Of TUser).CountRecoveryCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CountRecoveryCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Dispose(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.Dispose(System.Boolean)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  nameWithType: UserManager<TUser>.Dispose(Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose(System.Boolean)
  nameWithType.vb: UserManager(Of TUser).Dispose(Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserManager<TUser>.Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserManager(Of TUser).Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateSecurityTokenAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.CreateSecurityTokenAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
  name: CreateSecurityTokenAsync(TUser)
  nameWithType: UserManager<TUser>.CreateSecurityTokenAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateSecurityTokenAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).CreateSecurityTokenAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateSecurityTokenAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
    name: CreateSecurityTokenAsync
    nameWithType: UserManager<TUser>.CreateSecurityTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateSecurityTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
    name: CreateSecurityTokenAsync
    nameWithType: UserManager(Of TUser).CreateSecurityTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateSecurityTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdatePasswordHash({TUser},System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.UpdatePasswordHash(`1,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
  name: UpdatePasswordHash(TUser, String, Boolean)
  nameWithType: UserManager<TUser>.UpdatePasswordHash(TUser, String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdatePasswordHash(TUser, System.String, System.Boolean)
  nameWithType.vb: UserManager(Of TUser).UpdatePasswordHash(TUser, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdatePasswordHash(TUser, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
    name: UpdatePasswordHash
    nameWithType: UserManager<TUser>.UpdatePasswordHash
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdatePasswordHash
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
    name: UpdatePasswordHash
    nameWithType: UserManager(Of TUser).UpdatePasswordHash
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdatePasswordHash
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetChangeEmailTokenPurpose(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetChangeEmailTokenPurpose(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
  name: GetChangeEmailTokenPurpose(String)
  nameWithType: UserManager<TUser>.GetChangeEmailTokenPurpose(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetChangeEmailTokenPurpose(System.String)
  nameWithType.vb: UserManager(Of TUser).GetChangeEmailTokenPurpose(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetChangeEmailTokenPurpose(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
    name: GetChangeEmailTokenPurpose
    nameWithType: UserManager<TUser>.GetChangeEmailTokenPurpose
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetChangeEmailTokenPurpose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
    name: GetChangeEmailTokenPurpose
    nameWithType: UserManager(Of TUser).GetChangeEmailTokenPurpose
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetChangeEmailTokenPurpose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ValidateUserAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ValidateUserAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
  name: ValidateUserAsync(TUser)
  nameWithType: UserManager<TUser>.ValidateUserAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ValidateUserAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).ValidateUserAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ValidateUserAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
    name: ValidateUserAsync
    nameWithType: UserManager<TUser>.ValidateUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ValidateUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
    name: ValidateUserAsync
    nameWithType: UserManager(Of TUser).ValidateUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ValidateUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ValidatePasswordAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ValidatePasswordAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
  name: ValidatePasswordAsync(TUser, String)
  nameWithType: UserManager<TUser>.ValidatePasswordAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ValidatePasswordAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).ValidatePasswordAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ValidatePasswordAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
    name: ValidatePasswordAsync
    nameWithType: UserManager<TUser>.ValidatePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ValidatePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
    name: ValidatePasswordAsync
    nameWithType: UserManager(Of TUser).ValidatePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ValidatePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateUserAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.UpdateUserAsync(`1)
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
  name: UpdateUserAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateUserAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateUserAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateUserAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateUserAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
    name: UpdateUserAsync
    nameWithType: UserManager<TUser>.UpdateUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
    name: UpdateUserAsync
    nameWithType: UserManager(Of TUser).UpdateUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ThrowIfDisposed
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ThrowIfDisposed
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
  name: ThrowIfDisposed()
  nameWithType: UserManager<TUser>.ThrowIfDisposed()
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ThrowIfDisposed()
  nameWithType.vb: UserManager(Of TUser).ThrowIfDisposed()
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserManager<TUser>.ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ThrowIfDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserManager(Of TUser).ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ThrowIfDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CancellationToken
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.CancellationToken
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.CancellationToken
  name: CancellationToken
  nameWithType: UserManager<TUser>.CancellationToken
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CancellationToken
  nameWithType.vb: UserManager(Of TUser).CancellationToken
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CancellationToken
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Store
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.Store
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.Store
  name: Store
  nameWithType: UserManager<TUser>.Store
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Store
  nameWithType.vb: UserManager(Of TUser).Store
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Store
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Logger
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.Logger
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.Logger
  name: Logger
  nameWithType: UserManager<TUser>.Logger
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Logger
  nameWithType.vb: UserManager(Of TUser).Logger
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Logger
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.PasswordHasher
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.PasswordHasher
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.PasswordHasher
  name: PasswordHasher
  nameWithType: UserManager<TUser>.PasswordHasher
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.PasswordHasher
  nameWithType.vb: UserManager(Of TUser).PasswordHasher
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).PasswordHasher
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UserValidators
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.UserValidators
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.UserValidators
  name: UserValidators
  nameWithType: UserManager<TUser>.UserValidators
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UserValidators
  nameWithType.vb: UserManager(Of TUser).UserValidators
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UserValidators
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.PasswordValidators
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.PasswordValidators
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.PasswordValidators
  name: PasswordValidators
  nameWithType: UserManager<TUser>.PasswordValidators
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.PasswordValidators
  nameWithType.vb: UserManager(Of TUser).PasswordValidators
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).PasswordValidators
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.KeyNormalizer
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.KeyNormalizer
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.KeyNormalizer
  name: KeyNormalizer
  nameWithType: UserManager<TUser>.KeyNormalizer
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.KeyNormalizer
  nameWithType.vb: UserManager(Of TUser).KeyNormalizer
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).KeyNormalizer
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ErrorDescriber
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.ErrorDescriber
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ErrorDescriber
  name: ErrorDescriber
  nameWithType: UserManager<TUser>.ErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ErrorDescriber
  nameWithType.vb: UserManager(Of TUser).ErrorDescriber
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ErrorDescriber
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Options
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.Options
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.Options
  name: Options
  nameWithType: UserManager<TUser>.Options
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Options
  nameWithType.vb: UserManager(Of TUser).Options
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Options
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserAuthenticationTokens
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserAuthenticationTokens
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens
  name: SupportsUserAuthenticationTokens
  nameWithType: UserManager<TUser>.SupportsUserAuthenticationTokens
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserAuthenticationTokens
  nameWithType.vb: UserManager(Of TUser).SupportsUserAuthenticationTokens
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserAuthenticationTokens
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserAuthenticatorKey
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserAuthenticatorKey
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticatorKey
  name: SupportsUserAuthenticatorKey
  nameWithType: UserManager<TUser>.SupportsUserAuthenticatorKey
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserAuthenticatorKey
  nameWithType.vb: UserManager(Of TUser).SupportsUserAuthenticatorKey
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserAuthenticatorKey
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserTwoFactorRecoveryCodes
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserTwoFactorRecoveryCodes
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactorRecoveryCodes
  name: SupportsUserTwoFactorRecoveryCodes
  nameWithType: UserManager<TUser>.SupportsUserTwoFactorRecoveryCodes
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserTwoFactorRecoveryCodes
  nameWithType.vb: UserManager(Of TUser).SupportsUserTwoFactorRecoveryCodes
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserTwoFactorRecoveryCodes
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserTwoFactor
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserTwoFactor
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor
  name: SupportsUserTwoFactor
  nameWithType: UserManager<TUser>.SupportsUserTwoFactor
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserTwoFactor
  nameWithType.vb: UserManager(Of TUser).SupportsUserTwoFactor
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserTwoFactor
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserPassword
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserPassword
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword
  name: SupportsUserPassword
  nameWithType: UserManager<TUser>.SupportsUserPassword
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserPassword
  nameWithType.vb: UserManager(Of TUser).SupportsUserPassword
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserPassword
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserSecurityStamp
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserSecurityStamp
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp
  name: SupportsUserSecurityStamp
  nameWithType: UserManager<TUser>.SupportsUserSecurityStamp
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserSecurityStamp
  nameWithType.vb: UserManager(Of TUser).SupportsUserSecurityStamp
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserSecurityStamp
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserRole
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserRole
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole
  name: SupportsUserRole
  nameWithType: UserManager<TUser>.SupportsUserRole
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserRole
  nameWithType.vb: UserManager(Of TUser).SupportsUserRole
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserRole
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserLogin
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserLogin
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin
  name: SupportsUserLogin
  nameWithType: UserManager<TUser>.SupportsUserLogin
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserLogin
  nameWithType.vb: UserManager(Of TUser).SupportsUserLogin
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserLogin
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserEmail
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserEmail
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail
  name: SupportsUserEmail
  nameWithType: UserManager<TUser>.SupportsUserEmail
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserEmail
  nameWithType.vb: UserManager(Of TUser).SupportsUserEmail
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserEmail
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserPhoneNumber
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserPhoneNumber
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber
  name: SupportsUserPhoneNumber
  nameWithType: UserManager<TUser>.SupportsUserPhoneNumber
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserPhoneNumber
  nameWithType.vb: UserManager(Of TUser).SupportsUserPhoneNumber
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserPhoneNumber
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserClaim
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserClaim
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim
  name: SupportsUserClaim
  nameWithType: UserManager<TUser>.SupportsUserClaim
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserClaim
  nameWithType.vb: UserManager(Of TUser).SupportsUserClaim
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserClaim
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserLockout
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserLockout
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout
  name: SupportsUserLockout
  nameWithType: UserManager<TUser>.SupportsUserLockout
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserLockout
  nameWithType.vb: UserManager(Of TUser).SupportsUserLockout
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserLockout
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsQueryableUsers
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsQueryableUsers
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers
  name: SupportsQueryableUsers
  nameWithType: UserManager<TUser>.SupportsQueryableUsers
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsQueryableUsers
  nameWithType.vb: UserManager(Of TUser).SupportsQueryableUsers
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsQueryableUsers
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Users
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.Users
  parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.Users
  name: Users
  nameWithType: UserManager<TUser>.Users
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Users
  nameWithType.vb: UserManager(Of TUser).Users
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Users
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  parent: es.efor.Utilities.General.Helpers.ObjectHelper
  definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  name: CopyMap<TDestination>(JsonSerializerSettings)
  nameWithType: ObjectHelper.CopyMap<TDestination>(JsonSerializerSettings)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(Newtonsoft.Json.JsonSerializerSettings)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(JsonSerializerSettings)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(Newtonsoft.Json.JsonSerializerSettings)
  name.vb: CopyMap(Of TDestination)(JsonSerializerSettings)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  parent: es.efor.Utilities.General.Helpers.ObjectHelper
  definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  name: CopyMap<TDestination>(ReferenceLoopHandling)
  nameWithType: ObjectHelper.CopyMap<TDestination>(ReferenceLoopHandling)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(Newtonsoft.Json.ReferenceLoopHandling)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(ReferenceLoopHandling)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(Newtonsoft.Json.ReferenceLoopHandling)
  name.vb: CopyMap(Of TDestination)(ReferenceLoopHandling)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  commentId: T:Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: true
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: true
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose
  commentId: F:Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose
  isExternal: true
  name: ResetPasswordTokenPurpose
  nameWithType: UserManager<TUser>.ResetPasswordTokenPurpose
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordTokenPurpose
  nameWithType.vb: UserManager(Of TUser).ResetPasswordTokenPurpose
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordTokenPurpose
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberTokenPurpose
  commentId: F:Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberTokenPurpose
  isExternal: true
  name: ChangePhoneNumberTokenPurpose
  nameWithType: UserManager<TUser>.ChangePhoneNumberTokenPurpose
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePhoneNumberTokenPurpose
  nameWithType.vb: UserManager(Of TUser).ChangePhoneNumberTokenPurpose
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePhoneNumberTokenPurpose
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose
  commentId: F:Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose
  isExternal: true
  name: ConfirmEmailTokenPurpose
  nameWithType: UserManager<TUser>.ConfirmEmailTokenPurpose
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailTokenPurpose
  nameWithType.vb: UserManager(Of TUser).ConfirmEmailTokenPurpose
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailTokenPurpose
- uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.Dispose
  isExternal: true
  name: Dispose()
  nameWithType: UserManager<TUser>.Dispose()
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose()
  nameWithType.vb: UserManager(Of TUser).Dispose()
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
    name: Dispose
    nameWithType: UserManager<TUser>.Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
    name: Dispose
    nameWithType: UserManager(Of TUser).Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
  isExternal: true
  name: GetUserName(ClaimsPrincipal)
  nameWithType: UserManager<TUser>.GetUserName(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserName(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: UserManager(Of TUser).GetUserName(ClaimsPrincipal)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserName(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
    name: GetUserName
    nameWithType: UserManager<TUser>.GetUserName
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
    name: GetUserName
    nameWithType: UserManager(Of TUser).GetUserName
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
  isExternal: true
  name: GetUserId(ClaimsPrincipal)
  nameWithType: UserManager<TUser>.GetUserId(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserId(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: UserManager(Of TUser).GetUserId(ClaimsPrincipal)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserId(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
    name: GetUserId
    nameWithType: UserManager<TUser>.GetUserId
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
    name: GetUserId
    nameWithType: UserManager(Of TUser).GetUserId
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  isExternal: true
  name: GetUserAsync(ClaimsPrincipal)
  nameWithType: UserManager<TUser>.GetUserAsync(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: UserManager(Of TUser).GetUserAsync(ClaimsPrincipal)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
    name: GetUserAsync
    nameWithType: UserManager<TUser>.GetUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
    name: GetUserAsync
    nameWithType: UserManager(Of TUser).GetUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
  isExternal: true
  name: GenerateConcurrencyStampAsync(TUser)
  nameWithType: UserManager<TUser>.GenerateConcurrencyStampAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateConcurrencyStampAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GenerateConcurrencyStampAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateConcurrencyStampAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
    name: GenerateConcurrencyStampAsync
    nameWithType: UserManager<TUser>.GenerateConcurrencyStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateConcurrencyStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
    name: GenerateConcurrencyStampAsync
    nameWithType: UserManager(Of TUser).GenerateConcurrencyStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateConcurrencyStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
  isExternal: true
  name: CreateAsync(TUser)
  nameWithType: UserManager<TUser>.CreateAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).CreateAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserManager<TUser>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserManager(Of TUser).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
  isExternal: true
  name: UpdateAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserManager<TUser>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserManager(Of TUser).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
  isExternal: true
  name: DeleteAsync(TUser)
  nameWithType: UserManager<TUser>.DeleteAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.DeleteAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).DeleteAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).DeleteAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserManager<TUser>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserManager(Of TUser).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
  isExternal: true
  name: FindByIdAsync(String)
  nameWithType: UserManager<TUser>.FindByIdAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByIdAsync(System.String)
  nameWithType.vb: UserManager(Of TUser).FindByIdAsync(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByIdAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
    name: FindByIdAsync
    nameWithType: UserManager<TUser>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
    name: FindByIdAsync
    nameWithType: UserManager(Of TUser).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
  isExternal: true
  name: FindByNameAsync(String)
  nameWithType: UserManager<TUser>.FindByNameAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByNameAsync(System.String)
  nameWithType.vb: UserManager(Of TUser).FindByNameAsync(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByNameAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserManager<TUser>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserManager(Of TUser).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
  isExternal: true
  name: CreateAsync(TUser, String)
  nameWithType: UserManager<TUser>.CreateAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).CreateAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
    name: CreateAsync
    nameWithType: UserManager<TUser>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
    name: CreateAsync
    nameWithType: UserManager(Of TUser).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
  isExternal: true
  name: NormalizeName(String)
  nameWithType: UserManager<TUser>.NormalizeName(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeName(System.String)
  nameWithType.vb: UserManager(Of TUser).NormalizeName(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeName(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
    name: NormalizeName
    nameWithType: UserManager<TUser>.NormalizeName
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
    name: NormalizeName
    nameWithType: UserManager(Of TUser).NormalizeName
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
  isExternal: true
  name: NormalizeEmail(String)
  nameWithType: UserManager<TUser>.NormalizeEmail(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeEmail(System.String)
  nameWithType.vb: UserManager(Of TUser).NormalizeEmail(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeEmail(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
    name: NormalizeEmail
    nameWithType: UserManager<TUser>.NormalizeEmail
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeEmail
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
    name: NormalizeEmail
    nameWithType: UserManager(Of TUser).NormalizeEmail
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeEmail
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
  isExternal: true
  name: UpdateNormalizedUserNameAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateNormalizedUserNameAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedUserNameAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateNormalizedUserNameAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedUserNameAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
    name: UpdateNormalizedUserNameAsync
    nameWithType: UserManager<TUser>.UpdateNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
    name: UpdateNormalizedUserNameAsync
    nameWithType: UserManager(Of TUser).UpdateNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
  isExternal: true
  name: GetUserNameAsync(TUser)
  nameWithType: UserManager<TUser>.GetUserNameAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserNameAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetUserNameAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserNameAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
    name: GetUserNameAsync
    nameWithType: UserManager<TUser>.GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
    name: GetUserNameAsync
    nameWithType: UserManager(Of TUser).GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
  isExternal: true
  name: SetUserNameAsync(TUser, String)
  nameWithType: UserManager<TUser>.SetUserNameAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetUserNameAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).SetUserNameAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetUserNameAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
    name: SetUserNameAsync
    nameWithType: UserManager<TUser>.SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
    name: SetUserNameAsync
    nameWithType: UserManager(Of TUser).SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
  isExternal: true
  name: GetUserIdAsync(TUser)
  nameWithType: UserManager<TUser>.GetUserIdAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserIdAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetUserIdAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserIdAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
    name: GetUserIdAsync
    nameWithType: UserManager<TUser>.GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
    name: GetUserIdAsync
    nameWithType: UserManager(Of TUser).GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
  isExternal: true
  name: CheckPasswordAsync(TUser, String)
  nameWithType: UserManager<TUser>.CheckPasswordAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CheckPasswordAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).CheckPasswordAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CheckPasswordAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
    name: CheckPasswordAsync
    nameWithType: UserManager<TUser>.CheckPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CheckPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
    name: CheckPasswordAsync
    nameWithType: UserManager(Of TUser).CheckPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CheckPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
  isExternal: true
  name: HasPasswordAsync(TUser)
  nameWithType: UserManager<TUser>.HasPasswordAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.HasPasswordAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).HasPasswordAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).HasPasswordAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
    name: HasPasswordAsync
    nameWithType: UserManager<TUser>.HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
    name: HasPasswordAsync
    nameWithType: UserManager(Of TUser).HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
  isExternal: true
  name: AddPasswordAsync(TUser, String)
  nameWithType: UserManager<TUser>.AddPasswordAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddPasswordAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).AddPasswordAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddPasswordAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
    name: AddPasswordAsync
    nameWithType: UserManager<TUser>.AddPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
    name: AddPasswordAsync
    nameWithType: UserManager(Of TUser).AddPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
  isExternal: true
  name: ChangePasswordAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.ChangePasswordAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePasswordAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).ChangePasswordAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePasswordAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
    name: ChangePasswordAsync
    nameWithType: UserManager<TUser>.ChangePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
    name: ChangePasswordAsync
    nameWithType: UserManager(Of TUser).ChangePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
  isExternal: true
  name: RemovePasswordAsync(TUser)
  nameWithType: UserManager<TUser>.RemovePasswordAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemovePasswordAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).RemovePasswordAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemovePasswordAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
    name: RemovePasswordAsync
    nameWithType: UserManager<TUser>.RemovePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemovePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
    name: RemovePasswordAsync
    nameWithType: UserManager(Of TUser).RemovePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemovePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
  isExternal: true
  name: VerifyPasswordAsync(IUserPasswordStore<TUser>, TUser, String)
  nameWithType: UserManager<TUser>.VerifyPasswordAsync(IUserPasswordStore<TUser>, TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser>, TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).VerifyPasswordAsync(IUserPasswordStore(Of TUser), TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore(Of TUser), TUser, System.String)
  name.vb: VerifyPasswordAsync(IUserPasswordStore(Of TUser), TUser, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
    name: VerifyPasswordAsync
    nameWithType: UserManager<TUser>.VerifyPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
    name: VerifyPasswordAsync
    nameWithType: UserManager(Of TUser).VerifyPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
  isExternal: true
  name: GetSecurityStampAsync(TUser)
  nameWithType: UserManager<TUser>.GetSecurityStampAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetSecurityStampAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetSecurityStampAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetSecurityStampAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
    name: GetSecurityStampAsync
    nameWithType: UserManager<TUser>.GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
    name: GetSecurityStampAsync
    nameWithType: UserManager(Of TUser).GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
  isExternal: true
  name: UpdateSecurityStampAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateSecurityStampAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateSecurityStampAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateSecurityStampAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateSecurityStampAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
    name: UpdateSecurityStampAsync
    nameWithType: UserManager<TUser>.UpdateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
    name: UpdateSecurityStampAsync
    nameWithType: UserManager(Of TUser).UpdateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
  isExternal: true
  name: GeneratePasswordResetTokenAsync(TUser)
  nameWithType: UserManager<TUser>.GeneratePasswordResetTokenAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GeneratePasswordResetTokenAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GeneratePasswordResetTokenAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GeneratePasswordResetTokenAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
    name: GeneratePasswordResetTokenAsync
    nameWithType: UserManager<TUser>.GeneratePasswordResetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GeneratePasswordResetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
    name: GeneratePasswordResetTokenAsync
    nameWithType: UserManager(Of TUser).GeneratePasswordResetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GeneratePasswordResetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
  isExternal: true
  name: ResetPasswordAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.ResetPasswordAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).ResetPasswordAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
    name: ResetPasswordAsync
    nameWithType: UserManager<TUser>.ResetPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
    name: ResetPasswordAsync
    nameWithType: UserManager(Of TUser).ResetPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
  isExternal: true
  name: FindByLoginAsync(String, String)
  nameWithType: UserManager<TUser>.FindByLoginAsync(String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByLoginAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).FindByLoginAsync(String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByLoginAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
    name: FindByLoginAsync
    nameWithType: UserManager<TUser>.FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
    name: FindByLoginAsync
    nameWithType: UserManager(Of TUser).FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
  isExternal: true
  name: RemoveLoginAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.RemoveLoginAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveLoginAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).RemoveLoginAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveLoginAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
    name: RemoveLoginAsync
    nameWithType: UserManager<TUser>.RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
    name: RemoveLoginAsync
    nameWithType: UserManager(Of TUser).RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  isExternal: true
  name: AddLoginAsync(TUser, UserLoginInfo)
  nameWithType: UserManager<TUser>.AddLoginAsync(TUser, UserLoginInfo)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  nameWithType.vb: UserManager(Of TUser).AddLoginAsync(TUser, UserLoginInfo)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserManager<TUser>.AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserManager(Of TUser).AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
  isExternal: true
  name: GetLoginsAsync(TUser)
  nameWithType: UserManager<TUser>.GetLoginsAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLoginsAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetLoginsAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLoginsAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
    name: GetLoginsAsync
    nameWithType: UserManager<TUser>.GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
    name: GetLoginsAsync
    nameWithType: UserManager(Of TUser).GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
  isExternal: true
  name: AddClaimAsync(TUser, Claim)
  nameWithType: UserManager<TUser>.AddClaimAsync(TUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimAsync(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser).AddClaimAsync(TUser, Claim)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimAsync(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserManager<TUser>.AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserManager(Of TUser).AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  isExternal: true
  name: AddClaimsAsync(TUser, IEnumerable<Claim>)
  nameWithType: UserManager<TUser>.AddClaimsAsync(TUser, IEnumerable<Claim>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  nameWithType.vb: UserManager(Of TUser).AddClaimsAsync(TUser, IEnumerable(Of Claim))
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: AddClaimsAsync(TUser, IEnumerable(Of Claim))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: AddClaimsAsync
    nameWithType: UserManager<TUser>.AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: AddClaimsAsync
    nameWithType: UserManager(Of TUser).AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
  isExternal: true
  name: ReplaceClaimAsync(TUser, Claim, Claim)
  nameWithType: UserManager<TUser>.ReplaceClaimAsync(TUser, Claim, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser).ReplaceClaimAsync(TUser, Claim, Claim)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
    name: ReplaceClaimAsync
    nameWithType: UserManager<TUser>.ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ReplaceClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
    name: ReplaceClaimAsync
    nameWithType: UserManager(Of TUser).ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ReplaceClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
  isExternal: true
  name: RemoveClaimAsync(TUser, Claim)
  nameWithType: UserManager<TUser>.RemoveClaimAsync(TUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimAsync(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser).RemoveClaimAsync(TUser, Claim)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimAsync(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserManager<TUser>.RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserManager(Of TUser).RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  isExternal: true
  name: RemoveClaimsAsync(TUser, IEnumerable<Claim>)
  nameWithType: UserManager<TUser>.RemoveClaimsAsync(TUser, IEnumerable<Claim>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  nameWithType.vb: UserManager(Of TUser).RemoveClaimsAsync(TUser, IEnumerable(Of Claim))
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: RemoveClaimsAsync(TUser, IEnumerable(Of Claim))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: RemoveClaimsAsync
    nameWithType: UserManager<TUser>.RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: RemoveClaimsAsync
    nameWithType: UserManager(Of TUser).RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
  isExternal: true
  name: GetClaimsAsync(TUser)
  nameWithType: UserManager<TUser>.GetClaimsAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetClaimsAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetClaimsAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetClaimsAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
    name: GetClaimsAsync
    nameWithType: UserManager<TUser>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
    name: GetClaimsAsync
    nameWithType: UserManager(Of TUser).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
  isExternal: true
  name: AddToRoleAsync(TUser, String)
  nameWithType: UserManager<TUser>.AddToRoleAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRoleAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).AddToRoleAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
    name: AddToRoleAsync
    nameWithType: UserManager<TUser>.AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
    name: AddToRoleAsync
    nameWithType: UserManager(Of TUser).AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  isExternal: true
  name: AddToRolesAsync(TUser, IEnumerable<String>)
  nameWithType: UserManager<TUser>.AddToRolesAsync(TUser, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRolesAsync(TUser, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: UserManager(Of TUser).AddToRolesAsync(TUser, IEnumerable(Of String))
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRolesAsync(TUser, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: AddToRolesAsync(TUser, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: AddToRolesAsync
    nameWithType: UserManager<TUser>.AddToRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: AddToRolesAsync
    nameWithType: UserManager(Of TUser).AddToRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
  isExternal: true
  name: RemoveFromRoleAsync(TUser, String)
  nameWithType: UserManager<TUser>.RemoveFromRoleAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRoleAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).RemoveFromRoleAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserManager<TUser>.RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserManager(Of TUser).RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  isExternal: true
  name: RemoveFromRolesAsync(TUser, IEnumerable<String>)
  nameWithType: UserManager<TUser>.RemoveFromRolesAsync(TUser, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRolesAsync(TUser, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: UserManager(Of TUser).RemoveFromRolesAsync(TUser, IEnumerable(Of String))
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRolesAsync(TUser, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RemoveFromRolesAsync(TUser, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: RemoveFromRolesAsync
    nameWithType: UserManager<TUser>.RemoveFromRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: RemoveFromRolesAsync
    nameWithType: UserManager(Of TUser).RemoveFromRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
  isExternal: true
  name: GetRolesAsync(TUser)
  nameWithType: UserManager<TUser>.GetRolesAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetRolesAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetRolesAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetRolesAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
    name: GetRolesAsync
    nameWithType: UserManager<TUser>.GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
    name: GetRolesAsync
    nameWithType: UserManager(Of TUser).GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
  isExternal: true
  name: IsInRoleAsync(TUser, String)
  nameWithType: UserManager<TUser>.IsInRoleAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsInRoleAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).IsInRoleAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsInRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
    name: IsInRoleAsync
    nameWithType: UserManager<TUser>.IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
    name: IsInRoleAsync
    nameWithType: UserManager(Of TUser).IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
  isExternal: true
  name: GetEmailAsync(TUser)
  nameWithType: UserManager<TUser>.GetEmailAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetEmailAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetEmailAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetEmailAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
    name: GetEmailAsync
    nameWithType: UserManager<TUser>.GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
    name: GetEmailAsync
    nameWithType: UserManager(Of TUser).GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
  isExternal: true
  name: SetEmailAsync(TUser, String)
  nameWithType: UserManager<TUser>.SetEmailAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetEmailAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).SetEmailAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetEmailAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
    name: SetEmailAsync
    nameWithType: UserManager<TUser>.SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
    name: SetEmailAsync
    nameWithType: UserManager(Of TUser).SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
  isExternal: true
  name: FindByEmailAsync(String)
  nameWithType: UserManager<TUser>.FindByEmailAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByEmailAsync(System.String)
  nameWithType.vb: UserManager(Of TUser).FindByEmailAsync(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByEmailAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserManager<TUser>.FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserManager(Of TUser).FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
  isExternal: true
  name: UpdateNormalizedEmailAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateNormalizedEmailAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedEmailAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateNormalizedEmailAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedEmailAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
    name: UpdateNormalizedEmailAsync
    nameWithType: UserManager<TUser>.UpdateNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
    name: UpdateNormalizedEmailAsync
    nameWithType: UserManager(Of TUser).UpdateNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
  isExternal: true
  name: GenerateEmailConfirmationTokenAsync(TUser)
  nameWithType: UserManager<TUser>.GenerateEmailConfirmationTokenAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateEmailConfirmationTokenAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GenerateEmailConfirmationTokenAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateEmailConfirmationTokenAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
    name: GenerateEmailConfirmationTokenAsync
    nameWithType: UserManager<TUser>.GenerateEmailConfirmationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateEmailConfirmationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
    name: GenerateEmailConfirmationTokenAsync
    nameWithType: UserManager(Of TUser).GenerateEmailConfirmationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateEmailConfirmationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
  isExternal: true
  name: ConfirmEmailAsync(TUser, String)
  nameWithType: UserManager<TUser>.ConfirmEmailAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).ConfirmEmailAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
    name: ConfirmEmailAsync
    nameWithType: UserManager<TUser>.ConfirmEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
    name: ConfirmEmailAsync
    nameWithType: UserManager(Of TUser).ConfirmEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
  isExternal: true
  name: IsEmailConfirmedAsync(TUser)
  nameWithType: UserManager<TUser>.IsEmailConfirmedAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsEmailConfirmedAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).IsEmailConfirmedAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsEmailConfirmedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
    name: IsEmailConfirmedAsync
    nameWithType: UserManager<TUser>.IsEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
    name: IsEmailConfirmedAsync
    nameWithType: UserManager(Of TUser).IsEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
  isExternal: true
  name: GenerateChangeEmailTokenAsync(TUser, String)
  nameWithType: UserManager<TUser>.GenerateChangeEmailTokenAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangeEmailTokenAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).GenerateChangeEmailTokenAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangeEmailTokenAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
    name: GenerateChangeEmailTokenAsync
    nameWithType: UserManager<TUser>.GenerateChangeEmailTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangeEmailTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
    name: GenerateChangeEmailTokenAsync
    nameWithType: UserManager(Of TUser).GenerateChangeEmailTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangeEmailTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
  isExternal: true
  name: ChangeEmailAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.ChangeEmailAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangeEmailAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).ChangeEmailAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangeEmailAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
    name: ChangeEmailAsync
    nameWithType: UserManager<TUser>.ChangeEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangeEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
    name: ChangeEmailAsync
    nameWithType: UserManager(Of TUser).ChangeEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangeEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
  isExternal: true
  name: GetPhoneNumberAsync(TUser)
  nameWithType: UserManager<TUser>.GetPhoneNumberAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetPhoneNumberAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetPhoneNumberAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetPhoneNumberAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
    name: GetPhoneNumberAsync
    nameWithType: UserManager<TUser>.GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
    name: GetPhoneNumberAsync
    nameWithType: UserManager(Of TUser).GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
  isExternal: true
  name: SetPhoneNumberAsync(TUser, String)
  nameWithType: UserManager<TUser>.SetPhoneNumberAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetPhoneNumberAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).SetPhoneNumberAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetPhoneNumberAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserManager<TUser>.SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserManager(Of TUser).SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
  isExternal: true
  name: ChangePhoneNumberAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.ChangePhoneNumberAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePhoneNumberAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).ChangePhoneNumberAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePhoneNumberAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
    name: ChangePhoneNumberAsync
    nameWithType: UserManager<TUser>.ChangePhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
    name: ChangePhoneNumberAsync
    nameWithType: UserManager(Of TUser).ChangePhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
  isExternal: true
  name: IsPhoneNumberConfirmedAsync(TUser)
  nameWithType: UserManager<TUser>.IsPhoneNumberConfirmedAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsPhoneNumberConfirmedAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).IsPhoneNumberConfirmedAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsPhoneNumberConfirmedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
    name: IsPhoneNumberConfirmedAsync
    nameWithType: UserManager<TUser>.IsPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
    name: IsPhoneNumberConfirmedAsync
    nameWithType: UserManager(Of TUser).IsPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
  isExternal: true
  name: GenerateChangePhoneNumberTokenAsync(TUser, String)
  nameWithType: UserManager<TUser>.GenerateChangePhoneNumberTokenAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangePhoneNumberTokenAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
    name: GenerateChangePhoneNumberTokenAsync
    nameWithType: UserManager<TUser>.GenerateChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
    name: GenerateChangePhoneNumberTokenAsync
    nameWithType: UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
  isExternal: true
  name: VerifyChangePhoneNumberTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.VerifyChangePhoneNumberTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyChangePhoneNumberTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
    name: VerifyChangePhoneNumberTokenAsync
    nameWithType: UserManager<TUser>.VerifyChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
    name: VerifyChangePhoneNumberTokenAsync
    nameWithType: UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
  isExternal: true
  name: VerifyUserTokenAsync(TUser, String, String, String)
  nameWithType: UserManager<TUser>.VerifyUserTokenAsync(TUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyUserTokenAsync(TUser, System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).VerifyUserTokenAsync(TUser, String, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyUserTokenAsync(TUser, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
    name: VerifyUserTokenAsync
    nameWithType: UserManager<TUser>.VerifyUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
    name: VerifyUserTokenAsync
    nameWithType: UserManager(Of TUser).VerifyUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
  isExternal: true
  name: GenerateUserTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.GenerateUserTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateUserTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).GenerateUserTokenAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateUserTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
    name: GenerateUserTokenAsync
    nameWithType: UserManager<TUser>.GenerateUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
    name: GenerateUserTokenAsync
    nameWithType: UserManager(Of TUser).GenerateUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
  isExternal: true
  name: RegisterTokenProvider(String, IUserTwoFactorTokenProvider<TUser>)
  nameWithType: UserManager<TUser>.RegisterTokenProvider(String, IUserTwoFactorTokenProvider<TUser>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RegisterTokenProvider(System.String, Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider<TUser>)
  nameWithType.vb: UserManager(Of TUser).RegisterTokenProvider(String, IUserTwoFactorTokenProvider(Of TUser))
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RegisterTokenProvider(System.String, Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider(Of TUser))
  name.vb: RegisterTokenProvider(String, IUserTwoFactorTokenProvider(Of TUser))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
    name: RegisterTokenProvider
    nameWithType: UserManager<TUser>.RegisterTokenProvider
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RegisterTokenProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1
    name: IUserTwoFactorTokenProvider
    nameWithType: IUserTwoFactorTokenProvider
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
    name: RegisterTokenProvider
    nameWithType: UserManager(Of TUser).RegisterTokenProvider
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RegisterTokenProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1
    name: IUserTwoFactorTokenProvider
    nameWithType: IUserTwoFactorTokenProvider
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
  isExternal: true
  name: GetValidTwoFactorProvidersAsync(TUser)
  nameWithType: UserManager<TUser>.GetValidTwoFactorProvidersAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetValidTwoFactorProvidersAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetValidTwoFactorProvidersAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetValidTwoFactorProvidersAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
    name: GetValidTwoFactorProvidersAsync
    nameWithType: UserManager<TUser>.GetValidTwoFactorProvidersAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetValidTwoFactorProvidersAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
    name: GetValidTwoFactorProvidersAsync
    nameWithType: UserManager(Of TUser).GetValidTwoFactorProvidersAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetValidTwoFactorProvidersAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
  isExternal: true
  name: VerifyTwoFactorTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.VerifyTwoFactorTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyTwoFactorTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).VerifyTwoFactorTokenAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyTwoFactorTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
    name: VerifyTwoFactorTokenAsync
    nameWithType: UserManager<TUser>.VerifyTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
    name: VerifyTwoFactorTokenAsync
    nameWithType: UserManager(Of TUser).VerifyTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
  isExternal: true
  name: GenerateTwoFactorTokenAsync(TUser, String)
  nameWithType: UserManager<TUser>.GenerateTwoFactorTokenAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateTwoFactorTokenAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).GenerateTwoFactorTokenAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateTwoFactorTokenAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
    name: GenerateTwoFactorTokenAsync
    nameWithType: UserManager<TUser>.GenerateTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
    name: GenerateTwoFactorTokenAsync
    nameWithType: UserManager(Of TUser).GenerateTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
  isExternal: true
  name: GetTwoFactorEnabledAsync(TUser)
  nameWithType: UserManager<TUser>.GetTwoFactorEnabledAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetTwoFactorEnabledAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetTwoFactorEnabledAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetTwoFactorEnabledAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserManager<TUser>.GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserManager(Of TUser).GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
  isExternal: true
  name: SetTwoFactorEnabledAsync(TUser, Boolean)
  nameWithType: UserManager<TUser>.SetTwoFactorEnabledAsync(TUser, Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetTwoFactorEnabledAsync(TUser, System.Boolean)
  nameWithType.vb: UserManager(Of TUser).SetTwoFactorEnabledAsync(TUser, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetTwoFactorEnabledAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserManager<TUser>.SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserManager(Of TUser).SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
  isExternal: true
  name: IsLockedOutAsync(TUser)
  nameWithType: UserManager<TUser>.IsLockedOutAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsLockedOutAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).IsLockedOutAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsLockedOutAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
    name: IsLockedOutAsync
    nameWithType: UserManager<TUser>.IsLockedOutAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsLockedOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
    name: IsLockedOutAsync
    nameWithType: UserManager(Of TUser).IsLockedOutAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsLockedOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
  isExternal: true
  name: SetLockoutEnabledAsync(TUser, Boolean)
  nameWithType: UserManager<TUser>.SetLockoutEnabledAsync(TUser, Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEnabledAsync(TUser, System.Boolean)
  nameWithType.vb: UserManager(Of TUser).SetLockoutEnabledAsync(TUser, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEnabledAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserManager<TUser>.SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserManager(Of TUser).SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
  isExternal: true
  name: GetLockoutEnabledAsync(TUser)
  nameWithType: UserManager<TUser>.GetLockoutEnabledAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEnabledAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetLockoutEnabledAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEnabledAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
    name: GetLockoutEnabledAsync
    nameWithType: UserManager<TUser>.GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
    name: GetLockoutEnabledAsync
    nameWithType: UserManager(Of TUser).GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
  isExternal: true
  name: GetLockoutEndDateAsync(TUser)
  nameWithType: UserManager<TUser>.GetLockoutEndDateAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEndDateAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetLockoutEndDateAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEndDateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
    name: GetLockoutEndDateAsync
    nameWithType: UserManager<TUser>.GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
    name: GetLockoutEndDateAsync
    nameWithType: UserManager(Of TUser).GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
  isExternal: true
  name: SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>)
  nameWithType: UserManager<TUser>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEndDateAsync(TUser, System.Nullable<System.DateTimeOffset>)
  nameWithType.vb: UserManager(Of TUser).SetLockoutEndDateAsync(TUser, Nullable(Of DateTimeOffset))
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEndDateAsync(TUser, System.Nullable(Of System.DateTimeOffset))
  name.vb: SetLockoutEndDateAsync(TUser, Nullable(Of DateTimeOffset))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
    name: SetLockoutEndDateAsync
    nameWithType: UserManager<TUser>.SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
    name: SetLockoutEndDateAsync
    nameWithType: UserManager(Of TUser).SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
  isExternal: true
  name: AccessFailedAsync(TUser)
  nameWithType: UserManager<TUser>.AccessFailedAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AccessFailedAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).AccessFailedAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AccessFailedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
    name: AccessFailedAsync
    nameWithType: UserManager<TUser>.AccessFailedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AccessFailedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
    name: AccessFailedAsync
    nameWithType: UserManager(Of TUser).AccessFailedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AccessFailedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
  isExternal: true
  name: ResetAccessFailedCountAsync(TUser)
  nameWithType: UserManager<TUser>.ResetAccessFailedCountAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAccessFailedCountAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).ResetAccessFailedCountAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAccessFailedCountAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
    name: ResetAccessFailedCountAsync
    nameWithType: UserManager<TUser>.ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
    name: ResetAccessFailedCountAsync
    nameWithType: UserManager(Of TUser).ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
  isExternal: true
  name: GetAccessFailedCountAsync(TUser)
  nameWithType: UserManager<TUser>.GetAccessFailedCountAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAccessFailedCountAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetAccessFailedCountAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAccessFailedCountAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
    name: GetAccessFailedCountAsync
    nameWithType: UserManager<TUser>.GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
    name: GetAccessFailedCountAsync
    nameWithType: UserManager(Of TUser).GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
  isExternal: true
  name: GetUsersForClaimAsync(Claim)
  nameWithType: UserManager<TUser>.GetUsersForClaimAsync(Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersForClaimAsync(System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser).GetUsersForClaimAsync(Claim)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersForClaimAsync(System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
    name: GetUsersForClaimAsync
    nameWithType: UserManager<TUser>.GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersForClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
    name: GetUsersForClaimAsync
    nameWithType: UserManager(Of TUser).GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersForClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
  isExternal: true
  name: GetUsersInRoleAsync(String)
  nameWithType: UserManager<TUser>.GetUsersInRoleAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersInRoleAsync(System.String)
  nameWithType.vb: UserManager(Of TUser).GetUsersInRoleAsync(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersInRoleAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
    name: GetUsersInRoleAsync
    nameWithType: UserManager<TUser>.GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
    name: GetUsersInRoleAsync
    nameWithType: UserManager(Of TUser).GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
  isExternal: true
  name: GetAuthenticationTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.GetAuthenticationTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticationTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).GetAuthenticationTokenAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticationTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
    name: GetAuthenticationTokenAsync
    nameWithType: UserManager<TUser>.GetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
    name: GetAuthenticationTokenAsync
    nameWithType: UserManager(Of TUser).GetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
  isExternal: true
  name: SetAuthenticationTokenAsync(TUser, String, String, String)
  nameWithType: UserManager<TUser>.SetAuthenticationTokenAsync(TUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetAuthenticationTokenAsync(TUser, System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).SetAuthenticationTokenAsync(TUser, String, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetAuthenticationTokenAsync(TUser, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
    name: SetAuthenticationTokenAsync
    nameWithType: UserManager<TUser>.SetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetAuthenticationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
    name: SetAuthenticationTokenAsync
    nameWithType: UserManager(Of TUser).SetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetAuthenticationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
  isExternal: true
  name: RemoveAuthenticationTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.RemoveAuthenticationTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveAuthenticationTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).RemoveAuthenticationTokenAsync(TUser, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveAuthenticationTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
    name: RemoveAuthenticationTokenAsync
    nameWithType: UserManager<TUser>.RemoveAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveAuthenticationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
    name: RemoveAuthenticationTokenAsync
    nameWithType: UserManager(Of TUser).RemoveAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveAuthenticationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
  isExternal: true
  name: GetAuthenticatorKeyAsync(TUser)
  nameWithType: UserManager<TUser>.GetAuthenticatorKeyAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticatorKeyAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetAuthenticatorKeyAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticatorKeyAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
    name: GetAuthenticatorKeyAsync
    nameWithType: UserManager<TUser>.GetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
    name: GetAuthenticatorKeyAsync
    nameWithType: UserManager(Of TUser).GetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
  isExternal: true
  name: ResetAuthenticatorKeyAsync(TUser)
  nameWithType: UserManager<TUser>.ResetAuthenticatorKeyAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAuthenticatorKeyAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).ResetAuthenticatorKeyAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAuthenticatorKeyAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
    name: ResetAuthenticatorKeyAsync
    nameWithType: UserManager<TUser>.ResetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
    name: ResetAuthenticatorKeyAsync
    nameWithType: UserManager(Of TUser).ResetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
  isExternal: true
  name: GenerateNewAuthenticatorKey()
  nameWithType: UserManager<TUser>.GenerateNewAuthenticatorKey()
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateNewAuthenticatorKey()
  nameWithType.vb: UserManager(Of TUser).GenerateNewAuthenticatorKey()
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateNewAuthenticatorKey()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
    name: GenerateNewAuthenticatorKey
    nameWithType: UserManager<TUser>.GenerateNewAuthenticatorKey
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateNewAuthenticatorKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
    name: GenerateNewAuthenticatorKey
    nameWithType: UserManager(Of TUser).GenerateNewAuthenticatorKey
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateNewAuthenticatorKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
  isExternal: true
  name: GenerateNewTwoFactorRecoveryCodesAsync(TUser, Int32)
  nameWithType: UserManager<TUser>.GenerateNewTwoFactorRecoveryCodesAsync(TUser, Int32)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateNewTwoFactorRecoveryCodesAsync(TUser, System.Int32)
  nameWithType.vb: UserManager(Of TUser).GenerateNewTwoFactorRecoveryCodesAsync(TUser, Int32)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateNewTwoFactorRecoveryCodesAsync(TUser, System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
    name: GenerateNewTwoFactorRecoveryCodesAsync
    nameWithType: UserManager<TUser>.GenerateNewTwoFactorRecoveryCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateNewTwoFactorRecoveryCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
    name: GenerateNewTwoFactorRecoveryCodesAsync
    nameWithType: UserManager(Of TUser).GenerateNewTwoFactorRecoveryCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateNewTwoFactorRecoveryCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
  isExternal: true
  name: CreateTwoFactorRecoveryCode()
  nameWithType: UserManager<TUser>.CreateTwoFactorRecoveryCode()
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateTwoFactorRecoveryCode()
  nameWithType.vb: UserManager(Of TUser).CreateTwoFactorRecoveryCode()
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateTwoFactorRecoveryCode()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
    name: CreateTwoFactorRecoveryCode
    nameWithType: UserManager<TUser>.CreateTwoFactorRecoveryCode
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateTwoFactorRecoveryCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
    name: CreateTwoFactorRecoveryCode
    nameWithType: UserManager(Of TUser).CreateTwoFactorRecoveryCode
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateTwoFactorRecoveryCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
  isExternal: true
  name: RedeemTwoFactorRecoveryCodeAsync(TUser, String)
  nameWithType: UserManager<TUser>.RedeemTwoFactorRecoveryCodeAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RedeemTwoFactorRecoveryCodeAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).RedeemTwoFactorRecoveryCodeAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RedeemTwoFactorRecoveryCodeAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
    name: RedeemTwoFactorRecoveryCodeAsync
    nameWithType: UserManager<TUser>.RedeemTwoFactorRecoveryCodeAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RedeemTwoFactorRecoveryCodeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
    name: RedeemTwoFactorRecoveryCodeAsync
    nameWithType: UserManager(Of TUser).RedeemTwoFactorRecoveryCodeAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RedeemTwoFactorRecoveryCodeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
  isExternal: true
  name: CountRecoveryCodesAsync(TUser)
  nameWithType: UserManager<TUser>.CountRecoveryCodesAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CountRecoveryCodesAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).CountRecoveryCodesAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CountRecoveryCodesAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
    name: CountRecoveryCodesAsync
    nameWithType: UserManager<TUser>.CountRecoveryCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CountRecoveryCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
    name: CountRecoveryCodesAsync
    nameWithType: UserManager(Of TUser).CountRecoveryCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CountRecoveryCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: UserManager<TUser>.Dispose(Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose(System.Boolean)
  nameWithType.vb: UserManager(Of TUser).Dispose(Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserManager<TUser>.Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserManager(Of TUser).Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
  isExternal: true
  name: CreateSecurityTokenAsync(TUser)
  nameWithType: UserManager<TUser>.CreateSecurityTokenAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateSecurityTokenAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).CreateSecurityTokenAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateSecurityTokenAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
    name: CreateSecurityTokenAsync
    nameWithType: UserManager<TUser>.CreateSecurityTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateSecurityTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
    name: CreateSecurityTokenAsync
    nameWithType: UserManager(Of TUser).CreateSecurityTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateSecurityTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
  isExternal: true
  name: UpdatePasswordHash(TUser, String, Boolean)
  nameWithType: UserManager<TUser>.UpdatePasswordHash(TUser, String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdatePasswordHash(TUser, System.String, System.Boolean)
  nameWithType.vb: UserManager(Of TUser).UpdatePasswordHash(TUser, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdatePasswordHash(TUser, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
    name: UpdatePasswordHash
    nameWithType: UserManager<TUser>.UpdatePasswordHash
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdatePasswordHash
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
    name: UpdatePasswordHash
    nameWithType: UserManager(Of TUser).UpdatePasswordHash
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdatePasswordHash
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
  isExternal: true
  name: GetChangeEmailTokenPurpose(String)
  nameWithType: UserManager<TUser>.GetChangeEmailTokenPurpose(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetChangeEmailTokenPurpose(System.String)
  nameWithType.vb: UserManager(Of TUser).GetChangeEmailTokenPurpose(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetChangeEmailTokenPurpose(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
    name: GetChangeEmailTokenPurpose
    nameWithType: UserManager<TUser>.GetChangeEmailTokenPurpose
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetChangeEmailTokenPurpose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
    name: GetChangeEmailTokenPurpose
    nameWithType: UserManager(Of TUser).GetChangeEmailTokenPurpose
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetChangeEmailTokenPurpose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
  isExternal: true
  name: ValidateUserAsync(TUser)
  nameWithType: UserManager<TUser>.ValidateUserAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ValidateUserAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).ValidateUserAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ValidateUserAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
    name: ValidateUserAsync
    nameWithType: UserManager<TUser>.ValidateUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ValidateUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
    name: ValidateUserAsync
    nameWithType: UserManager(Of TUser).ValidateUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ValidateUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
  isExternal: true
  name: ValidatePasswordAsync(TUser, String)
  nameWithType: UserManager<TUser>.ValidatePasswordAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ValidatePasswordAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).ValidatePasswordAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ValidatePasswordAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
    name: ValidatePasswordAsync
    nameWithType: UserManager<TUser>.ValidatePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ValidatePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
    name: ValidatePasswordAsync
    nameWithType: UserManager(Of TUser).ValidatePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ValidatePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
  isExternal: true
  name: UpdateUserAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateUserAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateUserAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateUserAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateUserAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
    name: UpdateUserAsync
    nameWithType: UserManager<TUser>.UpdateUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
    name: UpdateUserAsync
    nameWithType: UserManager(Of TUser).UpdateUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
  isExternal: true
  name: ThrowIfDisposed()
  nameWithType: UserManager<TUser>.ThrowIfDisposed()
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ThrowIfDisposed()
  nameWithType.vb: UserManager(Of TUser).ThrowIfDisposed()
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserManager<TUser>.ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ThrowIfDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserManager(Of TUser).ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ThrowIfDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.CancellationToken
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: UserManager<TUser>.CancellationToken
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CancellationToken
  nameWithType.vb: UserManager(Of TUser).CancellationToken
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CancellationToken
- uid: Microsoft.AspNetCore.Identity.UserManager`1.Store
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.Store
  isExternal: true
  name: Store
  nameWithType: UserManager<TUser>.Store
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Store
  nameWithType.vb: UserManager(Of TUser).Store
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Store
- uid: Microsoft.AspNetCore.Identity.UserManager`1.Logger
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.Logger
  isExternal: true
  name: Logger
  nameWithType: UserManager<TUser>.Logger
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Logger
  nameWithType.vb: UserManager(Of TUser).Logger
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Logger
- uid: Microsoft.AspNetCore.Identity.UserManager`1.PasswordHasher
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.PasswordHasher
  isExternal: true
  name: PasswordHasher
  nameWithType: UserManager<TUser>.PasswordHasher
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.PasswordHasher
  nameWithType.vb: UserManager(Of TUser).PasswordHasher
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).PasswordHasher
- uid: Microsoft.AspNetCore.Identity.UserManager`1.UserValidators
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.UserValidators
  isExternal: true
  name: UserValidators
  nameWithType: UserManager<TUser>.UserValidators
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UserValidators
  nameWithType.vb: UserManager(Of TUser).UserValidators
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UserValidators
- uid: Microsoft.AspNetCore.Identity.UserManager`1.PasswordValidators
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.PasswordValidators
  isExternal: true
  name: PasswordValidators
  nameWithType: UserManager<TUser>.PasswordValidators
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.PasswordValidators
  nameWithType.vb: UserManager(Of TUser).PasswordValidators
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).PasswordValidators
- uid: Microsoft.AspNetCore.Identity.UserManager`1.KeyNormalizer
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.KeyNormalizer
  isExternal: true
  name: KeyNormalizer
  nameWithType: UserManager<TUser>.KeyNormalizer
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.KeyNormalizer
  nameWithType.vb: UserManager(Of TUser).KeyNormalizer
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).KeyNormalizer
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ErrorDescriber
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.ErrorDescriber
  isExternal: true
  name: ErrorDescriber
  nameWithType: UserManager<TUser>.ErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ErrorDescriber
  nameWithType.vb: UserManager(Of TUser).ErrorDescriber
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ErrorDescriber
- uid: Microsoft.AspNetCore.Identity.UserManager`1.Options
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.Options
  isExternal: true
  name: Options
  nameWithType: UserManager<TUser>.Options
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Options
  nameWithType.vb: UserManager(Of TUser).Options
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Options
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens
  isExternal: true
  name: SupportsUserAuthenticationTokens
  nameWithType: UserManager<TUser>.SupportsUserAuthenticationTokens
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserAuthenticationTokens
  nameWithType.vb: UserManager(Of TUser).SupportsUserAuthenticationTokens
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserAuthenticationTokens
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticatorKey
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticatorKey
  isExternal: true
  name: SupportsUserAuthenticatorKey
  nameWithType: UserManager<TUser>.SupportsUserAuthenticatorKey
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserAuthenticatorKey
  nameWithType.vb: UserManager(Of TUser).SupportsUserAuthenticatorKey
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserAuthenticatorKey
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactorRecoveryCodes
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactorRecoveryCodes
  isExternal: true
  name: SupportsUserTwoFactorRecoveryCodes
  nameWithType: UserManager<TUser>.SupportsUserTwoFactorRecoveryCodes
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserTwoFactorRecoveryCodes
  nameWithType.vb: UserManager(Of TUser).SupportsUserTwoFactorRecoveryCodes
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserTwoFactorRecoveryCodes
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor
  isExternal: true
  name: SupportsUserTwoFactor
  nameWithType: UserManager<TUser>.SupportsUserTwoFactor
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserTwoFactor
  nameWithType.vb: UserManager(Of TUser).SupportsUserTwoFactor
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserTwoFactor
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword
  isExternal: true
  name: SupportsUserPassword
  nameWithType: UserManager<TUser>.SupportsUserPassword
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserPassword
  nameWithType.vb: UserManager(Of TUser).SupportsUserPassword
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserPassword
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp
  isExternal: true
  name: SupportsUserSecurityStamp
  nameWithType: UserManager<TUser>.SupportsUserSecurityStamp
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserSecurityStamp
  nameWithType.vb: UserManager(Of TUser).SupportsUserSecurityStamp
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserSecurityStamp
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole
  isExternal: true
  name: SupportsUserRole
  nameWithType: UserManager<TUser>.SupportsUserRole
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserRole
  nameWithType.vb: UserManager(Of TUser).SupportsUserRole
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserRole
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin
  isExternal: true
  name: SupportsUserLogin
  nameWithType: UserManager<TUser>.SupportsUserLogin
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserLogin
  nameWithType.vb: UserManager(Of TUser).SupportsUserLogin
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserLogin
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail
  isExternal: true
  name: SupportsUserEmail
  nameWithType: UserManager<TUser>.SupportsUserEmail
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserEmail
  nameWithType.vb: UserManager(Of TUser).SupportsUserEmail
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserEmail
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber
  isExternal: true
  name: SupportsUserPhoneNumber
  nameWithType: UserManager<TUser>.SupportsUserPhoneNumber
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserPhoneNumber
  nameWithType.vb: UserManager(Of TUser).SupportsUserPhoneNumber
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserPhoneNumber
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim
  isExternal: true
  name: SupportsUserClaim
  nameWithType: UserManager<TUser>.SupportsUserClaim
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserClaim
  nameWithType.vb: UserManager(Of TUser).SupportsUserClaim
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserClaim
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout
  isExternal: true
  name: SupportsUserLockout
  nameWithType: UserManager<TUser>.SupportsUserLockout
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserLockout
  nameWithType.vb: UserManager(Of TUser).SupportsUserLockout
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserLockout
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers
  isExternal: true
  name: SupportsQueryableUsers
  nameWithType: UserManager<TUser>.SupportsQueryableUsers
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsQueryableUsers
  nameWithType.vb: UserManager(Of TUser).SupportsQueryableUsers
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsQueryableUsers
- uid: Microsoft.AspNetCore.Identity.UserManager`1.Users
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.Users
  isExternal: true
  name: Users
  nameWithType: UserManager<TUser>.Users
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Users
  nameWithType.vb: UserManager(Of TUser).Users
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Users
- uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  isExternal: true
  name: CopyMap<TDestination>(Object, JsonSerializerSettings)
  nameWithType: ObjectHelper.CopyMap<TDestination>(Object, JsonSerializerSettings)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(System.Object, Newtonsoft.Json.JsonSerializerSettings)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(Object, JsonSerializerSettings)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(System.Object, Newtonsoft.Json.JsonSerializerSettings)
  name.vb: CopyMap(Of TDestination)(Object, JsonSerializerSettings)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Utilities.General.Helpers.ObjectHelper
  commentId: T:es.efor.Utilities.General.Helpers.ObjectHelper
  parent: es.efor.Utilities.General.Helpers
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper
- uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  isExternal: true
  name: CopyMap<TDestination>(Object, ReferenceLoopHandling)
  nameWithType: ObjectHelper.CopyMap<TDestination>(Object, ReferenceLoopHandling)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(System.Object, Newtonsoft.Json.ReferenceLoopHandling)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(Object, ReferenceLoopHandling)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(System.Object, Newtonsoft.Json.ReferenceLoopHandling)
  name.vb: CopyMap(Of TDestination)(Object, ReferenceLoopHandling)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Utilities.General.Helpers
  commentId: N:es.efor.Utilities.General.Helpers
  name: es.efor.Utilities.General.Helpers
  nameWithType: es.efor.Utilities.General.Helpers
  fullName: es.efor.Utilities.General.Helpers
- uid: es.efor.Auth.Managers.IdentityUserManager`2.#ctor*
  commentId: Overload:es.efor.Auth.Managers.IdentityUserManager`2.#ctor
  name: IdentityUserManager
  nameWithType: IdentityUserManager<TUserId, TUser>.IdentityUserManager
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.IdentityUserManager
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser).IdentityUserManager
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).IdentityUserManager
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserStore{`1}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserStore`1
  name: IUserStore<TUser>
  nameWithType: IUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>
  nameWithType.vb: IUserStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser)
  name.vb: IUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<IdentityOptions>
  nameWithType: IOptions<IdentityOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.IdentityOptions>
  nameWithType.vb: IOptions(Of IdentityOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Identity.IdentityOptions)
  name.vb: IOptions(Of IdentityOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IdentityOptions
    name: IdentityOptions
    nameWithType: IdentityOptions
    fullName: Microsoft.AspNetCore.Identity.IdentityOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IdentityOptions
    name: IdentityOptions
    nameWithType: IdentityOptions
    fullName: Microsoft.AspNetCore.Identity.IdentityOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IPasswordHasher{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IPasswordHasher{`1}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IPasswordHasher`1
  name: IPasswordHasher<TUser>
  nameWithType: IPasswordHasher<TUser>
  fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>
  nameWithType.vb: IPasswordHasher(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser)
  name.vb: IPasswordHasher(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    name: IPasswordHasher
    nameWithType: IPasswordHasher
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    name: IPasswordHasher
    nameWithType: IPasswordHasher
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{{TUser}}}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IUserValidator<TUser>>
  nameWithType: IEnumerable<IUserValidator<TUser>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IUserValidator<TUser>>
  nameWithType.vb: IEnumerable(Of IUserValidator(Of TUser))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Identity.IUserValidator(Of TUser))
  name.vb: IEnumerable(Of IUserValidator(Of TUser))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IUserValidator`1
    name: IUserValidator
    nameWithType: IUserValidator
    fullName: Microsoft.AspNetCore.Identity.IUserValidator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IUserValidator`1
    name: IUserValidator
    nameWithType: IUserValidator
    fullName: Microsoft.AspNetCore.Identity.IUserValidator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{{TUser}}}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IPasswordValidator<TUser>>
  nameWithType: IEnumerable<IPasswordValidator<TUser>>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IPasswordValidator<TUser>>
  nameWithType.vb: IEnumerable(Of IPasswordValidator(Of TUser))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Identity.IPasswordValidator(Of TUser))
  name.vb: IEnumerable(Of IPasswordValidator(Of TUser))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IPasswordValidator`1
    name: IPasswordValidator
    nameWithType: IPasswordValidator
    fullName: Microsoft.AspNetCore.Identity.IPasswordValidator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IPasswordValidator`1
    name: IPasswordValidator
    nameWithType: IPasswordValidator
    fullName: Microsoft.AspNetCore.Identity.IPasswordValidator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.ILookupNormalizer
  commentId: T:Microsoft.AspNetCore.Identity.ILookupNormalizer
  parent: Microsoft.AspNetCore.Identity
  isExternal: true
  name: ILookupNormalizer
  nameWithType: ILookupNormalizer
  fullName: Microsoft.AspNetCore.Identity.ILookupNormalizer
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  commentId: T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  parent: Microsoft.AspNetCore.Identity
  isExternal: true
  name: IdentityErrorDescriber
  nameWithType: IdentityErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{{TUser}}}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{`1}}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<UserManager<TUser>>
  nameWithType: ILogger<UserManager<TUser>>
  fullName: Microsoft.Extensions.Logging.ILogger<Microsoft.AspNetCore.Identity.UserManager<TUser>>
  nameWithType.vb: ILogger(Of UserManager(Of TUser))
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Microsoft.AspNetCore.Identity.UserManager(Of TUser))
  name.vb: ILogger(Of UserManager(Of TUser))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserStore`1
  isExternal: true
  name: IUserStore<TUser>
  nameWithType: IUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>
  nameWithType.vb: IUserStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser)
  name.vb: IUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: true
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
  commentId: T:Microsoft.AspNetCore.Identity.IPasswordHasher`1
  isExternal: true
  name: IPasswordHasher<TUser>
  nameWithType: IPasswordHasher<TUser>
  fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>
  nameWithType.vb: IPasswordHasher(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser)
  name.vb: IPasswordHasher(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    name: IPasswordHasher
    nameWithType: IPasswordHasher
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    name: IPasswordHasher
    nameWithType: IPasswordHasher
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync*
  commentId: Overload:es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync
  name: FindByIdAsync
  nameWithType: IdentityUserManager<TUserId, TUser>.FindByIdAsync
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.FindByIdAsync
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser).FindByIdAsync
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).FindByIdAsync
- uid: System.Collections.Generic.IEnumerable{{TUserId}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TUserId>
  nameWithType: IEnumerable<TUserId>
  fullName: System.Collections.Generic.IEnumerable<TUserId>
  nameWithType.vb: IEnumerable(Of TUserId)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TUserId)
  name.vb: IEnumerable(Of TUserId)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserId
    nameWithType: TUserId
    fullName: TUserId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserId
    nameWithType: TUserId
    fullName: TUserId
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TUser}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<TUser>>
  nameWithType: Task<IEnumerable<TUser>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TUser>>
  nameWithType.vb: Task(Of IEnumerable(Of TUser))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of TUser))
  name.vb: Task(Of IEnumerable(Of TUser))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: '{TUserId}'
  commentId: '!:TUserId'
  definition: TUserId
  name: TUserId
  nameWithType: TUserId
  fullName: TUserId
- uid: System.Threading.Tasks.Task{{TUser}}
  commentId: T:System.Threading.Tasks.Task{`1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TUser>
  nameWithType: Task<TUser>
  fullName: System.Threading.Tasks.Task<TUser>
  nameWithType.vb: Task(Of TUser)
  fullName.vb: System.Threading.Tasks.Task(Of TUser)
  name.vb: Task(Of TUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: TUserId
  commentId: '!:TUserId'
  name: TUserId
  nameWithType: TUserId
  fullName: TUserId
- uid: es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync*
  commentId: Overload:es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync
  name: UpdateAsync
  nameWithType: IdentityUserManager<TUserId, TUser>.UpdateAsync
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.UpdateAsync
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser).UpdateAsync
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).UpdateAsync
- uid: System.Collections.Generic.IEnumerable{{TUser}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TUser>
  nameWithType: IEnumerable<TUser>
  fullName: System.Collections.Generic.IEnumerable<TUser>
  nameWithType.vb: IEnumerable(Of TUser)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TUser)
  name.vb: IEnumerable(Of TUser)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{{TUserId},Microsoft.AspNetCore.Identity.IdentityResult}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{`0,Microsoft.AspNetCore.Identity.IdentityResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Dictionary<TUserId, IdentityResult>>
  nameWithType: Task<Dictionary<TUserId, IdentityResult>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<TUserId, Microsoft.AspNetCore.Identity.IdentityResult>>
  nameWithType.vb: Task(Of Dictionary(Of TUserId, IdentityResult))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.Dictionary(Of TUserId, Microsoft.AspNetCore.Identity.IdentityResult))
  name.vb: Task(Of Dictionary(Of TUserId, IdentityResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserId
    nameWithType: TUserId
    fullName: TUserId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.IdentityResult
    name: IdentityResult
    nameWithType: IdentityResult
    fullName: Microsoft.AspNetCore.Identity.IdentityResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserId
    nameWithType: TUserId
    fullName: TUserId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.IdentityResult
    name: IdentityResult
    nameWithType: IdentityResult
    fullName: Microsoft.AspNetCore.Identity.IdentityResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync*
  commentId: Overload:es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync
  name: IsInAllRolesAsync
  nameWithType: IdentityUserManager<TUserId, TUser>.IsInAllRolesAsync
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.IsInAllRolesAsync
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser).IsInAllRolesAsync
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).IsInAllRolesAsync
- uid: '{TUser}'
  commentId: '!:TUser'
  definition: TUser
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TUser
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync*
  commentId: Overload:es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync
  name: IsInAnyRoleAsync
  nameWithType: IdentityUserManager<TUserId, TUser>.IsInAnyRoleAsync
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.IsInAnyRoleAsync
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser).IsInAnyRoleAsync
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).IsInAnyRoleAsync
