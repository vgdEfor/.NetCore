### YamlMime:ManagedReference
items:
- uid: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService
  commentId: T:es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService
  id: ILogImportService
  parent: es.efor.Musaat.Imports.Model.Services.LogImportsServices
  children:
  - es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetAll
  - es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImportById(System.Int32)
  - es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImports(System.String,System.String)
  - es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.Set(es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO)
  langs:
  - csharp
  - vb
  name: ILogImportService
  nameWithType: ILogImportService
  fullName: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService
  type: Interface
  source:
    remote:
      path: es.efor.Musaat.Imports.Business/Services/LogImportServices/ILogImportService.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: ILogImportService
    path: ../es.efor.Musaat.Imports.Business/Services/LogImportServices/ILogImportService.cs
    startLine: 6
  assemblies:
  - es.efor.Musaat.Imports.Business
  namespace: es.efor.Musaat.Imports.Model.Services.LogImportsServices
  syntax:
    content: public interface ILogImportService
    content.vb: Public Interface ILogImportService
  extensionMethods:
  - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
  - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetAll
  commentId: M:es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetAll
  id: GetAll
  parent: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService
  langs:
  - csharp
  - vb
  name: GetAll()
  nameWithType: ILogImportService.GetAll()
  fullName: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetAll()
  type: Method
  source:
    remote:
      path: es.efor.Musaat.Imports.Business/Services/LogImportServices/ILogImportService.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: GetAll
    path: ../es.efor.Musaat.Imports.Business/Services/LogImportServices/ILogImportService.cs
    startLine: 12
  assemblies:
  - es.efor.Musaat.Imports.Business
  namespace: es.efor.Musaat.Imports.Model.Services.LogImportsServices
  summary: "\nReturns a list of logs\n"
  example: []
  syntax:
    content: Task<List<LogImportDTO>> GetAll()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO}}
      description: ''
    content.vb: Function GetAll As Task(Of List(Of LogImportDTO))
  overload: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetAll*
- uid: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImports(System.String,System.String)
  commentId: M:es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImports(System.String,System.String)
  id: GetLogImports(System.String,System.String)
  parent: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService
  langs:
  - csharp
  - vb
  name: GetLogImports(String, String)
  nameWithType: ILogImportService.GetLogImports(String, String)
  fullName: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImports(System.String, System.String)
  type: Method
  source:
    remote:
      path: es.efor.Musaat.Imports.Business/Services/LogImportServices/ILogImportService.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: GetLogImports
    path: ../es.efor.Musaat.Imports.Business/Services/LogImportServices/ILogImportService.cs
    startLine: 18
  assemblies:
  - es.efor.Musaat.Imports.Business
  namespace: es.efor.Musaat.Imports.Model.Services.LogImportsServices
  summary: "\nReturns a list of logs with filter\n"
  example: []
  syntax:
    content: Task<List<LogImportDTO>> GetLogImports(string dateFrom, string dateTo)
    parameters:
    - id: dateFrom
      type: System.String
    - id: dateTo
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO}}
      description: ''
    content.vb: Function GetLogImports(dateFrom As String, dateTo As String) As Task(Of List(Of LogImportDTO))
  overload: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImports*
- uid: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImportById(System.Int32)
  commentId: M:es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImportById(System.Int32)
  id: GetLogImportById(System.Int32)
  parent: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService
  langs:
  - csharp
  - vb
  name: GetLogImportById(Int32)
  nameWithType: ILogImportService.GetLogImportById(Int32)
  fullName: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImportById(System.Int32)
  type: Method
  source:
    remote:
      path: es.efor.Musaat.Imports.Business/Services/LogImportServices/ILogImportService.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: GetLogImportById
    path: ../es.efor.Musaat.Imports.Business/Services/LogImportServices/ILogImportService.cs
    startLine: 25
  assemblies:
  - es.efor.Musaat.Imports.Business
  namespace: es.efor.Musaat.Imports.Model.Services.LogImportsServices
  summary: "\nReturns LogImportDTO with the specified id\n"
  example: []
  syntax:
    content: Task<LogImportDTO> GetLogImportById(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Log ID to lookup
    return:
      type: System.Threading.Tasks.Task{es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO}
      description: ''
    content.vb: Function GetLogImportById(id As Integer) As Task(Of LogImportDTO)
  overload: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImportById*
- uid: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.Set(es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO)
  commentId: M:es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.Set(es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO)
  id: Set(es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO)
  parent: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService
  langs:
  - csharp
  - vb
  name: Set(LogImportDTO)
  nameWithType: ILogImportService.Set(LogImportDTO)
  fullName: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.Set(es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO)
  type: Method
  source:
    remote:
      path: es.efor.Musaat.Imports.Business/Services/LogImportServices/ILogImportService.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: Set
    path: ../es.efor.Musaat.Imports.Business/Services/LogImportServices/ILogImportService.cs
    startLine: 32
  assemblies:
  - es.efor.Musaat.Imports.Business
  namespace: es.efor.Musaat.Imports.Model.Services.LogImportsServices
  summary: "\nSaves the log to DB. If the log already exist, update it\n"
  example: []
  syntax:
    content: Task<bool> Set(LogImportDTO logImport)
    parameters:
    - id: logImport
      type: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO
      description: Log to save
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Status of the task
    content.vb: Function Set(logImport As LogImportDTO) As Task(Of Boolean)
  overload: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.Set*
references:
- uid: es.efor.Musaat.Imports.Model.Services.LogImportsServices
  commentId: N:es.efor.Musaat.Imports.Model.Services.LogImportsServices
  name: es.efor.Musaat.Imports.Model.Services.LogImportsServices
  nameWithType: es.efor.Musaat.Imports.Model.Services.LogImportsServices
  fullName: es.efor.Musaat.Imports.Model.Services.LogImportsServices
- uid: System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  parent: es.efor.Utilities.General.Helpers.ObjectHelper
  definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  name: CopyMap<TDestination>(JsonSerializerSettings)
  nameWithType: ObjectHelper.CopyMap<TDestination>(JsonSerializerSettings)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(Newtonsoft.Json.JsonSerializerSettings)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(JsonSerializerSettings)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(Newtonsoft.Json.JsonSerializerSettings)
  name.vb: CopyMap(Of TDestination)(JsonSerializerSettings)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  parent: es.efor.Utilities.General.Helpers.ObjectHelper
  definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  name: CopyMap<TDestination>(ReferenceLoopHandling)
  nameWithType: ObjectHelper.CopyMap<TDestination>(ReferenceLoopHandling)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(Newtonsoft.Json.ReferenceLoopHandling)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(ReferenceLoopHandling)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(Newtonsoft.Json.ReferenceLoopHandling)
  name.vb: CopyMap(Of TDestination)(ReferenceLoopHandling)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  isExternal: true
  name: CopyMap<TDestination>(Object, JsonSerializerSettings)
  nameWithType: ObjectHelper.CopyMap<TDestination>(Object, JsonSerializerSettings)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(System.Object, Newtonsoft.Json.JsonSerializerSettings)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(Object, JsonSerializerSettings)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(System.Object, Newtonsoft.Json.JsonSerializerSettings)
  name.vb: CopyMap(Of TDestination)(Object, JsonSerializerSettings)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Utilities.General.Helpers.ObjectHelper
  commentId: T:es.efor.Utilities.General.Helpers.ObjectHelper
  parent: es.efor.Utilities.General.Helpers
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper
- uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  isExternal: true
  name: CopyMap<TDestination>(Object, ReferenceLoopHandling)
  nameWithType: ObjectHelper.CopyMap<TDestination>(Object, ReferenceLoopHandling)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(System.Object, Newtonsoft.Json.ReferenceLoopHandling)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(Object, ReferenceLoopHandling)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(System.Object, Newtonsoft.Json.ReferenceLoopHandling)
  name.vb: CopyMap(Of TDestination)(Object, ReferenceLoopHandling)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Utilities.General.Helpers
  commentId: N:es.efor.Utilities.General.Helpers
  name: es.efor.Utilities.General.Helpers
  nameWithType: es.efor.Utilities.General.Helpers
  fullName: es.efor.Utilities.General.Helpers
- uid: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetAll*
  commentId: Overload:es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetAll
  name: GetAll
  nameWithType: ILogImportService.GetAll
  fullName: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetAll
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<LogImportDTO>>
  nameWithType: Task<List<LogImportDTO>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO>>
  nameWithType.vb: Task(Of List(Of LogImportDTO))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO))
  name.vb: Task(Of List(Of LogImportDTO))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO
    name: LogImportDTO
    nameWithType: LogImportDTO
    fullName: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO
    name: LogImportDTO
    nameWithType: LogImportDTO
    fullName: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImports*
  commentId: Overload:es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImports
  name: GetLogImports
  nameWithType: ILogImportService.GetLogImports
  fullName: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImports
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImportById*
  commentId: Overload:es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImportById
  name: GetLogImportById
  nameWithType: ILogImportService.GetLogImportById
  fullName: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.GetLogImportById
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO}
  commentId: T:System.Threading.Tasks.Task{es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LogImportDTO>
  nameWithType: Task<LogImportDTO>
  fullName: System.Threading.Tasks.Task<es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO>
  nameWithType.vb: Task(Of LogImportDTO)
  fullName.vb: System.Threading.Tasks.Task(Of es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO)
  name.vb: Task(Of LogImportDTO)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO
    name: LogImportDTO
    nameWithType: LogImportDTO
    fullName: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO
    name: LogImportDTO
    nameWithType: LogImportDTO
    fullName: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.Set*
  commentId: Overload:es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.Set
  name: Set
  nameWithType: ILogImportService.Set
  fullName: es.efor.Musaat.Imports.Model.Services.LogImportsServices.ILogImportService.Set
- uid: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO
  commentId: T:es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO
  parent: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs
  name: LogImportDTO
  nameWithType: LogImportDTO
  fullName: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs.LogImportDTO
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs
  commentId: N:es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs
  name: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs
  nameWithType: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs
  fullName: es.efor.Musaat.Infraestructure.DTO.LogImportsDTOs
