{"version":3,"sources":["./src/app/pages/main/main.component.ts","./src/app/pages/main/main.component.html","./src/app/shared/api/models/policy-menu.ts","./src/app/shared/services/app-menu/app-menu.service.ts","./src/app/pages/pages.module.ts","./src/app/shared/services/auth/auth.service.ts","./src/app/shared/guards/auth/auth.guard.ts"],"names":[],"mappings":"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","file":"pages-pages-module.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { filter, debounceTime } from 'rxjs/operators';\r\nimport { DestroySubscriptionsDirective } from 'src/app/shared/models/_basic/destroy-subscriptions';\r\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { LayoutMenuItem } from 'ax-toolbox';\r\nimport { LayoutMenuService } from 'src/app/shared/api/services/layout-menu.service';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\r\nimport { AppMenuService } from 'src/app/shared/services/app-menu/app-menu.service';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent extends DestroySubscriptionsDirective implements OnInit {\r\n  _menuItems: LayoutMenuItem[] = [];\r\n  _menuOpenned = false;\r\n\r\n  constructor(\r\n    public cdRef: ChangeDetectorRef,\r\n    public router: Router,\r\n    public translate: TranslateService,\r\n    public menuService: AppMenuService,\r\n    public bsLocaleService: BsLocaleService,\r\n    public authSV: AuthService,\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initMenuItems();\r\n    this.initRouterListeners();\r\n    this.initLangListeners();\r\n  }\r\n\r\n\r\n  private async initMenuItems() {\r\n    const data = await this.menuService.getMenuItems();\r\n    const asMenuItems = data.map((apiMenu) => new LayoutMenuItem()\r\n      .setData(apiMenu as any)\r\n      .setData({ label: this.translate.instant(apiMenu.label) }));\r\n    this._menuItems = asMenuItems;\r\n  }\r\n\r\n  private initRouterListeners() {\r\n    const s = this.router.events\r\n      .pipe(filter(e => e instanceof NavigationStart), debounceTime(100))\r\n      .subscribe((data) => {\r\n        this._menuOpenned = false;\r\n      });\r\n    this.subs.push(s);\r\n  }\r\n\r\n  private initLangListeners() {\r\n    this.bsLocaleService.use('es');\r\n    const s = this.translate.onLangChange\r\n      .subscribe((data: LangChangeEvent) => {\r\n        this.bsLocaleService.use(data.lang);\r\n      });\r\n    this.subs.push(s);\r\n  }\r\n}\r\n","<!-- <ax-bs-menu\r\n    [menuItems]=\"_menuItems\"></ax-bs-menu> -->\r\n\r\n\r\n<!-- Top navbar -->\r\n<nav class=\"navbar navbar-expand-xl sticky-top navbar-dark bg-primary fade-in shadow container-fluid py-0 pl-0\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row w-100\">\r\n            <div class=\"col-auto pl-0\">\r\n                <div class=\"d-inline-block navbar-brand mr-auto mr-lg-0 py-0 position-relative\">\r\n                    <img class=\"d-inline-block align-top bg-white h-100 mr-1\" src=\"assets/img/logo/PryBase.png\">\r\n                    <span class=\"pl-2\">{{'APP_NAME' | translate}}</span>\r\n                    <a class=\"stretched-link\" [routerLink]=\"'/dashboard'\"></a>\r\n                </div>\r\n            </div>\r\n            <div class=\"col\">\r\n                <div class=\"pl-lg-2 navbar-collapse offcanvas-collapse\"\r\n                    [ngClass]=\"{'open' : _menuOpenned}\">\r\n                    <ng-container [ngTemplateOutlet]=\"tmplMenu\"></ng-container>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-auto\">\r\n                <div class=\"navbar-langbar\">\r\n                    <ng-container [ngTemplateOutlet]=\"tmplMenuLang\"></ng-container>\r\n\r\n                    <button type=\"button\" class=\"navbar-toggler p-0 border-0\" [ngClass]=\"{'active' : _menuOpenned}\"\r\n                        (click)=\"_menuOpenned = !_menuOpenned\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</nav>\r\n\r\n<main class=\"container-fluid\"\r\n    role=\"main\">\r\n    <router-outlet></router-outlet>\r\n</main>\r\n\r\n<ng-template #tmplMenu>\r\n    <ul class=\"navbar-nav ml-auto\">\r\n        <ng-container *ngFor=\"let i of _menuItems;\"\r\n            [ngTemplateOutlet]=\"tmplMenuItem\" [ngTemplateOutletContext]=\"{ menuItem: i }\"></ng-container>\r\n    </ul>\r\n</ng-template>\r\n<ng-template #tmplMenuItem let-i=\"menuItem\">\r\n    <li class=\"nav-item\"\r\n        [routerLinkActive]=\"i.routerLinkActiveCssClass\">\r\n        <ng-container *ngIf=\"!i.hasChildren\"\r\n            [ngTemplateOutlet]=\"tmplMenuItemContent\"\r\n            [ngTemplateOutletContext]=\"{ menuItem: i}\"></ng-container>\r\n\r\n        <ng-container *ngIf=\"i.hasChildren\"\r\n            [ngTemplateOutlet]=\"tmplMenuItemContentWithChildren\"\r\n            [ngTemplateOutletContext]=\"{ menuItem: i}\"></ng-container>\r\n    </li>\r\n</ng-template>\r\n<ng-template #tmplMenuItemContent let-i=\"menuItem\">\r\n    <a *ngIf=\"!i.hasChildren\" class=\"nav-link\" [routerLink]=\"i.routerLinkCommands\">\r\n        <fa-icon class=\"mr-2\" [icon]=\"[i.iconPreffix, i.iconName]\"></fa-icon>\r\n        {{i.label | translate}}\r\n    </a>\r\n</ng-template>\r\n<ng-template #tmplMenuItemContentWithChildren let-i=\"menuItem\">\r\n    <div class=\"btn-group\"\r\n        dropdown container=\"body\" placement=\"bottom left\">\r\n        <a dropdownToggle class=\"nav-link dropdown-toggle\"\r\n            [routerLinkActive]=\"i.routerLinkActiveCssClass\">\r\n            <fa-icon class=\"mr-2\" [icon]=\"[i.iconPreffix, i.iconName]\"></fa-icon>\r\n            {{i.label | translate}} <span class=\"caret\"></span>\r\n        </a>\r\n        <ul *dropdownMenu\r\n            class=\"dropdown-menu\"\r\n            role=\"menu\">\r\n            <li *ngFor=\"let c of i.children\" role=\"menuitem\">\r\n                <a class=\"dropdown-item\"\r\n                    [routerLink]=\"c.routerLinkCommands\"\r\n                    [routerLinkActive]=\"c.routerLinkActiveCssClass\">\r\n                    <fa-icon class=\"mr-2\" [icon]=\"[c.iconPreffix, c.iconName]\"></fa-icon>\r\n                    {{c.label | translate}}\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #tmplMenuLang>\r\n    <ul class=\"navbar-nav\">\r\n        <ng-container *ngFor=\"let langCode of translate.langs\"\r\n            [ngTemplateOutlet]=\"tmplMenuLangItem\"\r\n            [ngTemplateOutletContext]=\"{ langCode: langCode }\"></ng-container>\r\n    </ul>\r\n</ng-template>\r\n<ng-template #tmplMenuLangItem let-lang=\"langCode\">\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link cursor-pointer\"\r\n            [ngClass]=\"{'active' : translate.currentLang === lang}\"\r\n            (click)=\"translate.use(lang)\">{{(('LANG.' + lang + '_SHORT') | uppercase) | translate}}</a>\r\n    </li>\r\n</ng-template>","/* tslint:disable */\r\nexport enum PolicyMenu {\r\n  PolicyMenuAll = 'PolicyMenuAll',\r\n  PolicyMenuCategory = 'PolicyMenuCategory',\r\n  PolicyMenuPost = 'PolicyMenuPost',\r\n  PolicyMenuZityEntity = 'PolicyMenuZityEntity',\r\n  PolicyMenuAdministration = 'PolicyMenuAdministration'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LayoutMenuItem } from 'ax-toolbox';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { LayoutMenuService } from '../../api/services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppMenuService {\r\n\r\n  //menu item albergará los elementos rescatados de la api\r\n  private _menuItem: LayoutMenuItem[] = [];\r\n  //comprueba el comportamiento de los items y devuelve false toco el rato\r\n  private isReady = new BehaviorSubject<boolean>(false);\r\n\r\n  constructor(\r\n    public layoutSv: LayoutMenuService,\r\n    public translateSv: TranslateService\r\n  ) {\r\n    //entramos en el servicio de la api para que nos devuelva ese item y los mapeamos\r\n    this.layoutSv.apiAdminLayoutmenuGet$Json().subscribe((data) =>{\r\n      const asMenuItems = data.map((apiMenu)=> new LayoutMenuItem()\r\n        .setData(apiMenu as any)\r\n        .setData({label: this.translateSv.instant(apiMenu.label)}));\r\n        //asignamos el asmenuitems a _menuitem\r\n      this._menuItem = asMenuItems;\r\n      //lanzamos un true para que sepa que ha terminado\r\n      this.isReady.next(true);\r\n    })\r\n  }\r\n\r\n  getMenuItems() {\r\n    //hacemos una promesa que se resolverá cuando, haciendo el pipe, primero el isReady sea true\r\n    return new Promise<LayoutMenuItem[]>((resolve) =>{\r\n      this.isReady.pipe(first(isReady => isReady === true))\r\n        .subscribe(() =>{\r\n          resolve(this._menuItem)\r\n        })\r\n    });\r\n  }//end getMenuItems\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MainComponent } from './main/main.component';\r\nimport { AuthGuard } from '../shared/guards/auth/auth.guard';\r\nimport { PolicyMenu } from '../shared/api/models/policy-menu';\r\n\r\nconst routes: Routes = [\r\n  /** Authentication layout */\r\n  {\r\n    path: 'auth',\r\n    loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule),\r\n    canLoad: [], canActivate: [],\r\n  },\r\n  /** Main layout */\r\n  {\r\n    path: '', component: MainComponent,\r\n    loadChildren: () => import('./main/main.module').then(m => m.MainModule),\r\n    canLoad: [AuthGuard], canActivate: [AuthGuard],\r\n    data: { policy: PolicyMenu.PolicyMenuPost }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n  ]\r\n})\r\nexport class PagesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { AuthenticationState } from '../../api/models';\r\nimport { AccountService } from '../../api/services';\r\nimport { AppPolicy } from '../../guards/auth/auth.guard';\r\nimport { TokenService } from '../token/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  /** Wether the account profile has been recovered at least once */\r\n  _isInitialized = false;\r\n  get isAnonymous() { return this.accountProfile == null || this.accountProfile.isAnonymous; }\r\n  private accountProfile: AuthenticationState = null;\r\n\r\n  constructor(\r\n    public accSV: AccountService,\r\n    public tokenSV: TokenService,\r\n  ) { }\r\n\r\n\r\n  resetAccountProfile() {\r\n    this.accountProfile = null;\r\n  }\r\n  refreshAccountProfile() {\r\n    return new Promise<void>((resolve) => {\r\n      this.accSV.apiAccountProfileGet$Json()\r\n        .subscribe((data) => {\r\n          this.accountProfile = data;\r\n          this._isInitialized = true;\r\n          resolve();\r\n        }, () => {\r\n          resolve();\r\n        });\r\n    });\r\n  }\r\n  async isInPolicy(policy: AppPolicy) {\r\n    if (this.accountProfile == null || this.accountProfile.permissions == null) {\r\n      await this.refreshAccountProfile().catch(() => { });\r\n    }\r\n    const isInPolicy = this.isInPolicyInstant(policy);\r\n    return isInPolicy;\r\n  }\r\n  isInPolicyInstant(policy: AppPolicy) {\r\n    return this.accountProfile != null\r\n      && this.accountProfile.permissions != null\r\n      && this.accountProfile.permissions.indexOf(policy) >= 0;\r\n  }\r\n\r\n\r\n  async logout() {\r\n    // // JWT does not need to call to server. Instead, just\r\n    // // delete the JWT token.\r\n    // await this.accSV.apiAccountLogoutPost().pipe(first()).toPromise();\r\n\r\n    this.tokenSV.setStoredToken(null);\r\n    await this.refreshAccountProfile();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivateChild, CanLoad, Route,\r\n  UrlSegment, ActivatedRouteSnapshot,\r\n  RouterStateSnapshot, UrlTree, Router, CanActivate, Data\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { CategoryPolicies, PolicyMenu, PostPolicies, RoleManagementPolicies, ZityEntityPolicies } from '../../api/models';\r\nimport { AccessService } from '../../api/services';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\n\r\n\r\n/** @todo KEEP THIS UPDATED WITH POLICY ENUMS FROM API! */\r\nexport type AppPolicy = PolicyMenu | CategoryPolicies | PostPolicies | RoleManagementPolicies | ZityEntityPolicies;\r\ninterface RouteDataWithPolicy extends Data {\r\n  policy?: AppPolicy;\r\n}\r\ninterface ActivatedRouteSnapshotWithPolicy extends ActivatedRouteSnapshot {\r\n  data: RouteDataWithPolicy;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\r\n  constructor(\r\n    public accessSV: AccessService,\r\n    public router: Router,\r\n    public authSV: AuthService,\r\n  ) { }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshotWithPolicy,\r\n    state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    return this.canActivateChild(route, state, true);\r\n  }\r\n\r\n  canActivateChild(\r\n    next: ActivatedRouteSnapshotWithPolicy,\r\n    state: RouterStateSnapshot,\r\n    fromInner = false): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const policy: AppPolicy = next.data && next.data.policy;\r\n    return this.checkAccess(next.toString(), policy);\r\n  }\r\n  canLoad(\r\n    route: Route,\r\n    segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\r\n    const policy: AppPolicy = route.data && route.data.policy;\r\n    return this.checkAccess(([''].concat(segments.map(s => s.path))).join('/'), policy);\r\n  }\r\n\r\n  private async checkAccess(path: string, policy?: AppPolicy): Promise<boolean> {\r\n    // const pAccess = this.accessSV.apiAccessAccessGet$Json({ p: path }).toPromise().catch(() => false);\r\n    const pPermission = this.checkAccessByPolicy(policy).catch(() => false);\r\n\r\n    const results = await Promise.all([/*pAccess,*/ pPermission]);\r\n    const canAccess = results.every((success) => success && true);\r\n    if (!canAccess) { this.router.navigate(['/auth']); }\r\n    return canAccess;\r\n  }\r\n\r\n  private async checkAccessByPolicy(policy?: AppPolicy): Promise<boolean> {\r\n    if (policy == null) {\r\n      if (!this.authSV._isInitialized) {\r\n        await this.authSV.refreshAccountProfile();\r\n      }\r\n      return true;\r\n    } else {\r\n      return await this.authSV\r\n        .isInPolicy(policy)\r\n        .catch(() => false);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}