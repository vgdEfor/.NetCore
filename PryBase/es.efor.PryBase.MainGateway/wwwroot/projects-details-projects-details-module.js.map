{"version":3,"sources":["./src/app/pages/main/empleados/projects/projects-details/projects-details.module.ts","./src/app/pages/main/empleados/projects/projects-details/projects-details.component.ts","./src/app/pages/main/empleados/projects/projects-details/projects-details.component.html"],"names":[],"mappings":"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","file":"projects-details-projects-details-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProjectsDetailsComponent } from './projects-details.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { ArrayTranslatorModule } from 'src/app/shared/components/array-translator/array-translator.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { DecimalToStringModule } from 'src/app/shared/pipes/decimal-to-string/decimal-to-string.module';\r\nimport { ModalConfirmationMessageModule } from 'src/app/shared/components/modals/modal-confirmation-message/modal-confirmation-message.module';\r\nimport { BsFormSelectModule } from 'ax-toolbox';\r\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\r\nimport { BsFormAutocompleteModule} from  'ax-toolbox';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: ProjectsDetailsComponent,\r\n  },\r\n  { path: ':id', component: ProjectsDetailsComponent, }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [ProjectsDetailsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n    TranslateModule.forChild(),\r\n    ArrayTranslatorModule,\r\n    FontAwesomeModule,\r\n    TooltipModule,\r\n    BsDatepickerModule,\r\n    DecimalToStringModule,\r\n    ModalConfirmationMessageModule,\r\n    BsFormAutocompleteModule,\r\n    BsFormSelectModule,\r\n    CollapseModule\r\n  ],\r\n  providers: [DatePipe]\r\n})\r\nexport class ProjectsDetailsModule { }\r\n","import { AfterViewInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BsAutocompleteGetterFn, BsFormSelectGetterFn, DestroySubscriptions, LabelAndValueExtended } from 'ax-toolbox';\r\nimport { FormUtilities } from 'src/app/shared/utils/form-utils';\r\nimport { Employee, Int32LabelAndValue, PriorityEnum, Project } from 'src/app/shared/api/models';\r\nimport { EmployeesService, ProjectService } from 'src/app/shared/api/services';\r\nimport { DatePipe } from '@angular/common'\r\nimport { ProjectsComponent } from '../projects.component';\r\nimport { ModalConfirmationMessageComponent } from 'src/app/shared/components/modals/modal-confirmation-message/modal-confirmation-message.component';\r\nimport { elementAt, first } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@Component({\r\n  selector: 'app-projects-details',\r\n  templateUrl: './projects-details.component.html',\r\n  styleUrls: ['./projects-details.component.scss'],\r\n\r\n})\r\nexport class ProjectsDetailsComponent extends DestroySubscriptions implements OnInit, OnDestroy {\r\n\r\n  // inicialización vacía\r\n  _item: Project = {\r\n    id: 0,\r\n    name: \"\",\r\n    priorityType: 0,\r\n    responsable: { id: 0, name: \"\", surname: \"a\" },\r\n    responsableId: 0,\r\n    dend: \"\",\r\n    dstart: \"\"\r\n  };\r\n\r\n  _itemErrors: FormItemErrors = {};\r\n  _isLoading = true;\r\n  newId: number;\r\n  dstart: Date = moment().toDate();\r\n  dend: Date = moment().add(1, 'month').toDate();\r\n\r\n  //para saber si es nuevo o no\r\n\r\n  esNuevoItem: boolean = false;\r\n\r\n  //para dropbox\r\n  responsables: Employee[] = [];\r\n  responsableSelected: number;\r\n  listaPriority: Int32LabelAndValue[] = [];\r\n\r\n  //autocomplete\r\n  autocompleteResponsableGetterFn: BsAutocompleteGetterFn<Employee>;\r\n\r\n\r\n  //colapse\r\n  isCollapsed: boolean = false;\r\n  isDocumented: boolean = false;\r\n\r\n  listError: string[];\r\n\r\n  mensaje: string[] = [];\r\n  employeeError: Employee = { id: 0, name: \"\", surname: \"a\" };\r\n\r\n  selectPostionGetterFn: BsFormSelectGetterFn<number>;\r\n\r\n  constructor(\r\n    public cdRef: ChangeDetectorRef,\r\n    public router: Router,\r\n    public aRoute: ActivatedRoute,\r\n    public translate: TranslateService,\r\n    public servicio: ProjectService,\r\n    public employes: EmployeesService,\r\n    public datepipe: DatePipe,\r\n    public projectComponent: ProjectsComponent\r\n  ) {\r\n    super();\r\n\r\n  }\r\n\r\n  @ViewChild('modalDeleteConfirm') modalDetails: ModalConfirmationMessageComponent;\r\n  @ViewChild('modalCreateConfirm') modalCreate: ModalConfirmationMessageComponent;\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.inicializaDropList();\r\n    this.initListeners();\r\n    this.initSelectPosition();\r\n    this.initAutocomplete();\r\n  }\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n  private initSelectPosition() {\r\n    this.selectPostionGetterFn = async () => {\r\n      const fromApi = await this.servicio.apiProjectPrioritylistGet$Json({})\r\n        .pipe(first())\r\n        .toPromise();\r\n      return fromApi.map(dvalue => new LabelAndValueExtended<number>().setData({\r\n        label: dvalue.label,\r\n        value: dvalue.value\r\n      }));\r\n    };\r\n  }\r\n\r\n  inicializaDropList() {\r\n    if (this.responsables.length <= 0) {\r\n      this.employes.apiEmployeesGetlistcompletaPost$Json().subscribe(data => {\r\n        this.responsables = data.items;\r\n      })\r\n    }\r\n    if (this.listaPriority.length <= 0) {\r\n      this.servicio.apiProjectPrioritylistGet$Json().subscribe(data => {\r\n        this.listaPriority = data;\r\n      })\r\n    }\r\n  }\r\n\r\n  onDatepicketValueChange($event: Date, propertyName: string) {\r\n\r\n    if (propertyName == \"dstart\" || propertyName == \"dend\") {\r\n      FormUtilities.onDatepicketValueChange(this, $event, propertyName, this.cdRef);\r\n    } else {\r\n      FormUtilities.onDatepicketValueChange(this._item, $event, propertyName, this.cdRef);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // autocomplete\r\n  private initAutocomplete() {\r\n    this.autocompleteResponsableGetterFn = async (filter) => {\r\n      const area = await this.employes.apiEmployeesGetlistcombolistGet$Json({ filtro: filter })\r\n        .pipe(first()).toPromise();\r\n      return area\r\n        .map((v) => new LabelAndValueExtended().setData({ label: v.name, value: v.id, extraData: v.surname }));\r\n    };\r\n  }\r\n\r\n\r\n  private initListeners(): void {\r\n    this.initARouteListeners();\r\n  }\r\n\r\n\r\n  private async initARouteListeners() {\r\n\r\n    const parentS = this.aRoute.parent.url.subscribe((parentUrl) => {\r\n      if (parentUrl[0] == null || !parentUrl[0].path) {\r\n        this.goBack();\r\n        return;\r\n      }\r\n\r\n      //comprueba por qué ruta ha venido, si es por nueva, se indicará poniendo el boolean a true\r\n      const childS = this.aRoute.paramMap.subscribe((data) => {\r\n        const id = data.get('id');\r\n        if (parentUrl[0].path === 'new') {\r\n          if (id) {\r\n            this.goBack();\r\n            return;\r\n          }\r\n          console.log(\"Entra por new\");\r\n          this.esNuevoItem = true;\r\n          this._isLoading = false;\r\n        } else {\r\n          if (!id) {\r\n            this.goBack();\r\n            return;\r\n          }\r\n\r\n          this._isLoading = true;\r\n\r\n          //bloque de carga del servicio\r\n          //guardamos el id como numero\r\n          this.newId = parseInt(id);\r\n\r\n          //creamos un objeto de tipo Projecto y nos traemos ese projecto si es igual al id         \r\n          this.servicio.apiProjectGetbyidGet$Json({ clave: this.newId }).subscribe(result => {\r\n            this._item = result;\r\n\r\n            if (this._item == null) {\r\n              this.goBack();\r\n              return;\r\n            }\r\n            if (this.newId === result.id) {\r\n              this.dstart = new Date(result.dstart);\r\n              this.dend = new Date(result.dend);\r\n              this.responsableSelected = this._item.responsableId;\r\n              this._isLoading = false;\r\n            }\r\n\r\n          });\r\n\r\n\r\n\r\n        }\r\n      });\r\n      this.subs.push(childS);\r\n    });\r\n\r\n    this.subs.push(parentS);\r\n  }\r\n\r\n  function() {\r\n\r\n    this.isCollapsed = !this.isCollapsed;\r\n\r\n  }\r\n\r\n\r\n\r\n  //EVENTO DE CLIC\r\n  /*async onBtnSave(ev: MouseEvent) {\r\n    this._isLoading = true;\r\n\r\n    //guarda el formato fecha correctamente\r\n    if (this.dstart && this.dstart != undefined) {\r\n      this._item.dstart = this.dstart.getFullYear() + \"-\" + (this.dstart.getMonth() + 1) + \"-\" + this.dstart.getDate();\r\n    } else {\r\n      this._item.dstart = \"\";\r\n    }\r\n\r\n    if (this.dend && this.dend != undefined) {\r\n      this._item.dend = this.dend.getFullYear() + \"-\" + (this.dend.getMonth() + 1) + \"-\" + this.dend.getDate();\r\n    } else {\r\n      this._item.dend = \"\";\r\n    }\r\n\r\n\r\n    //comprueba que el responsable exista, que no sea nulo, que el nombre este introducido, como la fecha\r\n    /*!this.responsables.find(element => element.name == this.employeeError.name)||\r\n    !this.responsables.find(element => element.name == this._item.responsable.name)||\r\n    var isValid = false;\r\n    this.mensaje = [];\r\n    this._item.responsableId = this.responsableSelected;\r\n    if (this._item.responsableId == undefined || this._item.responsableId == null || this._item.responsableId <= 0) {\r\n      this.modalCreate.btnConfirmShown = false;\r\n      this.mensaje.push(\"Empleado no encontrado o no existe\");\r\n      this.modalCreate.open();\r\n      this._isLoading = false;\r\n      return;\r\n    } else {\r\n      this.employes.apiEmployeesGetbyidGet$Json({ id: this.responsableSelected }).subscribe(data => {\r\n        this.employeeError = data;\r\n        if (this.employeeError.id <= 0 ||\r\n          !this.responsables.find(element => element.name == this.employeeError.name) ||\r\n          !this.responsables.find(element => element.name == this._item.responsable.name) ||\r\n          this._item.name.length <= 0 || this._item.dend.length <= 0 || this._item.dstart.length <= 0) {\r\n\r\n          this.modalCreate.btnConfirmShown = false;\r\n          this.mensaje.push(\"Empleado no encontrado o no existe\");\r\n          this.modalCreate.open();\r\n          this._isLoading = false;\r\n          isValid = true;\r\n        }\r\n\r\n\r\n        //comprueba si es nuevo o son los detalles de uno\r\n        if (this.esNuevoItem && !isValid) {\r\n          console.log(\"Entra en nuevo\");\r\n          this.servicio.apiProjectInsertPost$Json({ body: this._item, commit: true }).subscribe(data => {\r\n            this._isLoading = false\r\n            this.contador();\r\n\r\n          }, error => {\r\n            this.crearMensajeError(error.errorData);\r\n            this.modalCreate.btnConfirmShown = false;\r\n            this.modalCreate.open();\r\n            this._isLoading = false;\r\n            return;\r\n          }\r\n          );\r\n\r\n        } else if (!this.esNuevoItem && !isValid) {\r\n          console.log(\"Entra en update\");\r\n          this.servicio.apiProjectUpdatePost$Json({ body: this._item }).subscribe(data => {\r\n            this._isLoading = false\r\n            this.contador();\r\n\r\n          }, error => {\r\n            this.crearMensajeError(error.errorData);\r\n            this.modalCreate.btnConfirmShown = false;\r\n            this.modalCreate.open();\r\n            this._isLoading = false;\r\n            return;\r\n          });\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n  }*/\r\n\r\n\r\n  matrizFunction(){\r\n    //prueba de matriz bidimensional\r\n    var matriz = new Array(10);\r\n    var matriz2 = new Array(10);\r\n    var matrizResult = new Array(10);\r\n    //se crea la matriz añadiendo por cada elemento de la matriz, un nuevo array\r\n    for(var o = 0; o<10; o++){\r\n      matriz[o] = new Array(10);\r\n      matriz2[o] = new Array(10);\r\n      matrizResult[o] = new Array(10);\r\n    }\r\n\r\n    //se rellenan los espacios de la matriz con numeros aleatorios entre el 10 y el 100\r\n    for(var i = 0; i<10; i++){\r\n      for(var j = 0; j<10; j++){\r\n        matriz[i][j] = Math.floor(Math.random()*(10-1))+1;\r\n        matriz2[i][j] = Math.floor(Math.random()*(10-1))+1;\r\n      }\r\n    }\r\n    //se crea un mensaje que mostrará los elementos correctamente\r\n    var valorMasAlto= 0;\r\n    var mensajete = \"\";\r\n    for(var i = 0; i<10; i++){\r\n      mensajete += \"\\n\"\r\n      for(var j = 0; j<10; j++){\r\n        matrizResult[i][j] = this.factorial(matriz[i][j] * matriz2[i][j])\r\n        if(valorMasAlto < matrizResult[i][j]){\r\n          valorMasAlto = matrizResult[i][j];\r\n        }       \r\n        mensajete = mensajete + (\"{\"+(matrizResult[i][j]).toString()+\"}\");\r\n      }\r\n    }\r\n    console.log(mensajete);\r\n    console.log(\"El numero mas alto es \"+ valorMasAlto);\r\n  }\r\n\r\n  factorial (n) {\r\n    var total = 1; \r\n    for (var i=1; i<=n; i++) {\r\n      total = total * i; \r\n    }\r\n    return total; \r\n  }\r\n\r\n  //EVENTO DE CLIC\r\n  async onBtnSave(ev: MouseEvent) {\r\n    this._isLoading = true;\r\n    this.matrizFunction();\r\n    //guarda el formato fecha correctamente\r\n    if (this.dstart && this.dstart != undefined) {\r\n      this._item.dstart = this.dstart.getFullYear() + \"-\" + (this.dstart.getMonth() + 1) + \"-\" + this.dstart.getDate();\r\n    } else {\r\n      this._item.dstart = \"\";\r\n    }\r\n\r\n    if (this.dend && this.dend != undefined) {\r\n      this._item.dend = this.dend.getFullYear() + \"-\" + (this.dend.getMonth() + 1) + \"-\" + this.dend.getDate();\r\n    } else {\r\n      this._item.dend = \"\";\r\n    }\r\n\r\n    \r\n    //comprueba que el responsable exista, que no sea nulo, que el nombre este introducido, como la fecha\r\n    this.mensaje = [];\r\n    this._item.responsableId = this.responsableSelected;\r\n    if (this._item.responsableId == undefined || this._item.responsableId == null || this._item.responsableId <= 0) {\r\n      this.modalCreate.btnConfirmShown = false;\r\n      this.mensaje.push(\"Empleado no encontrado o no existe\");\r\n      this.modalCreate.open();\r\n      this._isLoading = false;\r\n      return;\r\n    }\r\n\r\n    this.employeeError = await this.employes.apiEmployeesGetbyidGet$Json({ id: this.responsableSelected }).toPromise();\r\n\r\n\r\n    if (this.employeeError == null || this.employeeError.id <= 0 ||\r\n      !this.responsables.find(element => element.name == this.employeeError.name) ||\r\n      !this.responsables.find(element => element.name == this._item.responsable.name)) {\r\n\r\n      this.modalCreate.btnConfirmShown = false;\r\n      this.mensaje.push(\"Empleado no encontrado o no existe\");\r\n      this.modalCreate.open();\r\n      this._isLoading = false;\r\n      return\r\n    }\r\n\r\n    //comprueba si es nuevo o son los detalles de uno\r\n    if (this.esNuevoItem) {\r\n      console.log(\"Entra en nuevo\");\r\n      this.servicio.apiProjectInsertPost$Json({ body: this._item, commit: true }).subscribe(data => {\r\n        this._isLoading = false\r\n        this.contador();\r\n\r\n      }, error => {\r\n        this.crearMensajeError(error.errorData);\r\n        this.modalCreate.btnConfirmShown = false;\r\n        this.modalCreate.open();\r\n        this._isLoading = false;\r\n        return;\r\n      }\r\n      );\r\n\r\n    } else {\r\n      console.log(\"Entra en update\");\r\n      this.servicio.apiProjectUpdatePost$Json({ body: this._item }).subscribe(data => {\r\n        this._isLoading = false\r\n        this.contador();\r\n\r\n      }, error => {\r\n        this.crearMensajeError(error.errorData);\r\n        this.modalCreate.btnConfirmShown = false;\r\n        this.modalCreate.open();\r\n        this._isLoading = false;\r\n        return;\r\n      });\r\n    }\r\n\r\n    ;\r\n\r\n  }\r\n\r\n\r\n  // Recibe los errores del servidor y los guarda en un array de strings\r\n  crearMensajeError(errors: any) {\r\n    console.log(errors);\r\n\r\n\r\n    if (errors[\"errors\"]) { // Errores de validación en el servidor. No llega al controller\r\n      Object.keys(errors[\"errors\"]).forEach((key: string) => {\r\n\r\n        if (key == \"dstart\") {\r\n          this.mensaje[this.mensaje.length] = \"La fecha de comienzo es obligatoria\";\r\n        } else if (key == \"dend\") {\r\n          this.mensaje[this.mensaje.length] = \"La fecha de finalización es obligatoria\";\r\n        } else if (key == \"Responsable.Name\" || key == \"responsableId\") {\r\n          this.mensaje[this.mensaje.length] = \"Nombre del responsable no asignado\";\r\n        } else {\r\n          this.mensaje[this.mensaje.length] = errors[\"errors\"][key][0];\r\n        }\r\n      });\r\n    } else { // Errores de validación en el servidor. LLega al controler\r\n\r\n      Object.keys(errors).forEach((keyErrors: string) => {\r\n        this.mensaje[this.mensaje.length] = errors[keyErrors][0];\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  contador() {\r\n    setTimeout(async () => {\r\n      await this.router.navigate(['/empleados/project/details', this._item.id]);\r\n      this._isLoading = false;\r\n      this.goBack();\r\n    }, 3000);\r\n  }\r\n\r\n  onModalDeleteConfirmed() {\r\n    this.servicio.apiProjectDeleteDelete$Json({ data: this._item.id }).subscribe((data) => {\r\n      this._isLoading = false;\r\n      this.goBack();\r\n    });\r\n\r\n    this.modalDetails.close();\r\n  }\r\n\r\n  async onBtnDelete(ev: MouseEvent) {\r\n    this.modalDetails.open();\r\n  }\r\n\r\n  private goBack() {\r\n    this.router.navigate(['/empleados/project']);\r\n  }\r\n}\r\n\r\nexport type FormItemErrors = { [fieldId: string]: (string | string[]) };\r\n","<h2 *ngIf=\"!esNuevoItem\" class=\"section-title my-4\">{{'PAGE.PROJECT.DETAILS.TITLE' | translate}}</h2>\r\n<h2 *ngIf=\"esNuevoItem\" class=\"section-title my-4\">{{'PAGE.PROJECT.NEW.TITLE' | translate}}</h2>\r\n\r\n<form (ngSubmit)=\"onBtnSave($event)\" autocomplete=\"off\">\r\n  <div class=\"form-row\">\r\n    <div class=\"col form-group\">\r\n      <label #lblName for=\"Name\" [tooltip]=\"'PAGE.PROJECT.DETAILS.TOOLTIP.NAME' | translate \" class=\"text-nowrap\">\r\n        <fa-icon [icon]=\"['fas', 'user-circle']\"></fa-icon>\r\n        {{'PAGE.PROJECT.DETAILS.LABEL.NAME' | translate}}\r\n      </label>\r\n      <input type=\"text\" autocomplete=\"off\" class=\"form-control form-control-sm\" [id]=\"lblName.getAttribute('for')\"\r\n        [name]=\"lblName.getAttribute('for')\" [(ngModel)]=\"_item.name\" [disabled]=\"_isLoading\" [required]=\"true\">\r\n      <app-array-translator class=\"invalid-feedback d-block\" [labels]=\"_itemErrors[lblName.getAttribute('for')]\">\r\n      </app-array-translator>\r\n    </div>\r\n\r\n    <!-- aquí el dropdown\r\n    <div class=\"col form-group\">\r\n      <label #lblResponsableId for=\"ResponsableId\" [tooltip]=\"'PAGE.PROJECT.DETAILS.TOOLTIP.RESPONSABLEID' | translate \"\r\n             class=\"text-nowrap\">\r\n        <fa-icon [icon]=\"['fas', 'user-circle']\"></fa-icon>\r\n        {{'PAGE.PROJECT.DETAILS.LABEL.RESPONSABLEID' | translate}}\r\n      </label>\r\n      \r\n      <input type=\"text\" autocomplete=\"off\" class=\"form-control form-control-sm\"\r\n             [id]=\"lblResponsableId.getAttribute('for')\" [name]=\"lblResponsableId.getAttribute('for')\"\r\n             [(ngModel)]=\"_item.responsableId\"\r\n             [disabled]=\"_isLoading\"\r\n             [required]=\"true\">\r\n             \r\n      <app-array-translator class=\"invalid-feedback d-block\"\r\n                            [labels]=\"_itemErrors[lblResponsableId.getAttribute('for')]\"></app-array-translator>\r\n    </div>\r\n    ---->\r\n\r\n    <!-- este es el antiguo select\r\n    <div class=\"col form-group\">\r\n      <label #lblResponsable for=\"Responsable\" [tooltip]=\"'PAGE.PROJECT.DETAILS.LABEL.RESPONSABLEID' | translate \"\r\n                   class=\"text-nowrap\">\r\n              <fa-icon [icon]=\"['fas', 'user-circle']\"></fa-icon>\r\n              {{'PAGE.PROJECT.DETAILS.LABEL.RESPONSABLEID' | translate}}\r\n            </label>\r\n            <select class=\"form-control form-control-sm\"\r\n                [id]=\"lblResponsable.getAttribute('for')\" [name]=\"lblResponsable.getAttribute('for')\"\r\n                [disabled]=\"_isLoading\"\r\n                [(ngModel)]=\"responsableSelected\"\r\n                [required]=\"true\">   \r\n              <option  *ngFor=\"let r of responsables\" value={{r.id}}>{{r.name}}</option>\r\n            </select>\r\n    </div>\r\n     -->\r\n\r\n    <!--  //Autocomplete -->\r\n    <div class=\"col form-group\">\r\n      <ax-bs-form-autocomplete [id]=\"'controlautocomplete'\"\r\n        [label]=\"'PAGE.PROJECT.DETAILS.LABEL.RESPONSABLEID' | translate\"\r\n        [tooltipContent]=\"'PAGE.PROJECT.DETAILS.TOOLTIP.RESPONSABLEID' | translate \"\r\n        [getterFn]=\"autocompleteResponsableGetterFn\" [(selected)]=\"responsableSelected\"\r\n        [(filter)]=\"_item.responsable.name\" [debounceTimeMs]=\"200\">\r\n\r\n        <!--<option  *ngFor=\"let r of autocompleteResponsableGetterFn\" [value]=\"r.value\">\r\n      {{r.label}}\r\n    </option>-->\r\n      </ax-bs-form-autocomplete>\r\n    </div>\r\n\r\n    <!--MOSTRAR EL PRIORITYTYPE-->\r\n    <div class=\"col form-group\">\r\n      <label #lblPriority for=\"Priority\" [tooltip]=\"'PAGE.PROJECT.DETAILS.TOOLTIP.PRIORITY' | translate \"\r\n        class=\"text-nowrap\">\r\n        <fa-icon [icon]=\"['fas', 'user-circle']\"></fa-icon>\r\n        {{'PAGE.PROJECT.DETAILS.LABEL.PRIORITY' | translate}}\r\n      </label>\r\n      <select class=\"form-control form-control-sm\" [id]=\"lblPriority.getAttribute('for')\"\r\n        [name]=\"lblPriority.getAttribute('for')\" [disabled]=\"_isLoading\" [(ngModel)]=\"_item.priorityType\"\r\n        [required]=\"true\">\r\n        <option *ngFor=\"let r of listaPriority \" [value]=\"r.value\">{{r.label}}</option>\r\n      </select>\r\n      <app-array-translator class=\"invalid-feedback d-block\" [labels]=\"_itemErrors[lblPriority.getAttribute('for')]\">\r\n      </app-array-translator>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </div>\r\n  <div class=\"form-row pb-5\">\r\n    <div class=\"col form-group\">\r\n      <label #lblDatetimeStart [attr.for]=\"'Post.DatetimeStart'\"\r\n        [tooltip]=\"'PAGE.PROJECT.DETAILS.TOOLTIP.DATETIMESTART' | translate \">\r\n        <fa-icon [icon]=\"['fas', 'calendar-day']\"></fa-icon>\r\n        {{'PAGE.PROJECT.DETAILS.LABEL.DATETIMESTART' | translate}}\r\n      </label>\r\n      <div class=\"input-group input-group-sm\">\r\n        <input type=\"text\" [id]=\"lblDatetimeStart.getAttribute('for')\" [name]=\"lblDatetimeStart.getAttribute('for')\"\r\n          placeholder=\"Datepicker\" class=\"form-control\" bsDatepicker [bsValue]=\"dstart\"\r\n          (bsValueChange)=\"onDatepicketValueChange($event, 'dstart')\">\r\n        <div class=\"input-group-append\">\r\n          <button class=\"btn btn-outline-danger\" type=\"button\" [disabled]=\"dstart == null\"\r\n            (click)=\"onDatepicketValueChange(null, 'dstart')\">\r\n            <fa-icon [icon]=\"['fas', 'trash']\"></fa-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <app-array-translator class=\"invalid-feedback d-block\"\r\n        [labels]=\"_itemErrors[lblDatetimeStart.getAttribute('for')]\">\r\n      </app-array-translator>\r\n    </div>\r\n\r\n    <div class=\"col form-group\">\r\n      <label #lblDatetimeEnd [attr.for]=\"'Post.DatetimeEnd'\"\r\n        [tooltip]=\"'PAGE.PROJECT.DETAILS.TOOLTIP.DATETIMEEND' | translate \">\r\n        <fa-icon [icon]=\"['fas', 'calendar-day']\"></fa-icon>\r\n        {{'PAGE.PROJECT.DETAILS.LABEL.DATETIMEEND' | translate}}\r\n      </label>\r\n      <div class=\"input-group input-group-sm\">\r\n        <input type=\"text\" [id]=\"lblDatetimeEnd.getAttribute('for')\" [name]=\"lblDatetimeEnd.getAttribute('for')\"\r\n          placeholder=\"Datepicker\" class=\"form-control\" bsDatepicker [bsValue]=\"dend\"\r\n          (bsValueChange)=\"onDatepicketValueChange($event, 'dend')\">\r\n        <div class=\"input-group-append\">\r\n          <button class=\"btn btn-outline-danger\" type=\"button\" [disabled]=\"dend == null\"\r\n            (click)=\"onDatepicketValueChange(null, 'dend')\">\r\n            <fa-icon [icon]=\"['fas', 'trash']\"></fa-icon>\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n      <app-array-translator class=\"invalid-feedback d-block\" [labels]=\"_itemErrors[lblDatetimeEnd.getAttribute('for')]\">\r\n      </app-array-translator>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n  <div>\r\n\r\n\r\n\r\n  </div>\r\n\r\n  <div class=\"row footer-formbuttons position-fixed w-100\">\r\n    <div class=\"col text-right\" *ngIf=\"_item\">\r\n      <!-- <div class=\"btn-group\"> -->\r\n      <button type=\"button\" *ngIf=\"_item.id\" class=\"btn btn-secondary mr-1\" [routerLink]=\"['/empleados/project']\">\r\n        <fa-icon [icon]=\"['fas', 'chevron-left']\"></fa-icon>\r\n        {{'GENERIC.BTN.GOTO.LIST' | translate}}\r\n      </button>\r\n      <button type=\"submit\" class=\"btn btn-primary mx-1\" [disabled]=\"_isLoading\">\r\n        <ng-container *ngIf=\"_isLoading\">\r\n          <fa-icon [icon]=\"['fas', 'sync']\" [spin]=\"true\"></fa-icon>\r\n          {{'GENERIC.LABEL.LOADING' | translate}}\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!_isLoading\">\r\n          <fa-icon [icon]=\"['fas', 'save']\"></fa-icon>\r\n          {{'GENERIC.BTN.SAVE' | translate}}\r\n        </ng-container>\r\n      </button>\r\n      <button type=\"button\" *ngIf=\"_item.id\" (click)=\"onBtnDelete($event)\" class=\"btn btn-danger ml-1\">\r\n        <fa-icon [icon]=\"['fas', 'trash']\"></fa-icon>\r\n        {{'GENERIC.BTN.DELETE' | translate}}\r\n      </button>\r\n      <!-- </div> -->\r\n    </div>\r\n  </div>\r\n\r\n\r\n</form>\r\n\r\n\r\n<div>\r\n  <button class=\"btn-primary\" type=\"button\" (click)=\"function()\">Mostrar variación de priority</button>\r\n</div>\r\n<br>\r\n<div #myname *ngIf=\"isCollapsed\">\r\n  <ax-bs-form-select [id]=\"'ddl-priority'\" [label]=\"'PriorityVariation'\" [tooltipContent]=\"'Priority variation'\"\r\n    [getterFn]=\"selectPostionGetterFn\" [(selected)]=\"_item.priorityType\" [debounceTimeMs]=\"200\">\r\n  </ax-bs-form-select>\r\n  <br>\r\n  <p>\r\n    Como variación para mostrar los elementos del enum priority, se ha procedido a crear una función<br>\r\n    que llamará al servicio trayendo desde la api una lista con los enum que serán mapeados para <br>\r\n    pasarselos al componente con el formato que pide. Con el getterFn llamarémos a la varaible que contendrá<br>\r\n    esa lista ya optimizada\r\n  </p>\r\n  <pre>\r\n    &lt;div&gt;\r\n    &lt;button type&#61;\"button\" (click)&#61;\"function()\"&gt;Mostrar variación de priority&lt;/button&gt;\r\n    &lt;/div&gt;\r\n    \r\n    &lt;div #myname *ngIf&#61;\"isCollapsed\"&gt;\r\n      &lt;ax-bs-form-select \r\n        [id]&#61;\"'ddl-priority'\"\r\n        [label]&#61;\"'PriorityVariation'\"\r\n        [tooltipContent]&#61;\"'Priority variation'\"\r\n        [getterFn]&#61;\"selectPostionGetterFn\"\r\n        [(selected)]&#61;\"_item.priorityType\"\r\n        [debounceTimeMs]&#61;\"200\" &gt;\r\n      &lt;/ax-bs-form-select &gt;\r\n    &lt;/div &gt;\r\n  </pre>\r\n  <br>\r\n  <p>\r\n    Para rellenar la lista, tendremos que crear la variable selectPostionGetterFn: BsFormSelectGetterFn &lt;number\r\n    &gt;;<br>\r\n    A continuación, la implementaremos en una función en donde vamos a llamar a ese servicio que nos devolverá <br>\r\n    una lista la cual mapearemos para poder utilizarla. Estableceremos los valores de la label y el value.\r\n  </p>\r\n  <pre>\r\n    this.selectPostionGetterFn &#61; async ()&#61;&gt;&#123;\r\n      const fromApi &#61; await this.servicio.apiProjectPrioritylistGet$Json(&#123;&#125;)\r\n      .pipe(first())\r\n      .toPromise();\r\n      return fromApi.map(dvalue &#61;&gt; new LabelAndValueExtended&lt;number&gt;().setData( &#123;\r\n         label: dvalue.label,\r\n         value: dvalue.value\r\n        &#125;));\r\n      &#125;;\r\n  </pre>\r\n  <p>\r\n    Además se ha añadido un botón que hará que se muestre tanto la variación de priority como el texto explicativo. <br>\r\n    Este botón tiene un evento clic que lo que hará será acceder a una función cambiando el valor de un boolean. Este\r\n    <br>\r\n    boolean servirá para mostrar u ocultar toda esta composición.\r\n  </p>\r\n  <pre>\r\n      &lt;div #myname *ngIf&#61;\"isCollapsed\"&gt;&lt;/div&gt;\r\n    </pre>\r\n  <p>\r\n    Como se puede observar, habrá un div en donde se incorporará toda esta información y habrá una sentencia if que<br>\r\n    permitirá visualizar todo este contenido si se cumple.\r\n  </p>\r\n</div>\r\n\r\n\r\n<br>\r\n<div>\r\n  <button type=\"button\" class=\"btn-primary\" (click)=\"isDocumented = !isDocumented\">Mostrar Documentación</button>\r\n</div>\r\n<div class=\"col form-group\" *ngIf=\"isDocumented\">\r\n  <br>\r\n  <h2>DOCUMENTACIÓN</h2>\r\n  <p>\r\n\r\n    <br><br>\r\n    Lo primero que se ha hecho es mirar por donde está entrando, si por nuevo o por detalles de un project.\r\n    Con este codigo se comprueba para ver el path y saber por donde va. Si entra como nuevo item, el valor\r\n    del boolean this.esNuevoItem será modificado y guardado.\r\n  </p>\r\n\r\n  <pre>\r\n    <code>\r\n    const childS = this.aRoute.paramMap.subscribe((data) =>&#123; \r\n      const id = data.get('id');\r\n      if (parentUrl[0].path === 'new') &#123;\r\n        if (id) &#123;\r\n          this.goBack();\r\n          return;\r\n          &#125;\r\n        console.log(\"Entra por new\");\r\n        this.esNuevoItem = true;\r\n        this._isLoading = false;\r\n        &#125; else &#123;\r\n        if (!id) &#123;\r\n          this.goBack();\r\n          return;\r\n          &#125;\r\n      </code></pre>\r\n\r\n  <p>\r\n    Con este codigo se llamará al servicio para que busque si existe el project a través del id, de esta forma,\r\n    tendremos el objeto project en todo momento guardado para posteriormente modificarlo o borrarlo.</p>\r\n  <pre>\r\n    this.servicio.apiProjectGetbyidGet$Json(&#123;  clave: this.newId &#125;).subscribe(result => &#123;\r\n      this._item = result;\r\n\r\n      if (this._item == null) &#123;\r\n        this.goBack();\r\n        return;\r\n        &#125;\r\n      if(this.newId === result.id)&#123;\r\n        this.dstart = new Date(result.dstart);\r\n        this.dend = new Date(result.dend);\r\n        this.responsableSelected = this._item.responsableId;\r\n        this._isLoading = false;\r\n        &#125;\r\n                 \r\n        &#125;);\r\n    \r\n     </pre>\r\n  <p>Cabe destacar que todos los elementos guardados en el ts que queramos mostrar y posteriormente<br>\r\n    tratar, tendrán que ir definidos en el HTML con el [(ngModel)].\r\n    Las variables que queramos modificar de nuestro item, las modificaremos a través de un input.<br>\r\n    Por ejemplo si quiero mostrar los valores<br>\r\n    dentro de mi elemento recogido por el id, tendré que hacerlo con la siguiente sintaxis.<br></p>\r\n  <pre>\r\n\r\n        &lt;input type&#61;\"text\" autocomplete&#61;\"off\" class=&#61;form-control form-control-sm\"\r\n        [id]&#61;\"lblName.getAttribute('for')\" [name]&#61;\"lblName.getAttribute('for')\"\r\n        [(ngModel)]&#61;\"_item.name\"\r\n        [disabled]&#61;\"_isLoading\"\r\n        [required]&#61;\"true\"&gt;\r\n\r\n      </pre>\r\n  <br>\r\n  <p>\r\n    Ahora, este metodo recogerá las listas de empleados y de priority disponibles en el onInit para pasarselas\r\n    a los DropDownList.</p>\r\n  <pre>\r\n    inicializaDropList()&#123;\r\n    &nbsp;&nbsp;if(this.responsables.length&lt;=0)&#123;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;this.employes.apiEmployeesGetlistcompletaPost$Json().subscribe(data =>&#123;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.responsables = data.items;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(data.items);\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&#125;\r\n    &nbsp;&nbsp;)&#125;\r\n        \r\n    if(this.listaPriority.length&lt;= 0)&#123;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;this.servicio.apiProjectPrioritylistGet$Json().subscribe(data =>&#123;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.listaPriority = data;\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&#125;)\r\n    &nbsp;&nbsp; &#125;\r\n    &#125;\r\n\r\n    </pre>\r\n  <br>\r\n  <p>\r\n    En el ngModel se almacenará, en este caso, el tipo de Prioridad seleccionada, pero tambien sirve para los campos\r\n    dentro del formulario como se indicó anteriormente.<br>\r\n    Esto hará que se muestre ese atributo de _item y que, a su vez, si se modifica, que se pueda recuperar. La label\r\n    será lo que se muestre y el value será <br>\r\n    el valor que nos guardaremos.<br>\r\n  </p>\r\n  <pre>\r\n    &lt;select class=\"form-control form-control-sm\"\r\n    [id]&#61;\"lblPriority.getAttribute('for')\" [name]&#61;\"lblPriority.getAttribute('for')\"\r\n    [disabled]&#61;\"_isLoading\"\r\n    [(ngModel)]&#61;\"_item.priorityType\"\r\n    [required]&#61;\"true\"&gt;   \r\n    &lt;option  *ngFor&#61;\"let r of listaPriority | keyvalue\" [value]&#61;\"r.value.value\"&gt;&#91;&#91;r.value.label&#93;&#93;&lt;/option&gt;\r\n    &lt;/select&gt;\r\n    </pre>\r\n  <p>\r\n    Una vez se hayan completado todos los campos, se procederá a guardar el resultado, ya sea al generar un nuevo<br>\r\n    project o bien modificar uno. Para ello en el siguiente codigo convertirá el formato fecha a uno legible, se <br>\r\n    comprobará que los campos no estén vacíos o sean errones mostrando con un modal una ventana que muestre que el\r\n    cliente no ha introducido<br>\r\n    bien los datos,se comprobará si es un nuevo project o se está modificando uno<br>\r\n    y posteriormente se harán los cambios llamando al metodo correspondiente en el servicio. A su vez habrá una pequeña\r\n    espera de 3 segundos y volverá al listado.<br>\r\n    <br>\r\n    Primero se crea una lista de strings,<br>\r\n    luego se va a recorrer los object dentro de error<br>\r\n    de cada object se va a sacar el string del mensaje y se añadirá a la lista<br>\r\n    desde el html se mostrará con un for la lista de errores.<br>\r\n    Mas abajo se explicará el metodo de validación y los errores.\r\n\r\n  </p>\r\n  <pre>\r\n\r\n      async onBtnSave(ev: MouseEvent) &#123;\r\n        this._isLoading = true;\r\n    \r\n        //guarda el formato fecha correctamente\r\n        if (this.dstart && this.dstart != undefined) &#123;\r\n          this._item.dstart = this.dstart.getFullYear() + \"-\" + (this.dstart.getMonth() + 1) + \"-\" + this.dstart.getDate();\r\n          &#125; else &#123;\r\n          this._item.dstart = \"\";\r\n          &#125;\r\n    \r\n        if (this.dend && this.dend != undefined) &#123;\r\n          this._item.dend = this.dend.getFullYear() + \"-\" + (this.dend.getMonth() + 1) + \"-\" + this.dend.getDate();\r\n          &#125; else &#123;\r\n          this._item.dend = \"\";\r\n          &#125;\r\n    \r\n    \r\n        //comprueba que el responsable exista, que no sea nulo, que el nombre este introducido, como la fecha\r\n        var isValid = false;\r\n        this.mensaje = [];\r\n        this._item.responsableId = this.responsableSelected;\r\n        if (this._item.responsableId == undefined || this._item.responsableId == null || this._item.responsableId &lt;= 0) &#123;\r\n          this.modalCreate.btnConfirmShown = false;\r\n          this.mensaje.push(\"Empleado no encontrado o no existe\");\r\n          this.modalCreate.open();\r\n          this._isLoading = false;\r\n          return;\r\n          &#125; else &#123;\r\n          this.employes.apiEmployeesGetbyidGet$Json(&#123; id: this.responsableSelected }).subscribe(data =&gt; &#123;\r\n            this.employeeError = data;\r\n            if (this.employeeError.id &lt;= 0 ||\r\n              !this.responsables.find(element => element.name == this.employeeError.name) ||\r\n              !this.responsables.find(element => element.name == this._item.responsable.name) ||\r\n              this._item.name.length &lt;= 0 || this._item.dend.length &lt;= 0 || this._item.dstart.length &lt;= 0) &#123;\r\n    \r\n              this.modalCreate.btnConfirmShown = false;\r\n              this.mensaje.push(\"Empleado no encontrado o no existe\");\r\n              this.modalCreate.open();\r\n              this._isLoading = false;\r\n              isValid = true;\r\n              &#125;\r\n    \r\n    \r\n            //comprueba si es nuevo o son los detalles de uno\r\n            if (this.esNuevoItem && !isValid) &#123;\r\n              console.log(\"Entra en nuevo\");\r\n              this.servicio.apiProjectInsertPost$Json(&#123; body: this._item, commit: true &#125;).subscribe(data =&gt; &#123;\r\n                this._isLoading = false\r\n                this.contador();\r\n    \r\n                &#125;, error =&gt; &#123;\r\n                this.crearMensajeError(error.errorData);\r\n                this.modalCreate.btnConfirmShown = false;\r\n                this.modalCreate.open();\r\n                this._isLoading = false;\r\n                return;\r\n                &#125;\r\n              );\r\n    \r\n              &#125; else if (!this.esNuevoItem && !isValid) &#123;\r\n              console.log(\"Entra en update\");\r\n              this.servicio.apiProjectUpdatePost$Json(&#123; body: this._item &#125;).subscribe(data =&gt; &#123;\r\n                this._isLoading = false\r\n                this.contador();\r\n    \r\n                &#125;, error =&gt; &#123;\r\n                this.crearMensajeError(error.errorData);\r\n                this.modalCreate.btnConfirmShown = false;\r\n                this.modalCreate.open();\r\n                this._isLoading = false;\r\n                return;\r\n                &#125;);\r\n              &#125;\r\n    \r\n            &#125;);\r\n          &#125;\r\n        &#125;\r\n\r\n    </pre><br>\r\n  <p>\r\n    Como se puede observar, cuando se comprueba si se ha introducido todos los datos bien, dicho modal estará declarado\r\n    en <br>\r\n    el html como se mostrará a continuación. Se le asignará un nombre y con la acción onClickConfirn llamará al boton\r\n    save <br>\r\n    en donde se aplicará todo el codio anteriormente mostrado.\r\n  </p>\r\n  <pre>\r\n\r\n        &lt;app-modal-confirmation-message \r\n          #modalCreateConfirm\r\n          (onClickConfirm)&#61;\"onBtnSave($event)\"&gt;\r\n          &lt;h3&gt;Error&lt;/h3&gt;\r\n          &lt;p&gt; &#42;ngFor &#61;&#34;let m of mensaje&#34;&gt;&#123;&#123;m&#125; &#125;&lt;/p&gt;\r\n          &lt;/app-modal-confirmation-message&gt;\r\n\r\n      </pre>\r\n  <br>\r\n  <p>\r\n    Por ultimo, si se quiere eliminar un project, se ejcutará el siguiente codigo, que directamente llamará <br>\r\n    al metodo de borrado que le proporciona el servicio y le pasará el id del item a borrar. Al borrarse se volverá<br>\r\n    a la ventana anterior.<br></p>\r\n  <pre>\r\n      onModalDeleteConfirmed()&#123;\r\n        this.servicio.apiProjectDeleteDelete$Json(&#123;data:this._item.id&#125;).subscribe((data) => &#123;\r\n          this._isLoading = false;\r\n          this.goBack();\r\n          &#125;);\r\n    \r\n        this.modalDetails.close();\r\n        &#125;\r\n\r\n      </pre>\r\n  <br>\r\n  <h3>Validación y errores</h3><br>\r\n  <p>\r\n    A la hora de hacer una comprobación de un campo, esa validación se puede hacer tanto desde el cliente como desde el\r\n    servidor.<br>\r\n    En este ejemplo se verá como hacerlo desde el servidor. Cuando llamemos al servicio de creacion o de update, tbn\r\n    incluiremos el <br>\r\n    apartado de errores de la siguiente forma.\r\n  </p>\r\n  <pre>\r\n\r\n        &#125;, error => &#123;\r\n          this.crearMensajeError(error.errorData);    \r\n          this.modalCreate.btnConfirmShown = false;\r\n          this.modalCreate.open();\r\n          this._isLoading = false;\r\n        return;\r\n        &#125;\r\n      );\r\n\r\n      </pre>\r\n  <p>\r\n    Cuando salta un error de validación, se llamará a ese metodo mas luego creará un modal de confirmación que mostrará\r\n    el tipo de error <br>\r\n    producido. Este metodo recibe los errores del servidor y los guarda en un array de strings que posteriormente serán\r\n    mostrados con el<br>\r\n    modal de confirmación.\r\n  </p>\r\n  <pre>\r\n\r\n        crearMensajeError(errors : any) &#123;\r\n          console.log(errors);\r\n          alert(\"a1\");\r\n          this.mensaje = [\"Error\"];\r\n          \r\n          if(errors[\"errors\"])&#123; \r\n            Object.keys(errors[\"errors\"]).forEach((key:string)=&gt;&#123;\r\n              alert(\"a2\");\r\n              if(key==\"dstart\")&#123;\r\n                this.mensaje[this.mensaje.length] = \"La fecha de comienzo es obligatoria\"; \r\n                &#125; else if(key == \"dend\")&#123;\r\n                this.mensaje[this.mensaje.length] = \"La fecha de comienzo es obligatoria\";\r\n                &#125; else if (key==\"Responsable.Name\" || key == \"responsableId\" )&#123;\r\n                this.mensaje[this.mensaje.length] = \"Nombre del responsable no asignado\";\r\n                &#125; else &#123;\r\n                this.mensaje[this.mensaje.length] = errors[\"errors\"][key][0];\r\n                &#125;\r\n              &#125;); \r\n            &#125; else &#123; \r\n            alert(\"a3\");  \r\n            Object.keys(errors).forEach((keyErrors:string)=&gt;&#123;\r\n                this.mensaje[this.mensaje.length] = errors[keyErrors][0];\r\n                &#125;);\r\n            &#125;\r\n        \r\n          &#125;\r\n\r\n      </pre>\r\n  <p>\r\n    Con este metodo se le pasa el tipo de error y se filtra si es un error de validación desde el servidor sin pasar por\r\n    el controller<br>\r\n    o si es un error que si pasa por el controlador y se comprueba ahí. Como los errores almacenan object, se va a\r\n    recoger la key perteneciente<br>\r\n    a cada nombre que se le ha asignado a ese error.<br>\r\n    En ambos casos, se almacenará el mensaje de error en el array para luego pasarselo al modal para que este recorra\r\n    esta lista<br>\r\n    mostrando los errores.\r\n  </p>\r\n\r\n\r\n</div>\r\n\r\n<pre>\r\n\r\n\r\n\r\n</pre>\r\n<app-modal-confirmation-message #modalDeleteConfirm (onClickConfirm)=\"onModalDeleteConfirmed()\">\r\n  <h3>Eliminar</h3>\r\n  <p>¿Desea eliminar este proyecto?</p>\r\n</app-modal-confirmation-message>\r\n\r\n<app-modal-confirmation-message #modalCreateConfirm (onClickConfirm)=\"onBtnSave($event)\">\r\n  <h3>Error</h3>\r\n  <p *ngFor=\"let m of mensaje\">{{m}}</p>\r\n</app-modal-confirmation-message>"],"sourceRoot":"webpack:///"}