id: es.efor.Auth
language: CSharp
name:
  Default: es.efor.Auth
qualifiedName:
  Default: es.efor.Auth
type: Assembly
modifiers: {}
items:
- id: es.efor.Auth.Attributes
  commentId: N:es.efor.Auth.Attributes
  language: CSharp
  name:
    CSharp: es.efor.Auth.Attributes
    VB: es.efor.Auth.Attributes
  nameWithType:
    CSharp: es.efor.Auth.Attributes
    VB: es.efor.Auth.Attributes
  qualifiedName:
    CSharp: es.efor.Auth.Attributes
    VB: es.efor.Auth.Attributes
  type: Namespace
  assemblies:
  - es.efor.Auth
  modifiers: {}
  items:
  - id: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute
    commentId: T:es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute
    language: CSharp
    name:
      CSharp: PolicyRequiredClaimsAttribute
      VB: PolicyRequiredClaimsAttribute
    nameWithType:
      CSharp: PolicyRequiredClaimsAttribute
      VB: PolicyRequiredClaimsAttribute
    qualifiedName:
      CSharp: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute
      VB: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Attributes
    source:
      remote:
        path: es.efor.Auth/Attributes/PolicyRequiredClaimsAttribute.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: PolicyRequiredClaimsAttribute
      path: ../es.efor.Auth/Attributes/PolicyRequiredClaimsAttribute.cs
      startLine: 14
    summary: "\nDefines a Claim by its <xref href=\"System.Security.Claims.Claim.Type\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.Claims.Claim.Value\" data-throw-if-not-resolved=\"false\"></xref>, which\nwill be used to defined a Policy enumeration&apos;s Claim requirement.\nThis means that in order to fulfill the policy, a User MUST have the claim\ndefined on (at least one of) the Policy&apos;s <xref href=\"es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [AttributeUsage(AttributeTargets.Field, AllowMultiple = true, Inherited = true)]

          public class PolicyRequiredClaimsAttribute : Attribute
        VB: >-
          <AttributeUsage(AttributeTargets.Field, AllowMultiple:=True, Inherited:=True)>

          Public Class PolicyRequiredClaimsAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    - System.Attribute
    inheritedMembers:
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetHashCode
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.Match(System.Object)
    - System.Attribute.TypeId
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    attributes:
    - type: System.AttributeUsageAttribute
      ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
      arguments:
      - type: System.AttributeTargets
        value: 256
      namedArguments:
      - name: AllowMultiple
        type: System.Boolean
        value: true
      - name: Inherited
        type: System.Boolean
        value: true
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimType
      commentId: P:es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimType
      language: CSharp
      name:
        CSharp: ClaimType
        VB: ClaimType
      nameWithType:
        CSharp: PolicyRequiredClaimsAttribute.ClaimType
        VB: PolicyRequiredClaimsAttribute.ClaimType
      qualifiedName:
        CSharp: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimType
        VB: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimType
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Attributes
      source:
        remote:
          path: es.efor.Auth/Attributes/PolicyRequiredClaimsAttribute.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: ClaimType
        path: ../es.efor.Auth/Attributes/PolicyRequiredClaimsAttribute.cs
        startLine: 17
      syntax:
        content:
          CSharp: public string ClaimType { get; }
          VB: Public ReadOnly Property ClaimType As String
        parameters: []
        return:
          type: System.String
      overload: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimValue
      commentId: P:es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimValue
      language: CSharp
      name:
        CSharp: ClaimValue
        VB: ClaimValue
      nameWithType:
        CSharp: PolicyRequiredClaimsAttribute.ClaimValue
        VB: PolicyRequiredClaimsAttribute.ClaimValue
      qualifiedName:
        CSharp: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimValue
        VB: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimValue
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Attributes
      source:
        remote:
          path: es.efor.Auth/Attributes/PolicyRequiredClaimsAttribute.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: ClaimValue
        path: ../es.efor.Auth/Attributes/PolicyRequiredClaimsAttribute.cs
        startLine: 18
      syntax:
        content:
          CSharp: public string ClaimValue { get; }
          VB: Public ReadOnly Property ClaimValue As String
        parameters: []
        return:
          type: System.String
      overload: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimValue*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.#ctor(System.String,System.String)
      commentId: M:es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: PolicyRequiredClaimsAttribute(String, String)
        VB: PolicyRequiredClaimsAttribute(String, String)
      nameWithType:
        CSharp: PolicyRequiredClaimsAttribute.PolicyRequiredClaimsAttribute(String, String)
        VB: PolicyRequiredClaimsAttribute.PolicyRequiredClaimsAttribute(String, String)
      qualifiedName:
        CSharp: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.PolicyRequiredClaimsAttribute(System.String, System.String)
        VB: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.PolicyRequiredClaimsAttribute(System.String, System.String)
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Attributes
      source:
        remote:
          path: es.efor.Auth/Attributes/PolicyRequiredClaimsAttribute.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Attributes/PolicyRequiredClaimsAttribute.cs
        startLine: 20
      syntax:
        content:
          CSharp: public PolicyRequiredClaimsAttribute(string claimType, string claimValue)
          VB: Public Sub New(claimType As String, claimValue As String)
        parameters:
        - id: claimType
          type: System.String
        - id: claimValue
          type: System.String
      overload: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      System.Security.Claims.Claim.Type: 
      System.Security.Claims.Claim.Value: 
      es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute: 
- id: es.efor.Auth.Constants.Claims
  commentId: N:es.efor.Auth.Constants.Claims
  language: CSharp
  name:
    CSharp: es.efor.Auth.Constants.Claims
    VB: es.efor.Auth.Constants.Claims
  nameWithType:
    CSharp: es.efor.Auth.Constants.Claims
    VB: es.efor.Auth.Constants.Claims
  qualifiedName:
    CSharp: es.efor.Auth.Constants.Claims
    VB: es.efor.Auth.Constants.Claims
  type: Namespace
  assemblies:
  - es.efor.Auth
  modifiers: {}
  items:
  - id: es.efor.Auth.Constants.Claims.AppClaimTypes
    commentId: T:es.efor.Auth.Constants.Claims.AppClaimTypes
    language: CSharp
    name:
      CSharp: AppClaimTypes
      VB: AppClaimTypes
    nameWithType:
      CSharp: AppClaimTypes
      VB: AppClaimTypes
    qualifiedName:
      CSharp: es.efor.Auth.Constants.Claims.AppClaimTypes
      VB: es.efor.Auth.Constants.Claims.AppClaimTypes
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Constants.Claims
    source:
      remote:
        path: es.efor.Auth/Constants/Claims/AppClaimTypes.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: AppClaimTypes
      path: ../es.efor.Auth/Constants/Claims/AppClaimTypes.cs
      startLine: 6
    syntax:
      content:
        CSharp: public static class AppClaimTypes
        VB: Public Module AppClaimTypes
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: es.efor.Auth.Constants.Claims.AppClaimTypes.CLAIM_TYPE_UPDATE_DATETIME
      commentId: F:es.efor.Auth.Constants.Claims.AppClaimTypes.CLAIM_TYPE_UPDATE_DATETIME
      language: CSharp
      name:
        CSharp: CLAIM_TYPE_UPDATE_DATETIME
        VB: CLAIM_TYPE_UPDATE_DATETIME
      nameWithType:
        CSharp: AppClaimTypes.CLAIM_TYPE_UPDATE_DATETIME
        VB: AppClaimTypes.CLAIM_TYPE_UPDATE_DATETIME
      qualifiedName:
        CSharp: es.efor.Auth.Constants.Claims.AppClaimTypes.CLAIM_TYPE_UPDATE_DATETIME
        VB: es.efor.Auth.Constants.Claims.AppClaimTypes.CLAIM_TYPE_UPDATE_DATETIME
      type: Field
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Constants.Claims
      source:
        remote:
          path: es.efor.Auth/Constants/Claims/AppClaimTypes.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: CLAIM_TYPE_UPDATE_DATETIME
        path: ../es.efor.Auth/Constants/Claims/AppClaimTypes.cs
        startLine: 8
      syntax:
        content:
          CSharp: public const string CLAIM_TYPE_UPDATE_DATETIME = "app-update-claim-datetime"
          VB: Public Const CLAIM_TYPE_UPDATE_DATETIME As String = "app-update-claim-datetime"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: es.efor.Auth.Constants.Claims.AppClaimTypes.CLAIM_TYPE_MENU_SECTION_PREFIX_DEFAULT
      commentId: F:es.efor.Auth.Constants.Claims.AppClaimTypes.CLAIM_TYPE_MENU_SECTION_PREFIX_DEFAULT
      language: CSharp
      name:
        CSharp: CLAIM_TYPE_MENU_SECTION_PREFIX_DEFAULT
        VB: CLAIM_TYPE_MENU_SECTION_PREFIX_DEFAULT
      nameWithType:
        CSharp: AppClaimTypes.CLAIM_TYPE_MENU_SECTION_PREFIX_DEFAULT
        VB: AppClaimTypes.CLAIM_TYPE_MENU_SECTION_PREFIX_DEFAULT
      qualifiedName:
        CSharp: es.efor.Auth.Constants.Claims.AppClaimTypes.CLAIM_TYPE_MENU_SECTION_PREFIX_DEFAULT
        VB: es.efor.Auth.Constants.Claims.AppClaimTypes.CLAIM_TYPE_MENU_SECTION_PREFIX_DEFAULT
      type: Field
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Constants.Claims
      source:
        remote:
          path: es.efor.Auth/Constants/Claims/AppClaimTypes.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: CLAIM_TYPE_MENU_SECTION_PREFIX_DEFAULT
        path: ../es.efor.Auth/Constants/Claims/AppClaimTypes.cs
        startLine: 9
      syntax:
        content:
          CSharp: public const string CLAIM_TYPE_MENU_SECTION_PREFIX_DEFAULT = "app-claim-section-"
          VB: Public Const CLAIM_TYPE_MENU_SECTION_PREFIX_DEFAULT As String = "app-claim-section-"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: es.efor.Auth.Controllers
  commentId: N:es.efor.Auth.Controllers
  language: CSharp
  name:
    CSharp: es.efor.Auth.Controllers
    VB: es.efor.Auth.Controllers
  nameWithType:
    CSharp: es.efor.Auth.Controllers
    VB: es.efor.Auth.Controllers
  qualifiedName:
    CSharp: es.efor.Auth.Controllers
    VB: es.efor.Auth.Controllers
  type: Namespace
  assemblies:
  - es.efor.Auth
  modifiers: {}
  items:
  - id: es.efor.Auth.Controllers.AccessController
    commentId: T:es.efor.Auth.Controllers.AccessController
    language: CSharp
    name:
      CSharp: AccessController
      VB: AccessController
    nameWithType:
      CSharp: AccessController
      VB: AccessController
    qualifiedName:
      CSharp: es.efor.Auth.Controllers.AccessController
      VB: es.efor.Auth.Controllers.AccessController
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Controllers
    source:
      remote:
        path: es.efor.Auth/Controllers/AccessController.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: AccessController
      path: ../es.efor.Auth/Controllers/AccessController.cs
      startLine: 12
    syntax:
      content:
        CSharp: 'public abstract class AccessController : BaseEforController'
        VB: >-
          Public MustInherit Class AccessController

              Inherits BaseEforController
    inheritance:
    - System.Object
    - Microsoft.AspNetCore.Mvc.ControllerBase
    - es.efor.Utilities.Web.Controllers.BaseEforController
    inheritedMembers:
    - es.efor.Utilities.Web.Controllers.BaseEforController.PREDETERMINED_HEADER_LANGCODE
    - es.efor.Utilities.Web.Controllers.BaseEforController.UserLang
    - es.efor.Utilities.Web.Controllers.BaseEforController.UserId
    - es.efor.Utilities.Web.Controllers.BaseEforController._authService
    - es.efor.Utilities.Web.Controllers.BaseEforController._mapper
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequestToast(System.String,System.String[])
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.String,System.String[])
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.String})
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}})
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Boolean,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
    - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
    - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
    - Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
    - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
    - Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
    - Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Ok
    - Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
    - Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel})
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
    - Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
    - Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
    - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)
    - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
    - Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
    - Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
    - Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
    - Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
    - Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
    - Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory
    - Microsoft.AspNetCore.Mvc.ControllerBase.Request
    - Microsoft.AspNetCore.Mvc.ControllerBase.Response
    - Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
    - Microsoft.AspNetCore.Mvc.ControllerBase.Url
    - Microsoft.AspNetCore.Mvc.ControllerBase.User
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: es.efor.Auth.Controllers.AccessController.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationService,AutoMapper.IMapper)
      commentId: M:es.efor.Auth.Controllers.AccessController.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationService,AutoMapper.IMapper)
      language: CSharp
      name:
        CSharp: AccessController(IAuthorizationService, IMapper)
        VB: AccessController(IAuthorizationService, IMapper)
      nameWithType:
        CSharp: AccessController.AccessController(IAuthorizationService, IMapper)
        VB: AccessController.AccessController(IAuthorizationService, IMapper)
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccessController.AccessController(Microsoft.AspNetCore.Authorization.IAuthorizationService, AutoMapper.IMapper)
        VB: es.efor.Auth.Controllers.AccessController.AccessController(Microsoft.AspNetCore.Authorization.IAuthorizationService, AutoMapper.IMapper)
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccessController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Controllers/AccessController.cs
        startLine: 14
      syntax:
        content:
          CSharp: public AccessController(IAuthorizationService authService, IMapper mapper)
          VB: Public Sub New(authService As IAuthorizationService, mapper As IMapper)
        parameters:
        - id: authService
          type: Microsoft.AspNetCore.Authorization.IAuthorizationService
        - id: mapper
          type: AutoMapper.IMapper
      overload: es.efor.Auth.Controllers.AccessController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Controllers.AccessController.CheckAccess(System.String)
      commentId: M:es.efor.Auth.Controllers.AccessController.CheckAccess(System.String)
      language: CSharp
      name:
        CSharp: CheckAccess(String)
        VB: CheckAccess(String)
      nameWithType:
        CSharp: AccessController.CheckAccess(String)
        VB: AccessController.CheckAccess(String)
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccessController.CheckAccess(System.String)
        VB: es.efor.Auth.Controllers.AccessController.CheckAccess(System.String)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccessController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: CheckAccess
        path: ../es.efor.Auth/Controllers/AccessController.cs
        startLine: 18
      syntax:
        content:
          CSharp: >-
            [HttpGet("access")]

            [ProducesResponseType(typeof(bool), 200)]

            public virtual Task<IActionResult> CheckAccess([FromQuery(Name = "p")] string path)
          VB: >-
            <HttpGet("access")>

            <ProducesResponseType(GetType(Boolean), 200)>

            Public Overridable Function CheckAccess(path As String) As Task(Of IActionResult)
        parameters:
        - id: path
          type: System.String
          attributes:
          - type: Microsoft.AspNetCore.Mvc.FromQueryAttribute
            ctor: Microsoft.AspNetCore.Mvc.FromQueryAttribute.#ctor
            arguments: []
            namedArguments:
            - name: Name
              type: System.String
              value: p
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
      overload: es.efor.Auth.Controllers.AccessController.CheckAccess*
      attributes:
      - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
        ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: access
      - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32)
        arguments:
        - type: System.Type
          value: System.Boolean
        - type: System.Int32
          value: 200
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: es.efor.Auth.Controllers.AccountIdentityController`2
    commentId: T:es.efor.Auth.Controllers.AccountIdentityController`2
    language: CSharp
    name:
      CSharp: AccountIdentityController<TUser, TUSerKey>
      VB: AccountIdentityController(Of TUser, TUSerKey)
    nameWithType:
      CSharp: AccountIdentityController<TUser, TUSerKey>
      VB: AccountIdentityController(Of TUser, TUSerKey)
    qualifiedName:
      CSharp: es.efor.Auth.Controllers.AccountIdentityController<TUser, TUSerKey>
      VB: es.efor.Auth.Controllers.AccountIdentityController(Of TUser, TUSerKey)
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Controllers
    source:
      remote:
        path: es.efor.Auth/Controllers/AccountIdentityController.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: AccountIdentityController
      path: ../es.efor.Auth/Controllers/AccountIdentityController.cs
      startLine: 18
    syntax:
      content:
        CSharp: 'public abstract class AccountIdentityController<TUser, TUSerKey> : AccountSimpleController where TUser : User<TUSerKey> where TUSerKey : IEquatable<TUSerKey>'
        VB: >-
          Public MustInherit Class AccountIdentityController(Of TUser As User(Of TUSerKey), TUSerKey As IEquatable(Of TUSerKey))

              Inherits AccountSimpleController
      typeParameters:
      - id: TUser
      - id: TUSerKey
    inheritance:
    - System.Object
    - Microsoft.AspNetCore.Mvc.ControllerBase
    - es.efor.Utilities.Web.Controllers.BaseEforController
    - es.efor.Auth.Controllers.AccountSimpleController
    inheritedMembers:
    - es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile
    - es.efor.Auth.Controllers.AccountSimpleController.GetPolicies
    - es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
    - es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
    - es.efor.Utilities.Web.Controllers.BaseEforController.PREDETERMINED_HEADER_LANGCODE
    - es.efor.Utilities.Web.Controllers.BaseEforController.UserLang
    - es.efor.Utilities.Web.Controllers.BaseEforController.UserId
    - es.efor.Utilities.Web.Controllers.BaseEforController._authService
    - es.efor.Utilities.Web.Controllers.BaseEforController._mapper
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequestToast(System.String,System.String[])
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.String,System.String[])
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.String})
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}})
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Boolean,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
    - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
    - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
    - Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
    - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
    - Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
    - Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Ok
    - Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
    - Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel})
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
    - Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
    - Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
    - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)
    - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
    - Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
    - Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
    - Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
    - Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
    - Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
    - Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory
    - Microsoft.AspNetCore.Mvc.ControllerBase.Request
    - Microsoft.AspNetCore.Mvc.ControllerBase.Response
    - Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
    - Microsoft.AspNetCore.Mvc.ControllerBase.Url
    - Microsoft.AspNetCore.Mvc.ControllerBase.User
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: es.efor.Auth.Controllers.AccountIdentityController`2._signInManager
      commentId: F:es.efor.Auth.Controllers.AccountIdentityController`2._signInManager
      language: CSharp
      name:
        CSharp: _signInManager
        VB: _signInManager
      nameWithType:
        CSharp: AccountIdentityController<TUser, TUSerKey>._signInManager
        VB: AccountIdentityController(Of TUser, TUSerKey)._signInManager
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountIdentityController<TUser, TUSerKey>._signInManager
        VB: es.efor.Auth.Controllers.AccountIdentityController(Of TUser, TUSerKey)._signInManager
      type: Field
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountIdentityController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: _signInManager
        path: ../es.efor.Auth/Controllers/AccountIdentityController.cs
        startLine: 22
      syntax:
        content:
          CSharp: protected readonly SignInManager<TUser> _signInManager
          VB: Protected ReadOnly _signInManager As SignInManager(Of TUser)
        return:
          type: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
      modifiers:
        CSharp:
        - protected
        - readonly
        VB:
        - Protected
        - ReadOnly
    - id: es.efor.Auth.Controllers.AccountIdentityController`2._userManager
      commentId: F:es.efor.Auth.Controllers.AccountIdentityController`2._userManager
      language: CSharp
      name:
        CSharp: _userManager
        VB: _userManager
      nameWithType:
        CSharp: AccountIdentityController<TUser, TUSerKey>._userManager
        VB: AccountIdentityController(Of TUser, TUSerKey)._userManager
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountIdentityController<TUser, TUSerKey>._userManager
        VB: es.efor.Auth.Controllers.AccountIdentityController(Of TUser, TUSerKey)._userManager
      type: Field
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountIdentityController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: _userManager
        path: ../es.efor.Auth/Controllers/AccountIdentityController.cs
        startLine: 23
      syntax:
        content:
          CSharp: protected readonly UserManager<TUser> _userManager
          VB: Protected ReadOnly _userManager As UserManager(Of TUser)
        return:
          type: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
      modifiers:
        CSharp:
        - protected
        - readonly
        VB:
        - Protected
        - ReadOnly
    - id: es.efor.Auth.Controllers.AccountIdentityController`2.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationService,AutoMapper.IMapper,Microsoft.AspNetCore.Identity.SignInManager{`0},Microsoft.AspNetCore.Identity.UserManager{`0})
      commentId: M:es.efor.Auth.Controllers.AccountIdentityController`2.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationService,AutoMapper.IMapper,Microsoft.AspNetCore.Identity.SignInManager{`0},Microsoft.AspNetCore.Identity.UserManager{`0})
      language: CSharp
      name:
        CSharp: AccountIdentityController(IAuthorizationService, IMapper, SignInManager<TUser>, UserManager<TUser>)
        VB: AccountIdentityController(IAuthorizationService, IMapper, SignInManager(Of TUser), UserManager(Of TUser))
      nameWithType:
        CSharp: AccountIdentityController<TUser, TUSerKey>.AccountIdentityController(IAuthorizationService, IMapper, SignInManager<TUser>, UserManager<TUser>)
        VB: AccountIdentityController(Of TUser, TUSerKey).AccountIdentityController(IAuthorizationService, IMapper, SignInManager(Of TUser), UserManager(Of TUser))
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountIdentityController<TUser, TUSerKey>.AccountIdentityController(Microsoft.AspNetCore.Authorization.IAuthorizationService, AutoMapper.IMapper, Microsoft.AspNetCore.Identity.SignInManager<TUser>, Microsoft.AspNetCore.Identity.UserManager<TUser>)
        VB: es.efor.Auth.Controllers.AccountIdentityController(Of TUser, TUSerKey).AccountIdentityController(Microsoft.AspNetCore.Authorization.IAuthorizationService, AutoMapper.IMapper, Microsoft.AspNetCore.Identity.SignInManager(Of TUser), Microsoft.AspNetCore.Identity.UserManager(Of TUser))
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountIdentityController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Controllers/AccountIdentityController.cs
        startLine: 25
      syntax:
        content:
          CSharp: public AccountIdentityController(IAuthorizationService authService, IMapper mapper, SignInManager<TUser> signInManager, UserManager<TUser> userManager)
          VB: Public Sub New(authService As IAuthorizationService, mapper As IMapper, signInManager As SignInManager(Of TUser), userManager As UserManager(Of TUser))
        parameters:
        - id: authService
          type: Microsoft.AspNetCore.Authorization.IAuthorizationService
        - id: mapper
          type: AutoMapper.IMapper
        - id: signInManager
          type: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
        - id: userManager
          type: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
      overload: es.efor.Auth.Controllers.AccountIdentityController`2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Controllers.AccountIdentityController`2.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      commentId: M:es.efor.Auth.Controllers.AccountIdentityController`2.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      language: CSharp
      name:
        CSharp: JwtTokenAsync(AccountLoginRequest)
        VB: JwtTokenAsync(AccountLoginRequest)
      nameWithType:
        CSharp: AccountIdentityController<TUser, TUSerKey>.JwtTokenAsync(AccountLoginRequest)
        VB: AccountIdentityController(Of TUser, TUSerKey).JwtTokenAsync(AccountLoginRequest)
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountIdentityController<TUser, TUSerKey>.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
        VB: es.efor.Auth.Controllers.AccountIdentityController(Of TUser, TUSerKey).JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountIdentityController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: JwtTokenAsync
        path: ../es.efor.Auth/Controllers/AccountIdentityController.cs
        startLine: 37
      example: []
      syntax:
        content:
          CSharp: >-
            [HttpPost("token")]

            [ProducesResponseType(typeof(JsonWebTokenResponse), 200)]

            [ProducesErrorResponseType(typeof(BadRequestResult))]

            public override Task<IActionResult> JwtTokenAsync([FromBody] AccountLoginRequest data)
          VB: >-
            <HttpPost("token")>

            <ProducesResponseType(GetType(JsonWebTokenResponse), 200)>

            <ProducesErrorResponseType(GetType(BadRequestResult))>

            Public Overrides Function JwtTokenAsync(data As AccountLoginRequest) As Task(Of IActionResult)
        parameters:
        - id: data
          type: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
          attributes:
          - type: Microsoft.AspNetCore.Mvc.FromBodyAttribute
            ctor: Microsoft.AspNetCore.Mvc.FromBodyAttribute.#ctor
            arguments: []
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
      overload: es.efor.Auth.Controllers.AccountIdentityController`2.JwtTokenAsync*
      overridden: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      attributes:
      - type: Microsoft.AspNetCore.Mvc.HttpPostAttribute
        ctor: Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: token
      - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32)
        arguments:
        - type: System.Type
          value: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
        - type: System.Int32
          value: 200
      - type: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Microsoft.AspNetCore.Mvc.BadRequestResult
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
      references:
        es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest): 
    - id: es.efor.Auth.Controllers.AccountIdentityController`2.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      commentId: M:es.efor.Auth.Controllers.AccountIdentityController`2.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      language: CSharp
      name:
        CSharp: LoginAsync(AccountLoginRequest)
        VB: LoginAsync(AccountLoginRequest)
      nameWithType:
        CSharp: AccountIdentityController<TUser, TUSerKey>.LoginAsync(AccountLoginRequest)
        VB: AccountIdentityController(Of TUser, TUSerKey).LoginAsync(AccountLoginRequest)
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountIdentityController<TUser, TUSerKey>.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
        VB: es.efor.Auth.Controllers.AccountIdentityController(Of TUser, TUSerKey).LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountIdentityController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: LoginAsync
        path: ../es.efor.Auth/Controllers/AccountIdentityController.cs
        startLine: 65
      example: []
      syntax:
        content:
          CSharp: >-
            [HttpPost("login")]

            [ProducesResponseType(204)]

            [ProducesErrorResponseType(typeof(BadRequestResult))]

            public override Task<IActionResult> LoginAsync([FromBody] AccountLoginRequest data)
          VB: >-
            <HttpPost("login")>

            <ProducesResponseType(204)>

            <ProducesErrorResponseType(GetType(BadRequestResult))>

            Public Overrides Function LoginAsync(data As AccountLoginRequest) As Task(Of IActionResult)
        parameters:
        - id: data
          type: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
          attributes:
          - type: Microsoft.AspNetCore.Mvc.FromBodyAttribute
            ctor: Microsoft.AspNetCore.Mvc.FromBodyAttribute.#ctor
            arguments: []
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
      overload: es.efor.Auth.Controllers.AccountIdentityController`2.LoginAsync*
      overridden: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      attributes:
      - type: Microsoft.AspNetCore.Mvc.HttpPostAttribute
        ctor: Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: login
      - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
        arguments:
        - type: System.Int32
          value: 204
      - type: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Microsoft.AspNetCore.Mvc.BadRequestResult
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
      references:
        es.efor.Auth.Controllers.AccountSimpleController.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest): 
    - id: es.efor.Auth.Controllers.AccountIdentityController`2.LogoutAsync
      commentId: M:es.efor.Auth.Controllers.AccountIdentityController`2.LogoutAsync
      language: CSharp
      name:
        CSharp: LogoutAsync()
        VB: LogoutAsync()
      nameWithType:
        CSharp: AccountIdentityController<TUser, TUSerKey>.LogoutAsync()
        VB: AccountIdentityController(Of TUser, TUSerKey).LogoutAsync()
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountIdentityController<TUser, TUSerKey>.LogoutAsync()
        VB: es.efor.Auth.Controllers.AccountIdentityController(Of TUser, TUSerKey).LogoutAsync()
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountIdentityController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: LogoutAsync
        path: ../es.efor.Auth/Controllers/AccountIdentityController.cs
        startLine: 91
      example: []
      syntax:
        content:
          CSharp: >-
            [HttpPost("logout")]

            [ProducesResponseType(204)]

            [ProducesErrorResponseType(typeof(BadRequestResult))]

            public override Task<IActionResult> LogoutAsync()
          VB: >-
            <HttpPost("logout")>

            <ProducesResponseType(204)>

            <ProducesErrorResponseType(GetType(BadRequestResult))>

            Public Overrides Function LogoutAsync As Task(Of IActionResult)
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
      overload: es.efor.Auth.Controllers.AccountIdentityController`2.LogoutAsync*
      overridden: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync
      attributes:
      - type: Microsoft.AspNetCore.Mvc.HttpPostAttribute
        ctor: Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: logout
      - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
        arguments:
        - type: System.Int32
          value: 204
      - type: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Microsoft.AspNetCore.Mvc.BadRequestResult
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
      references:
        es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync: 
  - id: es.efor.Auth.Controllers.AccountSimpleController
    commentId: T:es.efor.Auth.Controllers.AccountSimpleController
    language: CSharp
    name:
      CSharp: AccountSimpleController
      VB: AccountSimpleController
    nameWithType:
      CSharp: AccountSimpleController
      VB: AccountSimpleController
    qualifiedName:
      CSharp: es.efor.Auth.Controllers.AccountSimpleController
      VB: es.efor.Auth.Controllers.AccountSimpleController
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Controllers
    source:
      remote:
        path: es.efor.Auth/Controllers/AccountSimpleController.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: AccountSimpleController
      path: ../es.efor.Auth/Controllers/AccountSimpleController.cs
      startLine: 18
    syntax:
      content:
        CSharp: 'public abstract class AccountSimpleController : BaseEforController'
        VB: >-
          Public MustInherit Class AccountSimpleController

              Inherits BaseEforController
    inheritance:
    - System.Object
    - Microsoft.AspNetCore.Mvc.ControllerBase
    - es.efor.Utilities.Web.Controllers.BaseEforController
    inheritedMembers:
    - es.efor.Utilities.Web.Controllers.BaseEforController.PREDETERMINED_HEADER_LANGCODE
    - es.efor.Utilities.Web.Controllers.BaseEforController.UserLang
    - es.efor.Utilities.Web.Controllers.BaseEforController.UserId
    - es.efor.Utilities.Web.Controllers.BaseEforController._authService
    - es.efor.Utilities.Web.Controllers.BaseEforController._mapper
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequestToast(System.String,System.String[])
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.String,System.String[])
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.String})
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}})
    - es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Boolean,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
    - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
    - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
    - Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
    - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
    - Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
    - Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Ok
    - Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
    - Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
    - Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel})
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[])
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
    - Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
    - Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
    - Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object)
    - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
    - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)
    - Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
    - Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
    - Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
    - Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
    - Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
    - Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
    - Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
    - Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory
    - Microsoft.AspNetCore.Mvc.ControllerBase.Request
    - Microsoft.AspNetCore.Mvc.ControllerBase.Response
    - Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
    - Microsoft.AspNetCore.Mvc.ControllerBase.Url
    - Microsoft.AspNetCore.Mvc.ControllerBase.User
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: es.efor.Auth.Controllers.AccountSimpleController.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationService,AutoMapper.IMapper)
      commentId: M:es.efor.Auth.Controllers.AccountSimpleController.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationService,AutoMapper.IMapper)
      language: CSharp
      name:
        CSharp: AccountSimpleController(IAuthorizationService, IMapper)
        VB: AccountSimpleController(IAuthorizationService, IMapper)
      nameWithType:
        CSharp: AccountSimpleController.AccountSimpleController(IAuthorizationService, IMapper)
        VB: AccountSimpleController.AccountSimpleController(IAuthorizationService, IMapper)
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountSimpleController.AccountSimpleController(Microsoft.AspNetCore.Authorization.IAuthorizationService, AutoMapper.IMapper)
        VB: es.efor.Auth.Controllers.AccountSimpleController.AccountSimpleController(Microsoft.AspNetCore.Authorization.IAuthorizationService, AutoMapper.IMapper)
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountSimpleController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Controllers/AccountSimpleController.cs
        startLine: 20
      syntax:
        content:
          CSharp: public AccountSimpleController(IAuthorizationService authService, IMapper mapper)
          VB: Public Sub New(authService As IAuthorizationService, mapper As IMapper)
        parameters:
        - id: authService
          type: Microsoft.AspNetCore.Authorization.IAuthorizationService
        - id: mapper
          type: AutoMapper.IMapper
      overload: es.efor.Auth.Controllers.AccountSimpleController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      commentId: M:es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      language: CSharp
      name:
        CSharp: JwtTokenAsync(AccountLoginRequest)
        VB: JwtTokenAsync(AccountLoginRequest)
      nameWithType:
        CSharp: AccountSimpleController.JwtTokenAsync(AccountLoginRequest)
        VB: AccountSimpleController.JwtTokenAsync(AccountLoginRequest)
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
        VB: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountSimpleController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: JwtTokenAsync
        path: ../es.efor.Auth/Controllers/AccountSimpleController.cs
        startLine: 28
      syntax:
        content:
          CSharp: >-
            [HttpPost("token")]

            [ProducesResponseType(typeof(JsonWebTokenResponse), 200)]

            [ProducesErrorResponseType(typeof(BadRequestResult))]

            public virtual Task<IActionResult> JwtTokenAsync([FromBody] AccountLoginRequest data)
          VB: >-
            <HttpPost("token")>

            <ProducesResponseType(GetType(JsonWebTokenResponse), 200)>

            <ProducesErrorResponseType(GetType(BadRequestResult))>

            Public Overridable Function JwtTokenAsync(data As AccountLoginRequest) As Task(Of IActionResult)
        parameters:
        - id: data
          type: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
          attributes:
          - type: Microsoft.AspNetCore.Mvc.FromBodyAttribute
            ctor: Microsoft.AspNetCore.Mvc.FromBodyAttribute.#ctor
            arguments: []
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
      overload: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync*
      attributes:
      - type: Microsoft.AspNetCore.Mvc.HttpPostAttribute
        ctor: Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: token
      - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32)
        arguments:
        - type: System.Type
          value: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
        - type: System.Int32
          value: 200
      - type: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Microsoft.AspNetCore.Mvc.BadRequestResult
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      commentId: M:es.efor.Auth.Controllers.AccountSimpleController.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      language: CSharp
      name:
        CSharp: LoginAsync(AccountLoginRequest)
        VB: LoginAsync(AccountLoginRequest)
      nameWithType:
        CSharp: AccountSimpleController.LoginAsync(AccountLoginRequest)
        VB: AccountSimpleController.LoginAsync(AccountLoginRequest)
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
        VB: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountSimpleController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: LoginAsync
        path: ../es.efor.Auth/Controllers/AccountSimpleController.cs
        startLine: 51
      syntax:
        content:
          CSharp: >-
            [HttpPost("login")]

            [ProducesResponseType(204)]

            [ProducesErrorResponseType(typeof(BadRequestResult))]

            public virtual Task<IActionResult> LoginAsync([FromBody] AccountLoginRequest data)
          VB: >-
            <HttpPost("login")>

            <ProducesResponseType(204)>

            <ProducesErrorResponseType(GetType(BadRequestResult))>

            Public Overridable Function LoginAsync(data As AccountLoginRequest) As Task(Of IActionResult)
        parameters:
        - id: data
          type: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
          attributes:
          - type: Microsoft.AspNetCore.Mvc.FromBodyAttribute
            ctor: Microsoft.AspNetCore.Mvc.FromBodyAttribute.#ctor
            arguments: []
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
      overload: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync*
      attributes:
      - type: Microsoft.AspNetCore.Mvc.HttpPostAttribute
        ctor: Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: login
      - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
        arguments:
        - type: System.Int32
          value: 204
      - type: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Microsoft.AspNetCore.Mvc.BadRequestResult
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync
      commentId: M:es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync
      language: CSharp
      name:
        CSharp: LogoutAsync()
        VB: LogoutAsync()
      nameWithType:
        CSharp: AccountSimpleController.LogoutAsync()
        VB: AccountSimpleController.LogoutAsync()
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync()
        VB: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync()
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountSimpleController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: LogoutAsync
        path: ../es.efor.Auth/Controllers/AccountSimpleController.cs
        startLine: 72
      syntax:
        content:
          CSharp: >-
            [HttpPost("logout")]

            [ProducesResponseType(204)]

            [ProducesErrorResponseType(typeof(BadRequestResult))]

            public virtual Task<IActionResult> LogoutAsync()
          VB: >-
            <HttpPost("logout")>

            <ProducesResponseType(204)>

            <ProducesErrorResponseType(GetType(BadRequestResult))>

            Public Overridable Function LogoutAsync As Task(Of IActionResult)
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
      overload: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync*
      attributes:
      - type: Microsoft.AspNetCore.Mvc.HttpPostAttribute
        ctor: Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: logout
      - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
        arguments:
        - type: System.Int32
          value: 204
      - type: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Microsoft.AspNetCore.Mvc.BadRequestResult
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile
      commentId: M:es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile
      language: CSharp
      name:
        CSharp: GetMyProfile()
        VB: GetMyProfile()
      nameWithType:
        CSharp: AccountSimpleController.GetMyProfile()
        VB: AccountSimpleController.GetMyProfile()
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile()
        VB: es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile()
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountSimpleController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: GetMyProfile
        path: ../es.efor.Auth/Controllers/AccountSimpleController.cs
        startLine: 86
      summary: "\nThis method will provide the user&apos;s information\nand the permissions\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [HttpGet("profile")]

            [ProducesResponseType(typeof(AuthenticationState), 200)]

            public virtual Task<IActionResult> GetMyProfile()
          VB: >-
            <HttpGet("profile")>

            <ProducesResponseType(GetType(AuthenticationState), 200)>

            Public Overridable Function GetMyProfile As Task(Of IActionResult)
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
          description: ''
      overload: es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile*
      attributes:
      - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
        ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: profile
      - type: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
        ctor: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32)
        arguments:
        - type: System.Type
          value: es.efor.Utilities.Web.Models.Identity.AuthenticationState
        - type: System.Int32
          value: 200
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Controllers.AccountSimpleController.GetPolicies
      commentId: M:es.efor.Auth.Controllers.AccountSimpleController.GetPolicies
      language: CSharp
      name:
        CSharp: GetPolicies()
        VB: GetPolicies()
      nameWithType:
        CSharp: AccountSimpleController.GetPolicies()
        VB: AccountSimpleController.GetPolicies()
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountSimpleController.GetPolicies()
        VB: es.efor.Auth.Controllers.AccountSimpleController.GetPolicies()
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountSimpleController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: GetPolicies
        path: ../es.efor.Auth/Controllers/AccountSimpleController.cs
        startLine: 118
      summary: "\nOnly used to map Policies to OpenAPI (Swagger). Response will always be 200.\n<p>SETUP STEPS:</p>\n<p>1. Create a method in your class to override this method.</p>\n<p>2. Add [HttpGet(&quot;policies&quot;)]</p>\n<p>3. Assign as many ProducesResponseTypeAttribute as Policy Enums your project has. Follow this template:</p>\n<p>---- [ProducesResponseType(typeof(IEnumerable&lt;es.efor.MyProject.Identity.Policies.Enums.SomeRolePolicies>), 24X)] (where X is the index of the added policy: 0, 1, 2...)</p>\n<p>** REMEMBER TO KEEP THE RESPONSE TYPES UPDATED **</p>\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [HttpGet("policies")]

            public virtual Task<IActionResult> GetPolicies()
          VB: >-
            <HttpGet("policies")>

            Public Overridable Function GetPolicies As Task(Of IActionResult)
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
          description: ''
      overload: es.efor.Auth.Controllers.AccountSimpleController.GetPolicies*
      attributes:
      - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
        ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: policies
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
      commentId: M:es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
      language: CSharp
      name:
        CSharp: GetProjectAuthClaimsByPolicyEnumName()
        VB: GetProjectAuthClaimsByPolicyEnumName()
      nameWithType:
        CSharp: AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName()
        VB: AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName()
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName()
        VB: es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName()
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountSimpleController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: GetProjectAuthClaimsByPolicyEnumName
        path: ../es.efor.Auth/Controllers/AccountSimpleController.cs
        startLine: 161
      summary: "\nThis method must get all the project&apos;s authorization policies and all the claims applied to them.\nThe &quot;key&quot; of the element must be the enum&apos;s name.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [ApiExplorerSettings(IgnoreApi = true)]

            [NonAction]

            protected virtual Task<Dictionary<string, IEnumerable<Claim>>> GetProjectAuthClaimsByPolicyEnumName()
          VB: >-
            <ApiExplorerSettings(IgnoreApi:=True)>

            <NonAction>

            Protected Overridable Function GetProjectAuthClaimsByPolicyEnumName As Task(Of Dictionary(Of String, IEnumerable(Of Claim)))
        return:
          type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}}}
      overload: es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName*
      attributes:
      - type: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute
        ctor: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute.#ctor
        arguments: []
        namedArguments:
        - name: IgnoreApi
          type: System.Boolean
          value: true
      - type: Microsoft.AspNetCore.Mvc.NonActionAttribute
        ctor: Microsoft.AspNetCore.Mvc.NonActionAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      commentId: M:es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      language: CSharp
      name:
        CSharp: CheckUserPassword(AccountLoginRequest)
        VB: CheckUserPassword(AccountLoginRequest)
      nameWithType:
        CSharp: AccountSimpleController.CheckUserPassword(AccountLoginRequest)
        VB: AccountSimpleController.CheckUserPassword(AccountLoginRequest)
      qualifiedName:
        CSharp: es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
        VB: es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Controllers
      source:
        remote:
          path: es.efor.Auth/Controllers/AccountSimpleController.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: CheckUserPassword
        path: ../es.efor.Auth/Controllers/AccountSimpleController.cs
        startLine: 172
      syntax:
        content:
          CSharp: >-
            [ApiExplorerSettings(IgnoreApi = true)]

            [NonAction]

            protected abstract Task<SignInResult> CheckUserPassword(AccountLoginRequest data)
          VB: >-
            <ApiExplorerSettings(IgnoreApi:=True)>

            <NonAction>

            Protected MustOverride Function CheckUserPassword(data As AccountLoginRequest) As Task(Of SignInResult)
        parameters:
        - id: data
          type: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.SignInResult}
      overload: es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword*
      attributes:
      - type: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute
        ctor: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute.#ctor
        arguments: []
        namedArguments:
        - name: IgnoreApi
          type: System.Boolean
          value: true
      - type: Microsoft.AspNetCore.Mvc.NonActionAttribute
        ctor: Microsoft.AspNetCore.Mvc.NonActionAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
- id: es.efor.Auth.Extensions
  commentId: N:es.efor.Auth.Extensions
  language: CSharp
  name:
    CSharp: es.efor.Auth.Extensions
    VB: es.efor.Auth.Extensions
  nameWithType:
    CSharp: es.efor.Auth.Extensions
    VB: es.efor.Auth.Extensions
  qualifiedName:
    CSharp: es.efor.Auth.Extensions
    VB: es.efor.Auth.Extensions
  type: Namespace
  assemblies:
  - es.efor.Auth
  modifiers: {}
  items:
  - id: es.efor.Auth.Extensions.IApplicationBuilderExtensions
    commentId: T:es.efor.Auth.Extensions.IApplicationBuilderExtensions
    language: CSharp
    name:
      CSharp: IApplicationBuilderExtensions
      VB: IApplicationBuilderExtensions
    nameWithType:
      CSharp: IApplicationBuilderExtensions
      VB: IApplicationBuilderExtensions
    qualifiedName:
      CSharp: es.efor.Auth.Extensions.IApplicationBuilderExtensions
      VB: es.efor.Auth.Extensions.IApplicationBuilderExtensions
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Extensions
    source:
      remote:
        path: es.efor.Auth/Extensions/IApplicationBuilderExtensions.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: IApplicationBuilderExtensions
      path: ../es.efor.Auth/Extensions/IApplicationBuilderExtensions.cs
      startLine: 10
    syntax:
      content:
        CSharp: public static class IApplicationBuilderExtensions
        VB: Public Module IApplicationBuilderExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforSimpleAuthentication``2(Microsoft.AspNetCore.Builder.IApplicationBuilder)
      commentId: M:es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforSimpleAuthentication``2(Microsoft.AspNetCore.Builder.IApplicationBuilder)
      language: CSharp
      name:
        CSharp: UseEforSimpleAuthentication<TAccountController, TAccessController>(IApplicationBuilder)
        VB: UseEforSimpleAuthentication(Of TAccountController, TAccessController)(IApplicationBuilder)
      nameWithType:
        CSharp: IApplicationBuilderExtensions.UseEforSimpleAuthentication<TAccountController, TAccessController>(IApplicationBuilder)
        VB: IApplicationBuilderExtensions.UseEforSimpleAuthentication(Of TAccountController, TAccessController)(IApplicationBuilder)
      qualifiedName:
        CSharp: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforSimpleAuthentication<TAccountController, TAccessController>(Microsoft.AspNetCore.Builder.IApplicationBuilder)
        VB: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforSimpleAuthentication(Of TAccountController, TAccessController)(Microsoft.AspNetCore.Builder.IApplicationBuilder)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Extensions
      source:
        remote:
          path: es.efor.Auth/Extensions/IApplicationBuilderExtensions.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UseEforSimpleAuthentication
        path: ../es.efor.Auth/Extensions/IApplicationBuilderExtensions.cs
        startLine: 12
      syntax:
        content:
          CSharp: >-
            public static IApplicationBuilder UseEforSimpleAuthentication<TAccountController, TAccessController>(this IApplicationBuilder app)

                where TAccountController : AccountSimpleController where TAccessController : AccessController
          VB: >-
            <ExtensionAttribute>

            Public Shared Function UseEforSimpleAuthentication(Of TAccountController As AccountSimpleController, TAccessController As AccessController)(app As IApplicationBuilder) As IApplicationBuilder
        parameters:
        - id: app
          type: Microsoft.AspNetCore.Builder.IApplicationBuilder
        typeParameters:
        - id: TAccountController
        - id: TAccessController
        return:
          type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      overload: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforSimpleAuthentication*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforIdentityAuthentication``7(Microsoft.AspNetCore.Builder.IApplicationBuilder)
      commentId: M:es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforIdentityAuthentication``7(Microsoft.AspNetCore.Builder.IApplicationBuilder)
      language: CSharp
      name:
        CSharp: UseEforIdentityAuthentication<TKey, TUser, TRole, TSignInManager, TUserManager, TAccountController, TAccessController>(IApplicationBuilder)
        VB: UseEforIdentityAuthentication(Of TKey, TUser, TRole, TSignInManager, TUserManager, TAccountController, TAccessController)(IApplicationBuilder)
      nameWithType:
        CSharp: IApplicationBuilderExtensions.UseEforIdentityAuthentication<TKey, TUser, TRole, TSignInManager, TUserManager, TAccountController, TAccessController>(IApplicationBuilder)
        VB: IApplicationBuilderExtensions.UseEforIdentityAuthentication(Of TKey, TUser, TRole, TSignInManager, TUserManager, TAccountController, TAccessController)(IApplicationBuilder)
      qualifiedName:
        CSharp: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforIdentityAuthentication<TKey, TUser, TRole, TSignInManager, TUserManager, TAccountController, TAccessController>(Microsoft.AspNetCore.Builder.IApplicationBuilder)
        VB: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforIdentityAuthentication(Of TKey, TUser, TRole, TSignInManager, TUserManager, TAccountController, TAccessController)(Microsoft.AspNetCore.Builder.IApplicationBuilder)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Extensions
      source:
        remote:
          path: es.efor.Auth/Extensions/IApplicationBuilderExtensions.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UseEforIdentityAuthentication
        path: ../es.efor.Auth/Extensions/IApplicationBuilderExtensions.cs
        startLine: 25
      syntax:
        content:
          CSharp: >-
            public static IApplicationBuilder UseEforIdentityAuthentication<TKey, TUser, TRole, TSignInManager, TUserManager, TAccountController, TAccessController>(this IApplicationBuilder app)

                where TKey : IEquatable<TKey> where TUser : User<TKey> where TRole : Role<TKey>, new()

                where TSignInManager : IdentitySignInManager<TKey, TUser> where TUserManager : IdentityUserManager<TKey, TUser> where TAccountController : AccountIdentityController<TUser, TKey> where TAccessController : AccessController
          VB: >-
            <ExtensionAttribute>

            Public Shared Function UseEforIdentityAuthentication(Of TKey As IEquatable(Of TKey), TUser As User(Of TKey), TRole As {Role(Of TKey), New}, TSignInManager As IdentitySignInManager(Of TKey, TUser), TUserManager As IdentityUserManager(Of TKey, TUser), TAccountController As AccountIdentityController(Of TUser, TKey), TAccessController As AccessController)(app As IApplicationBuilder) As IApplicationBuilder
        parameters:
        - id: app
          type: Microsoft.AspNetCore.Builder.IApplicationBuilder
        typeParameters:
        - id: TKey
        - id: TUser
        - id: TRole
        - id: TSignInManager
        - id: TUserManager
        - id: TAccountController
        - id: TAccessController
        return:
          type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      overload: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforIdentityAuthentication*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: es.efor.Auth.Extensions.IServiceCollectionExtensions
    commentId: T:es.efor.Auth.Extensions.IServiceCollectionExtensions
    language: CSharp
    name:
      CSharp: IServiceCollectionExtensions
      VB: IServiceCollectionExtensions
    nameWithType:
      CSharp: IServiceCollectionExtensions
      VB: IServiceCollectionExtensions
    qualifiedName:
      CSharp: es.efor.Auth.Extensions.IServiceCollectionExtensions
      VB: es.efor.Auth.Extensions.IServiceCollectionExtensions
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Extensions
    source:
      remote:
        path: es.efor.Auth/Extensions/IServiceCollectionExtensions.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: IServiceCollectionExtensions
      path: ../es.efor.Auth/Extensions/IServiceCollectionExtensions.cs
      startLine: 21
    syntax:
      content:
        CSharp: public static class IServiceCollectionExtensions
        VB: Public Module IServiceCollectionExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforSimpleAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,es.efor.Auth.Models.Configs.IdentityConfiguration,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}},System.Collections.Generic.IEnumerable{System.String})
      commentId: M:es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforSimpleAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,es.efor.Auth.Models.Configs.IdentityConfiguration,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}},System.Collections.Generic.IEnumerable{System.String})
      language: CSharp
      name:
        CSharp: AddEforSimpleAuthentication(IServiceCollection, IdentityConfiguration, String, String, Dictionary<String, IEnumerable<Claim>>, IEnumerable<String>)
        VB: AddEforSimpleAuthentication(IServiceCollection, IdentityConfiguration, String, String, Dictionary(Of String, IEnumerable(Of Claim)), IEnumerable(Of String))
      nameWithType:
        CSharp: IServiceCollectionExtensions.AddEforSimpleAuthentication(IServiceCollection, IdentityConfiguration, String, String, Dictionary<String, IEnumerable<Claim>>, IEnumerable<String>)
        VB: IServiceCollectionExtensions.AddEforSimpleAuthentication(IServiceCollection, IdentityConfiguration, String, String, Dictionary(Of String, IEnumerable(Of Claim)), IEnumerable(Of String))
      qualifiedName:
        CSharp: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforSimpleAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection, es.efor.Auth.Models.Configs.IdentityConfiguration, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>>, System.Collections.Generic.IEnumerable<System.String>)
        VB: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforSimpleAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection, es.efor.Auth.Models.Configs.IdentityConfiguration, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim)), System.Collections.Generic.IEnumerable(Of System.String))
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Extensions
      source:
        remote:
          path: es.efor.Auth/Extensions/IServiceCollectionExtensions.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: AddEforSimpleAuthentication
        path: ../es.efor.Auth/Extensions/IServiceCollectionExtensions.cs
        startLine: 49
      summary: "\nConfigures Microsoft&apos;s ASPNetCore&apos;s basic services\nto support authentication without any store context\nsuch as databases. This method setup is useful when\nyou want to setup your own stores or don&apos;t require them\nbecasue the authentication is managed by an external\nservice.\n"
      example: []
      syntax:
        content:
          CSharp: public static IServiceCollection AddEforSimpleAuthentication(this IServiceCollection services, IdentityConfiguration configuration, string defaultAuthenticateScheme = null, string defaultChallengeScheme = null, Dictionary<string, IEnumerable<Claim>> policyAndClaims = null, IEnumerable<string> policyMenuSections = null)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function AddEforSimpleAuthentication(services As IServiceCollection, configuration As IdentityConfiguration, defaultAuthenticateScheme As String = Nothing, defaultChallengeScheme As String = Nothing, policyAndClaims As Dictionary(Of String, IEnumerable(Of Claim)) = Nothing, policyMenuSections As IEnumerable(Of String) = Nothing) As IServiceCollection
        parameters:
        - id: services
          type: Microsoft.Extensions.DependencyInjection.IServiceCollection
        - id: configuration
          type: es.efor.Auth.Models.Configs.IdentityConfiguration
          description: "\nThe authentication configuration.\nCannot be left null.\n"
        - id: defaultAuthenticateScheme
          type: System.String
          description: "\nMust be specified **ONLY** when using multiple\nauthentication setups in <code data-dev-comment-type=\"paramref\" class=\"paramref\">configuration</code>.\nMust be null if only one setup is being used (instead,\nthe Schema must be specified in the <code data-dev-comment-type=\"paramref\" class=\"paramref\">configuration</code>\n"
        - id: defaultChallengeScheme
          type: System.String
          description: "\nMust be specified **ONLY** when using multiple\nauthentication setups in <code data-dev-comment-type=\"paramref\" class=\"paramref\">configuration</code>.\nMust be null if only one setup is being used (instead,\nthe Schema must be specified in the <code data-dev-comment-type=\"paramref\" class=\"paramref\">configuration</code>\n"
        - id: policyAndClaims
          type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}}
        - id: policyMenuSections
          type: System.Collections.Generic.IEnumerable{System.String}
        return:
          type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      overload: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforSimpleAuthentication*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforIdentityAuthentication``7(Microsoft.Extensions.DependencyInjection.IServiceCollection,es.efor.Auth.Models.Configs.IdentityConfiguration,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}},System.Collections.Generic.IEnumerable{System.String})
      commentId: M:es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforIdentityAuthentication``7(Microsoft.Extensions.DependencyInjection.IServiceCollection,es.efor.Auth.Models.Configs.IdentityConfiguration,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}},System.Collections.Generic.IEnumerable{System.String})
      language: CSharp
      name:
        CSharp: AddEforIdentityAuthentication<TIdentityContext, TKey, TUser, TRole, TSignInManager, TUserManager, TRoleManager>(IServiceCollection, IdentityConfiguration, String, String, Dictionary<String, IEnumerable<Claim>>, IEnumerable<String>)
        VB: AddEforIdentityAuthentication(Of TIdentityContext, TKey, TUser, TRole, TSignInManager, TUserManager, TRoleManager)(IServiceCollection, IdentityConfiguration, String, String, Dictionary(Of String, IEnumerable(Of Claim)), IEnumerable(Of String))
      nameWithType:
        CSharp: IServiceCollectionExtensions.AddEforIdentityAuthentication<TIdentityContext, TKey, TUser, TRole, TSignInManager, TUserManager, TRoleManager>(IServiceCollection, IdentityConfiguration, String, String, Dictionary<String, IEnumerable<Claim>>, IEnumerable<String>)
        VB: IServiceCollectionExtensions.AddEforIdentityAuthentication(Of TIdentityContext, TKey, TUser, TRole, TSignInManager, TUserManager, TRoleManager)(IServiceCollection, IdentityConfiguration, String, String, Dictionary(Of String, IEnumerable(Of Claim)), IEnumerable(Of String))
      qualifiedName:
        CSharp: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforIdentityAuthentication<TIdentityContext, TKey, TUser, TRole, TSignInManager, TUserManager, TRoleManager>(Microsoft.Extensions.DependencyInjection.IServiceCollection, es.efor.Auth.Models.Configs.IdentityConfiguration, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>>, System.Collections.Generic.IEnumerable<System.String>)
        VB: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforIdentityAuthentication(Of TIdentityContext, TKey, TUser, TRole, TSignInManager, TUserManager, TRoleManager)(Microsoft.Extensions.DependencyInjection.IServiceCollection, es.efor.Auth.Models.Configs.IdentityConfiguration, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim)), System.Collections.Generic.IEnumerable(Of System.String))
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Extensions
      source:
        remote:
          path: es.efor.Auth/Extensions/IServiceCollectionExtensions.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: AddEforIdentityAuthentication
        path: ../es.efor.Auth/Extensions/IServiceCollectionExtensions.cs
        startLine: 89
      summary: "\n** DON&apos;T FORGET TO MODIFY YOUR CONTEXT:**\n<p>1. Set your <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TIdentityContext</code> class as a child of <xref href=\"Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext%603\" data-throw-if-not-resolved=\"false\"></xref></p>\n<p>2. If you&apos;re implementing the context&apos;s OnModelCreating by yourself, you ** MUST ** call super.OnModelCreating.</p>\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public static IServiceCollection AddEforIdentityAuthentication<TIdentityContext, TKey, TUser, TRole, TSignInManager, TUserManager, TRoleManager>(this IServiceCollection services, IdentityConfiguration configuration, string defaultAuthenticateScheme = null, string defaultChallengeScheme = null, Dictionary<string, IEnumerable<Claim>> policyAndClaims = null, IEnumerable<string> policyMenuSections = null)

                where TIdentityContext : IdentityDbContext<TUser, TRole, TKey> where TKey : IEquatable<TKey> where TUser : User<TKey>, new()

                where TRole : Role<TKey>, new()

                where TSignInManager : IdentitySignInManager<TKey, TUser> where TUserManager : IdentityUserManager<TKey, TUser> where TRoleManager : IdentityRoleManager<TKey, TRole>
          VB: >-
            <ExtensionAttribute>

            Public Shared Function AddEforIdentityAuthentication(Of TIdentityContext As IdentityDbContext(Of TUser, TRole, TKey), TKey As IEquatable(Of TKey), TUser As {User(Of TKey), New}, TRole As {Role(Of TKey), New}, TSignInManager As IdentitySignInManager(Of TKey, TUser), TUserManager As IdentityUserManager(Of TKey, TUser), TRoleManager As IdentityRoleManager(Of TKey, TRole))(services As IServiceCollection, configuration As IdentityConfiguration, defaultAuthenticateScheme As String = Nothing, defaultChallengeScheme As String = Nothing, policyAndClaims As Dictionary(Of String, IEnumerable(Of Claim)) = Nothing, policyMenuSections As IEnumerable(Of String) = Nothing) As IServiceCollection
        parameters:
        - id: services
          type: Microsoft.Extensions.DependencyInjection.IServiceCollection
          description: The services to extend
        - id: configuration
          type: es.efor.Auth.Models.Configs.IdentityConfiguration
        - id: defaultAuthenticateScheme
          type: System.String
        - id: defaultChallengeScheme
          type: System.String
        - id: policyAndClaims
          type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}}
        - id: policyMenuSections
          type: System.Collections.Generic.IEnumerable{System.String}
        typeParameters:
        - id: TIdentityContext
          description: The database context to use with Identity. Must inherit <xref href="Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext%603" data-throw-if-not-resolved="false"></xref>
        - id: TKey
          description: The primary key type for Identity entities (<xref href="Microsoft.AspNetCore.Identity.IdentityUser%601.Id" data-throw-if-not-resolved="false"></xref>)
        - id: TUser
          description: The entity that holds the User data. Must inherit from <xref href="Microsoft.AspNetCore.Identity.IdentityUser%601" data-throw-if-not-resolved="false"></xref>
        - id: TRole
          description: The entity that holds the Role data. Must inherit from <xref href="Microsoft.AspNetCore.Identity.IdentityRole%601" data-throw-if-not-resolved="false"></xref>
        - id: TSignInManager
          description: The manager that carries the operations regarding the user SignIn. Must inherit from <xref href="Microsoft.AspNetCore.Identity.SignInManager%601" data-throw-if-not-resolved="false"></xref>
        - id: TUserManager
          description: The manager that carries the operations regarding the user Insert, Update and Delete operations. Must inherit from <xref href="Microsoft.AspNetCore.Identity.UserManager%601" data-throw-if-not-resolved="false"></xref>
        - id: TRoleManager
          description: The manager that carries the operations regarding the role Insert, Update and Delete operations. Must inherit from <xref href="Microsoft.AspNetCore.Identity.RoleManager%601" data-throw-if-not-resolved="false"></xref>
        return:
          type: Microsoft.Extensions.DependencyInjection.IServiceCollection
          description: ''
      overload: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforIdentityAuthentication*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`3: 
        Microsoft.AspNetCore.Identity.IdentityUser`1.Id: 
        Microsoft.AspNetCore.Identity.IdentityUser`1: 
        Microsoft.AspNetCore.Identity.IdentityRole`1: 
        Microsoft.AspNetCore.Identity.SignInManager`1: 
        Microsoft.AspNetCore.Identity.UserManager`1: 
        Microsoft.AspNetCore.Identity.RoleManager`1: 
    - isExtensionMethod: true
      id: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddAppAuthorizationPolicies(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}},System.Collections.Generic.IEnumerable{System.String},System.String)
      commentId: M:es.efor.Auth.Extensions.IServiceCollectionExtensions.AddAppAuthorizationPolicies(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}},System.Collections.Generic.IEnumerable{System.String},System.String)
      language: CSharp
      name:
        CSharp: AddAppAuthorizationPolicies(IServiceCollection, Dictionary<String, IEnumerable<Claim>>, IEnumerable<String>, String)
        VB: AddAppAuthorizationPolicies(IServiceCollection, Dictionary(Of String, IEnumerable(Of Claim)), IEnumerable(Of String), String)
      nameWithType:
        CSharp: IServiceCollectionExtensions.AddAppAuthorizationPolicies(IServiceCollection, Dictionary<String, IEnumerable<Claim>>, IEnumerable<String>, String)
        VB: IServiceCollectionExtensions.AddAppAuthorizationPolicies(IServiceCollection, Dictionary(Of String, IEnumerable(Of Claim)), IEnumerable(Of String), String)
      qualifiedName:
        CSharp: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddAppAuthorizationPolicies(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>>, System.Collections.Generic.IEnumerable<System.String>, System.String)
        VB: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddAppAuthorizationPolicies(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim)), System.Collections.Generic.IEnumerable(Of System.String), System.String)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Extensions
      source:
        remote:
          path: es.efor.Auth/Extensions/IServiceCollectionExtensions.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: AddAppAuthorizationPolicies
        path: ../es.efor.Auth/Extensions/IServiceCollectionExtensions.cs
        startLine: 140
      summary: "\nAdds policies so that the application&apos;s controllers can work with them.\n"
      example: []
      syntax:
        content:
          CSharp: public static IServiceCollection AddAppAuthorizationPolicies(this IServiceCollection services, Dictionary<string, IEnumerable<Claim>> policyAndClaims, IEnumerable<string> policyMenuSections = null, string policyMenuSectionPrefix = "app-claim-section-")
          VB: >-
            <ExtensionAttribute>

            Public Shared Function AddAppAuthorizationPolicies(services As IServiceCollection, policyAndClaims As Dictionary(Of String, IEnumerable(Of Claim)), policyMenuSections As IEnumerable(Of String) = Nothing, policyMenuSectionPrefix As String = "app-claim-section-") As IServiceCollection
        parameters:
        - id: services
          type: Microsoft.Extensions.DependencyInjection.IServiceCollection
        - id: policyAndClaims
          type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}}
          description: "\nSince a policy is a collection of claims, the KEY of the Dictionary must be\nthe name of the Policy (the one you will want to use in the Authorize attribute)\nand the value will be a collection of <xref href=\"System.Security.Claims.Claim\" data-throw-if-not-resolved=\"false\"></xref> the use must fulfill\nin other to validate the Policy.\n"
        - id: policyMenuSections
          type: System.Collections.Generic.IEnumerable{System.String}
          description: "\nIf you are using an UI menu to distribute claims (see Policy docs for more info),\nyou may want to specify what the menu sections are. This will allow you to setup\nAuthorization rules regarding specific sections, but it&apos;s not required.\n"
        - id: policyMenuSectionPrefix
          type: System.String
        return:
          type: Microsoft.Extensions.DependencyInjection.IServiceCollection
          description: ''
      overload: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddAppAuthorizationPolicies*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        System.Security.Claims.Claim: 
- id: es.efor.Auth.Managers
  commentId: N:es.efor.Auth.Managers
  language: CSharp
  name:
    CSharp: es.efor.Auth.Managers
    VB: es.efor.Auth.Managers
  nameWithType:
    CSharp: es.efor.Auth.Managers
    VB: es.efor.Auth.Managers
  qualifiedName:
    CSharp: es.efor.Auth.Managers
    VB: es.efor.Auth.Managers
  type: Namespace
  assemblies:
  - es.efor.Auth
  modifiers: {}
  items:
  - id: es.efor.Auth.Managers.IdentityRoleManager`2
    commentId: T:es.efor.Auth.Managers.IdentityRoleManager`2
    language: CSharp
    name:
      CSharp: IdentityRoleManager<TRoleId, TRole>
      VB: IdentityRoleManager(Of TRoleId, TRole)
    nameWithType:
      CSharp: IdentityRoleManager<TRoleId, TRole>
      VB: IdentityRoleManager(Of TRoleId, TRole)
    qualifiedName:
      CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>
      VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole)
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Managers
    source:
      remote:
        path: es.efor.Auth/Managers/IdentityRoleManager.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: IdentityRoleManager
      path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
      startLine: 13
    syntax:
      content:
        CSharp: 'public class IdentityRoleManager<TRoleId, TRole> : RoleManager<TRole>, IDisposable where TRoleId : IEquatable<TRoleId> where TRole : Role<TRoleId>, new()'
        VB: >-
          Public Class IdentityRoleManager(Of TRoleId As IEquatable(Of TRoleId), TRole As {Role(Of TRoleId), New})

              Inherits RoleManager(Of TRole)

              Implements IDisposable
      typeParameters:
      - id: TRoleId
      - id: TRole
    inheritance:
    - System.Object
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    implements:
    - System.IDisposable
    inheritedMembers:
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.RoleExistsAsync(System.String)
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.NormalizeKey(System.String)
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.FindByIdAsync(System.String)
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.GetRoleNameAsync({TRole})
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.GetRoleIdAsync({TRole})
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.FindByNameAsync(System.String)
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.GetClaimsAsync({TRole})
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.Dispose
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.Dispose(System.Boolean)
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.ValidateRoleAsync({TRole})
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.UpdateRoleAsync({TRole})
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.ThrowIfDisposed
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.CancellationToken
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.Store
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.Logger
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.RoleValidators
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.ErrorDescriber
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.KeyNormalizer
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.Roles
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.SupportsQueryableRoles
    - Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.SupportsRoleClaims
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Managers.IdentityRoleManager`2.#ctor(Microsoft.AspNetCore.Identity.IRoleStore{`1},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IRoleValidator{`1}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.RoleManager{`1}})
      commentId: M:es.efor.Auth.Managers.IdentityRoleManager`2.#ctor(Microsoft.AspNetCore.Identity.IRoleStore{`1},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IRoleValidator{`1}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.RoleManager{`1}})
      language: CSharp
      name:
        CSharp: IdentityRoleManager(IRoleStore<TRole>, IEnumerable<IRoleValidator<TRole>>, ILookupNormalizer, IdentityErrorDescriber, ILogger<RoleManager<TRole>>)
        VB: IdentityRoleManager(IRoleStore(Of TRole), IEnumerable(Of IRoleValidator(Of TRole)), ILookupNormalizer, IdentityErrorDescriber, ILogger(Of RoleManager(Of TRole)))
      nameWithType:
        CSharp: IdentityRoleManager<TRoleId, TRole>.IdentityRoleManager(IRoleStore<TRole>, IEnumerable<IRoleValidator<TRole>>, ILookupNormalizer, IdentityErrorDescriber, ILogger<RoleManager<TRole>>)
        VB: IdentityRoleManager(Of TRoleId, TRole).IdentityRoleManager(IRoleStore(Of TRole), IEnumerable(Of IRoleValidator(Of TRole)), ILookupNormalizer, IdentityErrorDescriber, ILogger(Of RoleManager(Of TRole)))
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.IdentityRoleManager(Microsoft.AspNetCore.Identity.IRoleStore<TRole>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IRoleValidator<TRole>>, Microsoft.AspNetCore.Identity.ILookupNormalizer, Microsoft.AspNetCore.Identity.IdentityErrorDescriber, Microsoft.Extensions.Logging.ILogger<Microsoft.AspNetCore.Identity.RoleManager<TRole>>)
        VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).IdentityRoleManager(Microsoft.AspNetCore.Identity.IRoleStore(Of TRole), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Identity.IRoleValidator(Of TRole)), Microsoft.AspNetCore.Identity.ILookupNormalizer, Microsoft.AspNetCore.Identity.IdentityErrorDescriber, Microsoft.Extensions.Logging.ILogger(Of Microsoft.AspNetCore.Identity.RoleManager(Of TRole)))
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityRoleManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
        startLine: 19
      syntax:
        content:
          CSharp: public IdentityRoleManager(IRoleStore<TRole> store, IEnumerable<IRoleValidator<TRole>> roleValidators, ILookupNormalizer keyNormalizer, IdentityErrorDescriber errors, ILogger<RoleManager<TRole>> logger)
          VB: Public Sub New(store As IRoleStore(Of TRole), roleValidators As IEnumerable(Of IRoleValidator(Of TRole)), keyNormalizer As ILookupNormalizer, errors As IdentityErrorDescriber, logger As ILogger(Of RoleManager(Of TRole)))
        parameters:
        - id: store
          type: Microsoft.AspNetCore.Identity.IRoleStore{{TRole}}
        - id: roleValidators
          type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IRoleValidator{{TRole}}}
        - id: keyNormalizer
          type: Microsoft.AspNetCore.Identity.ILookupNormalizer
        - id: errors
          type: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
        - id: logger
          type: Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.RoleManager{{TRole}}}
      overload: es.efor.Auth.Managers.IdentityRoleManager`2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Managers.IdentityRoleManager`2.FindByIdAsync(System.Collections.Generic.IEnumerable{`0})
      commentId: M:es.efor.Auth.Managers.IdentityRoleManager`2.FindByIdAsync(System.Collections.Generic.IEnumerable{`0})
      language: CSharp
      name:
        CSharp: FindByIdAsync(IEnumerable<TRoleId>)
        VB: FindByIdAsync(IEnumerable(Of TRoleId))
      nameWithType:
        CSharp: IdentityRoleManager<TRoleId, TRole>.FindByIdAsync(IEnumerable<TRoleId>)
        VB: IdentityRoleManager(Of TRoleId, TRole).FindByIdAsync(IEnumerable(Of TRoleId))
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.FindByIdAsync(System.Collections.Generic.IEnumerable<TRoleId>)
        VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).FindByIdAsync(System.Collections.Generic.IEnumerable(Of TRoleId))
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityRoleManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: FindByIdAsync
        path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
        startLine: 34
      syntax:
        content:
          CSharp: public virtual Task<IEnumerable<TRole>> FindByIdAsync(IEnumerable<TRoleId> roleIds)
          VB: Public Overridable Function FindByIdAsync(roleIds As IEnumerable(Of TRoleId)) As Task(Of IEnumerable(Of TRole))
        parameters:
        - id: roleIds
          type: System.Collections.Generic.IEnumerable{{TRoleId}}
        return:
          type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TRole}}}
      overload: es.efor.Auth.Managers.IdentityRoleManager`2.FindByIdAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Managers.IdentityRoleManager`2.FindByIdAsync(`0)
      commentId: M:es.efor.Auth.Managers.IdentityRoleManager`2.FindByIdAsync(`0)
      language: CSharp
      name:
        CSharp: FindByIdAsync(TRoleId)
        VB: FindByIdAsync(TRoleId)
      nameWithType:
        CSharp: IdentityRoleManager<TRoleId, TRole>.FindByIdAsync(TRoleId)
        VB: IdentityRoleManager(Of TRoleId, TRole).FindByIdAsync(TRoleId)
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.FindByIdAsync(TRoleId)
        VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).FindByIdAsync(TRoleId)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityRoleManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: FindByIdAsync
        path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
        startLine: 42
      syntax:
        content:
          CSharp: public virtual Task<TRole> FindByIdAsync(TRoleId roleId)
          VB: Public Overridable Function FindByIdAsync(roleId As TRoleId) As Task(Of TRole)
        parameters:
        - id: roleId
          type: '{TRoleId}'
        return:
          type: System.Threading.Tasks.Task{{TRole}}
      overload: es.efor.Auth.Managers.IdentityRoleManager`2.FindByIdAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Managers.IdentityRoleManager`2.UpdateAsync(System.Collections.Generic.IEnumerable{`1})
      commentId: M:es.efor.Auth.Managers.IdentityRoleManager`2.UpdateAsync(System.Collections.Generic.IEnumerable{`1})
      language: CSharp
      name:
        CSharp: UpdateAsync(IEnumerable<TRole>)
        VB: UpdateAsync(IEnumerable(Of TRole))
      nameWithType:
        CSharp: IdentityRoleManager<TRoleId, TRole>.UpdateAsync(IEnumerable<TRole>)
        VB: IdentityRoleManager(Of TRoleId, TRole).UpdateAsync(IEnumerable(Of TRole))
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.UpdateAsync(System.Collections.Generic.IEnumerable<TRole>)
        VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).UpdateAsync(System.Collections.Generic.IEnumerable(Of TRole))
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityRoleManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UpdateAsync
        path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
        startLine: 47
      syntax:
        content:
          CSharp: public virtual Task<Dictionary<TRoleId, IdentityResult>> UpdateAsync(IEnumerable<TRole> roles)
          VB: Public Overridable Function UpdateAsync(roles As IEnumerable(Of TRole)) As Task(Of Dictionary(Of TRoleId, IdentityResult))
        parameters:
        - id: roles
          type: System.Collections.Generic.IEnumerable{{TRole}}
        return:
          type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{{TRoleId},Microsoft.AspNetCore.Identity.IdentityResult}}
      overload: es.efor.Auth.Managers.IdentityRoleManager`2.UpdateAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Managers.IdentityRoleManager`2.GetClaimsAsync(`0)
      commentId: M:es.efor.Auth.Managers.IdentityRoleManager`2.GetClaimsAsync(`0)
      language: CSharp
      name:
        CSharp: GetClaimsAsync(TRoleId)
        VB: GetClaimsAsync(TRoleId)
      nameWithType:
        CSharp: IdentityRoleManager<TRoleId, TRole>.GetClaimsAsync(TRoleId)
        VB: IdentityRoleManager(Of TRoleId, TRole).GetClaimsAsync(TRoleId)
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.GetClaimsAsync(TRoleId)
        VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).GetClaimsAsync(TRoleId)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityRoleManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: GetClaimsAsync
        path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
        startLine: 62
      syntax:
        content:
          CSharp: public virtual Task<IList<Claim>> GetClaimsAsync(TRoleId roleId)
          VB: Public Overridable Function GetClaimsAsync(roleId As TRoleId) As Task(Of IList(Of Claim))
        parameters:
        - id: roleId
          type: '{TRoleId}'
        return:
          type: System.Threading.Tasks.Task{System.Collections.Generic.IList{System.Security.Claims.Claim}}
      overload: es.efor.Auth.Managers.IdentityRoleManager`2.GetClaimsAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Managers.IdentityRoleManager`2.CreateAsync(`1)
      commentId: M:es.efor.Auth.Managers.IdentityRoleManager`2.CreateAsync(`1)
      language: CSharp
      name:
        CSharp: CreateAsync(TRole)
        VB: CreateAsync(TRole)
      nameWithType:
        CSharp: IdentityRoleManager<TRoleId, TRole>.CreateAsync(TRole)
        VB: IdentityRoleManager(Of TRoleId, TRole).CreateAsync(TRole)
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.CreateAsync(TRole)
        VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).CreateAsync(TRole)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityRoleManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: CreateAsync
        path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
        startLine: 73
      syntax:
        content:
          CSharp: public override Task<IdentityResult> CreateAsync(TRole role)
          VB: Public Overrides Function CreateAsync(role As TRole) As Task(Of IdentityResult)
        parameters:
        - id: role
          type: '{TRole}'
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
      overload: es.efor.Auth.Managers.IdentityRoleManager`2.CreateAsync*
      overridden: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.CreateAsync({TRole})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: es.efor.Auth.Managers.IdentityRoleManager`2.UpdateAsync(`1)
      commentId: M:es.efor.Auth.Managers.IdentityRoleManager`2.UpdateAsync(`1)
      language: CSharp
      name:
        CSharp: UpdateAsync(TRole)
        VB: UpdateAsync(TRole)
      nameWithType:
        CSharp: IdentityRoleManager<TRoleId, TRole>.UpdateAsync(TRole)
        VB: IdentityRoleManager(Of TRoleId, TRole).UpdateAsync(TRole)
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.UpdateAsync(TRole)
        VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).UpdateAsync(TRole)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityRoleManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UpdateAsync
        path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
        startLine: 82
      syntax:
        content:
          CSharp: public override Task<IdentityResult> UpdateAsync(TRole role)
          VB: Public Overrides Function UpdateAsync(role As TRole) As Task(Of IdentityResult)
        parameters:
        - id: role
          type: '{TRole}'
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
      overload: es.efor.Auth.Managers.IdentityRoleManager`2.UpdateAsync*
      overridden: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.UpdateAsync({TRole})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: es.efor.Auth.Managers.IdentityRoleManager`2.UpdateNormalizedRoleNameAsync(`1)
      commentId: M:es.efor.Auth.Managers.IdentityRoleManager`2.UpdateNormalizedRoleNameAsync(`1)
      language: CSharp
      name:
        CSharp: UpdateNormalizedRoleNameAsync(TRole)
        VB: UpdateNormalizedRoleNameAsync(TRole)
      nameWithType:
        CSharp: IdentityRoleManager<TRoleId, TRole>.UpdateNormalizedRoleNameAsync(TRole)
        VB: IdentityRoleManager(Of TRoleId, TRole).UpdateNormalizedRoleNameAsync(TRole)
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.UpdateNormalizedRoleNameAsync(TRole)
        VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).UpdateNormalizedRoleNameAsync(TRole)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityRoleManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UpdateNormalizedRoleNameAsync
        path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
        startLine: 91
      syntax:
        content:
          CSharp: public override Task UpdateNormalizedRoleNameAsync(TRole role)
          VB: Public Overrides Function UpdateNormalizedRoleNameAsync(role As TRole) As Task
        parameters:
        - id: role
          type: '{TRole}'
        return:
          type: System.Threading.Tasks.Task
      overload: es.efor.Auth.Managers.IdentityRoleManager`2.UpdateNormalizedRoleNameAsync*
      overridden: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.UpdateNormalizedRoleNameAsync({TRole})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: es.efor.Auth.Managers.IdentityRoleManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
      commentId: M:es.efor.Auth.Managers.IdentityRoleManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
      language: CSharp
      name:
        CSharp: AddClaimAsync(TRole, Claim)
        VB: AddClaimAsync(TRole, Claim)
      nameWithType:
        CSharp: IdentityRoleManager<TRoleId, TRole>.AddClaimAsync(TRole, Claim)
        VB: IdentityRoleManager(Of TRoleId, TRole).AddClaimAsync(TRole, Claim)
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.AddClaimAsync(TRole, System.Security.Claims.Claim)
        VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).AddClaimAsync(TRole, System.Security.Claims.Claim)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityRoleManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: AddClaimAsync
        path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
        startLine: 96
      syntax:
        content:
          CSharp: public override Task<IdentityResult> AddClaimAsync(TRole role, Claim claim)
          VB: Public Overrides Function AddClaimAsync(role As TRole, claim As Claim) As Task(Of IdentityResult)
        parameters:
        - id: role
          type: '{TRole}'
        - id: claim
          type: System.Security.Claims.Claim
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
      overload: es.efor.Auth.Managers.IdentityRoleManager`2.AddClaimAsync*
      overridden: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.AddClaimAsync({TRole},System.Security.Claims.Claim)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: es.efor.Auth.Managers.IdentityRoleManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
      commentId: M:es.efor.Auth.Managers.IdentityRoleManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
      language: CSharp
      name:
        CSharp: RemoveClaimAsync(TRole, Claim)
        VB: RemoveClaimAsync(TRole, Claim)
      nameWithType:
        CSharp: IdentityRoleManager<TRoleId, TRole>.RemoveClaimAsync(TRole, Claim)
        VB: IdentityRoleManager(Of TRoleId, TRole).RemoveClaimAsync(TRole, Claim)
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.RemoveClaimAsync(TRole, System.Security.Claims.Claim)
        VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).RemoveClaimAsync(TRole, System.Security.Claims.Claim)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityRoleManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: RemoveClaimAsync
        path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
        startLine: 105
      syntax:
        content:
          CSharp: public override Task<IdentityResult> RemoveClaimAsync(TRole role, Claim claim)
          VB: Public Overrides Function RemoveClaimAsync(role As TRole, claim As Claim) As Task(Of IdentityResult)
        parameters:
        - id: role
          type: '{TRole}'
        - id: claim
          type: System.Security.Claims.Claim
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
      overload: es.efor.Auth.Managers.IdentityRoleManager`2.RemoveClaimAsync*
      overridden: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.RemoveClaimAsync({TRole},System.Security.Claims.Claim)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: es.efor.Auth.Managers.IdentityRoleManager`2.SetRoleNameAsync(`1,System.String)
      commentId: M:es.efor.Auth.Managers.IdentityRoleManager`2.SetRoleNameAsync(`1,System.String)
      language: CSharp
      name:
        CSharp: SetRoleNameAsync(TRole, String)
        VB: SetRoleNameAsync(TRole, String)
      nameWithType:
        CSharp: IdentityRoleManager<TRoleId, TRole>.SetRoleNameAsync(TRole, String)
        VB: IdentityRoleManager(Of TRoleId, TRole).SetRoleNameAsync(TRole, String)
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.SetRoleNameAsync(TRole, System.String)
        VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).SetRoleNameAsync(TRole, System.String)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityRoleManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: SetRoleNameAsync
        path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
        startLine: 114
      syntax:
        content:
          CSharp: public override Task<IdentityResult> SetRoleNameAsync(TRole role, string name)
          VB: Public Overrides Function SetRoleNameAsync(role As TRole, name As String) As Task(Of IdentityResult)
        parameters:
        - id: role
          type: '{TRole}'
        - id: name
          type: System.String
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
      overload: es.efor.Auth.Managers.IdentityRoleManager`2.SetRoleNameAsync*
      overridden: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.SetRoleNameAsync({TRole},System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: es.efor.Auth.Managers.IdentityRoleManager`2.DeleteAsync(`1)
      commentId: M:es.efor.Auth.Managers.IdentityRoleManager`2.DeleteAsync(`1)
      language: CSharp
      name:
        CSharp: DeleteAsync(TRole)
        VB: DeleteAsync(TRole)
      nameWithType:
        CSharp: IdentityRoleManager<TRoleId, TRole>.DeleteAsync(TRole)
        VB: IdentityRoleManager(Of TRoleId, TRole).DeleteAsync(TRole)
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.DeleteAsync(TRole)
        VB: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).DeleteAsync(TRole)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityRoleManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: DeleteAsync
        path: ../es.efor.Auth/Managers/IdentityRoleManager.cs
        startLine: 123
      syntax:
        content:
          CSharp: public override Task<IdentityResult> DeleteAsync(TRole role)
          VB: Public Overrides Function DeleteAsync(role As TRole) As Task(Of IdentityResult)
        parameters:
        - id: role
          type: '{TRole}'
        return:
          type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
      overload: es.efor.Auth.Managers.IdentityRoleManager`2.DeleteAsync*
      overridden: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.DeleteAsync({TRole})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: es.efor.Auth.Managers.IdentitySignInManager`2
    commentId: T:es.efor.Auth.Managers.IdentitySignInManager`2
    language: CSharp
    name:
      CSharp: IdentitySignInManager<TUserId, TUser>
      VB: IdentitySignInManager(Of TUserId, TUser)
    nameWithType:
      CSharp: IdentitySignInManager<TUserId, TUser>
      VB: IdentitySignInManager(Of TUserId, TUser)
    qualifiedName:
      CSharp: es.efor.Auth.Managers.IdentitySignInManager<TUserId, TUser>
      VB: es.efor.Auth.Managers.IdentitySignInManager(Of TUserId, TUser)
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Managers
    source:
      remote:
        path: es.efor.Auth/Managers/IdentitySignInManager.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: IdentitySignInManager
      path: ../es.efor.Auth/Managers/IdentitySignInManager.cs
      startLine: 10
    syntax:
      content:
        CSharp: 'public class IdentitySignInManager<TUserId, TUser> : SignInManager<TUser> where TUserId : IEquatable<TUserId> where TUser : User<TUserId>'
        VB: >-
          Public Class IdentitySignInManager(Of TUserId As IEquatable(Of TUserId), TUser As User(Of TUserId))

              Inherits SignInManager(Of TUser)
      typeParameters:
      - id: TUserId
      - id: TUser
    inheritance:
    - System.Object
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    inheritedMembers:
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.CanSignInAsync({TUser})
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.CheckPasswordSignInAsync({TUser},System.String,System.Boolean)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.CreateUserPrincipalAsync({TUser})
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ForgetTwoFactorClientAsync
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.GetExternalAuthenticationSchemesAsync
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.GetExternalLoginInfoAsync(System.String)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.GetTwoFactorAuthenticationUserAsync
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.IsLockedOut({TUser})
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.IsTwoFactorClientRememberedAsync({TUser})
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.LockedOut({TUser})
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.PasswordSignInAsync({TUser},System.String,System.Boolean,System.Boolean)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.PreSignInCheck({TUser})
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.RefreshSignInAsync({TUser})
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.RememberTwoFactorClientAsync({TUser})
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ResetLockout({TUser})
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInAsync({TUser},Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInAsync({TUser},System.Boolean,System.String)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInOrTwoFactorAsync({TUser},System.Boolean,System.String,System.Boolean)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInWithClaimsAsync({TUser},Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInWithClaimsAsync({TUser},System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignOutAsync
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.TwoFactorRecoveryCodeSignInAsync(System.String)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ValidateSecurityStampAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ClaimsFactory
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.Context
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.Logger
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.Options
    - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.UserManager
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Managers.IdentitySignInManager`2.#ctor(es.efor.Auth.Managers.IdentityUserManager{`0,`1},Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{`1},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.Extensions.Logging.ILogger{es.efor.Auth.Managers.IdentitySignInManager{`0,`1}},Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider,Microsoft.AspNetCore.Identity.IUserConfirmation{`1})
      commentId: M:es.efor.Auth.Managers.IdentitySignInManager`2.#ctor(es.efor.Auth.Managers.IdentityUserManager{`0,`1},Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{`1},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.Extensions.Logging.ILogger{es.efor.Auth.Managers.IdentitySignInManager{`0,`1}},Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider,Microsoft.AspNetCore.Identity.IUserConfirmation{`1})
      language: CSharp
      name:
        CSharp: IdentitySignInManager(IdentityUserManager<TUserId, TUser>, IHttpContextAccessor, IUserClaimsPrincipalFactory<TUser>, IOptions<IdentityOptions>, ILogger<IdentitySignInManager<TUserId, TUser>>, IAuthenticationSchemeProvider, IUserConfirmation<TUser>)
        VB: IdentitySignInManager(IdentityUserManager(Of TUserId, TUser), IHttpContextAccessor, IUserClaimsPrincipalFactory(Of TUser), IOptions(Of IdentityOptions), ILogger(Of IdentitySignInManager(Of TUserId, TUser)), IAuthenticationSchemeProvider, IUserConfirmation(Of TUser))
      nameWithType:
        CSharp: IdentitySignInManager<TUserId, TUser>.IdentitySignInManager(IdentityUserManager<TUserId, TUser>, IHttpContextAccessor, IUserClaimsPrincipalFactory<TUser>, IOptions<IdentityOptions>, ILogger<IdentitySignInManager<TUserId, TUser>>, IAuthenticationSchemeProvider, IUserConfirmation<TUser>)
        VB: IdentitySignInManager(Of TUserId, TUser).IdentitySignInManager(IdentityUserManager(Of TUserId, TUser), IHttpContextAccessor, IUserClaimsPrincipalFactory(Of TUser), IOptions(Of IdentityOptions), ILogger(Of IdentitySignInManager(Of TUserId, TUser)), IAuthenticationSchemeProvider, IUserConfirmation(Of TUser))
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentitySignInManager<TUserId, TUser>.IdentitySignInManager(es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>, Microsoft.AspNetCore.Http.IHttpContextAccessor, Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory<TUser>, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.IdentityOptions>, Microsoft.Extensions.Logging.ILogger<es.efor.Auth.Managers.IdentitySignInManager<TUserId, TUser>>, Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider, Microsoft.AspNetCore.Identity.IUserConfirmation<TUser>)
        VB: es.efor.Auth.Managers.IdentitySignInManager(Of TUserId, TUser).IdentitySignInManager(es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser), Microsoft.AspNetCore.Http.IHttpContextAccessor, Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory(Of TUser), Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Identity.IdentityOptions), Microsoft.Extensions.Logging.ILogger(Of es.efor.Auth.Managers.IdentitySignInManager(Of TUserId, TUser)), Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider, Microsoft.AspNetCore.Identity.IUserConfirmation(Of TUser))
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentitySignInManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Managers/IdentitySignInManager.cs
        startLine: 14
      syntax:
        content:
          CSharp: public IdentitySignInManager(IdentityUserManager<TUserId, TUser> userManager, IHttpContextAccessor contextAccessor, IUserClaimsPrincipalFactory<TUser> claimsFactory, IOptions<IdentityOptions> optionsAccessor, ILogger<IdentitySignInManager<TUserId, TUser>> logger, IAuthenticationSchemeProvider schemes, IUserConfirmation<TUser> confirmation)
          VB: Public Sub New(userManager As IdentityUserManager(Of TUserId, TUser), contextAccessor As IHttpContextAccessor, claimsFactory As IUserClaimsPrincipalFactory(Of TUser), optionsAccessor As IOptions(Of IdentityOptions), logger As ILogger(Of IdentitySignInManager(Of TUserId, TUser)), schemes As IAuthenticationSchemeProvider, confirmation As IUserConfirmation(Of TUser))
        parameters:
        - id: userManager
          type: es.efor.Auth.Managers.IdentityUserManager{{TUserId},{TUser}}
        - id: contextAccessor
          type: Microsoft.AspNetCore.Http.IHttpContextAccessor
        - id: claimsFactory
          type: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{{TUser}}
        - id: optionsAccessor
          type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}
        - id: logger
          type: Microsoft.Extensions.Logging.ILogger{es.efor.Auth.Managers.IdentitySignInManager`2}
        - id: schemes
          type: Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider
        - id: confirmation
          type: Microsoft.AspNetCore.Identity.IUserConfirmation{{TUser}}
      overload: es.efor.Auth.Managers.IdentitySignInManager`2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: es.efor.Auth.Managers.IdentityUserManager`2
    commentId: T:es.efor.Auth.Managers.IdentityUserManager`2
    language: CSharp
    name:
      CSharp: IdentityUserManager<TUserId, TUser>
      VB: IdentityUserManager(Of TUserId, TUser)
    nameWithType:
      CSharp: IdentityUserManager<TUserId, TUser>
      VB: IdentityUserManager(Of TUserId, TUser)
    qualifiedName:
      CSharp: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>
      VB: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser)
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Managers
    source:
      remote:
        path: es.efor.Auth/Managers/IdentityUserManager.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: IdentityUserManager
      path: ../es.efor.Auth/Managers/IdentityUserManager.cs
      startLine: 12
    syntax:
      content:
        CSharp: 'public class IdentityUserManager<TUserId, TUser> : UserManager<TUser>, IDisposable where TUserId : IEquatable<TUserId> where TUser : User<TUserId>'
        VB: >-
          Public Class IdentityUserManager(Of TUserId As IEquatable(Of TUserId), TUser As User(Of TUserId))

              Inherits UserManager(Of TUser)

              Implements IDisposable
      typeParameters:
      - id: TUserId
      - id: TUser
    inheritance:
    - System.Object
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    implements:
    - System.IDisposable
    inheritedMembers:
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetPasswordTokenPurpose
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangePhoneNumberTokenPurpose
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ConfirmEmailTokenPurpose
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Dispose
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserName(System.Security.Claims.ClaimsPrincipal)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserId(System.Security.Claims.ClaimsPrincipal)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateConcurrencyStampAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.DeleteAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByIdAsync(System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByNameAsync(System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.NormalizeName(System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.NormalizeEmail(System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateNormalizedUserNameAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserNameAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetUserNameAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserIdAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CheckPasswordAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.HasPasswordAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddPasswordAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangePasswordAsync({TUser},System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemovePasswordAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{{TUser}},{TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetSecurityStampAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateSecurityStampAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GeneratePasswordResetTokenAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetPasswordAsync({TUser},System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByLoginAsync(System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveLoginAsync({TUser},System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddLoginAsync({TUser},Microsoft.AspNetCore.Identity.UserLoginInfo)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetLoginsAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddClaimAsync({TUser},System.Security.Claims.Claim)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddClaimsAsync({TUser},System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ReplaceClaimAsync({TUser},System.Security.Claims.Claim,System.Security.Claims.Claim)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveClaimAsync({TUser},System.Security.Claims.Claim)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveClaimsAsync({TUser},System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetClaimsAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddToRoleAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddToRolesAsync({TUser},System.Collections.Generic.IEnumerable{System.String})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveFromRoleAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveFromRolesAsync({TUser},System.Collections.Generic.IEnumerable{System.String})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetRolesAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsInRoleAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetEmailAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetEmailAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByEmailAsync(System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateNormalizedEmailAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateEmailConfirmationTokenAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ConfirmEmailAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsEmailConfirmedAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateChangeEmailTokenAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangeEmailAsync({TUser},System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetPhoneNumberAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetPhoneNumberAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangePhoneNumberAsync({TUser},System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsPhoneNumberConfirmedAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateChangePhoneNumberTokenAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyChangePhoneNumberTokenAsync({TUser},System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyUserTokenAsync({TUser},System.String,System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateUserTokenAsync({TUser},System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{{TUser}})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetValidTwoFactorProvidersAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyTwoFactorTokenAsync({TUser},System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateTwoFactorTokenAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetTwoFactorEnabledAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetTwoFactorEnabledAsync({TUser},System.Boolean)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsLockedOutAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetLockoutEnabledAsync({TUser},System.Boolean)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetLockoutEnabledAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetLockoutEndDateAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetLockoutEndDateAsync({TUser},System.Nullable{System.DateTimeOffset})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AccessFailedAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetAccessFailedCountAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetAccessFailedCountAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUsersForClaimAsync(System.Security.Claims.Claim)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUsersInRoleAsync(System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetAuthenticationTokenAsync({TUser},System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetAuthenticationTokenAsync({TUser},System.String,System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveAuthenticationTokenAsync({TUser},System.String,System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetAuthenticatorKeyAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetAuthenticatorKeyAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateNewAuthenticatorKey
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateNewTwoFactorRecoveryCodesAsync({TUser},System.Int32)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateTwoFactorRecoveryCode
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RedeemTwoFactorRecoveryCodeAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CountRecoveryCodesAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Dispose(System.Boolean)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateSecurityTokenAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdatePasswordHash({TUser},System.String,System.Boolean)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetChangeEmailTokenPurpose(System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ValidateUserAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ValidatePasswordAsync({TUser},System.String)
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateUserAsync({TUser})
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ThrowIfDisposed
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CancellationToken
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Store
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Logger
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.PasswordHasher
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UserValidators
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.PasswordValidators
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.KeyNormalizer
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ErrorDescriber
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Options
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserAuthenticationTokens
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserAuthenticatorKey
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserTwoFactorRecoveryCodes
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserTwoFactor
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserPassword
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserSecurityStamp
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserRole
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserLogin
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserEmail
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserPhoneNumber
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserClaim
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserLockout
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsQueryableUsers
    - Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Users
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Managers.IdentityUserManager`2.#ctor(Microsoft.AspNetCore.Identity.IUserStore{`1},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Identity.IPasswordHasher{`1},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{`1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{`1}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{`1}})
      commentId: M:es.efor.Auth.Managers.IdentityUserManager`2.#ctor(Microsoft.AspNetCore.Identity.IUserStore{`1},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Identity.IPasswordHasher{`1},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{`1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{`1}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{`1}})
      language: CSharp
      name:
        CSharp: IdentityUserManager(IUserStore<TUser>, IOptions<IdentityOptions>, IPasswordHasher<TUser>, IEnumerable<IUserValidator<TUser>>, IEnumerable<IPasswordValidator<TUser>>, ILookupNormalizer, IdentityErrorDescriber, IServiceProvider, ILogger<UserManager<TUser>>)
        VB: IdentityUserManager(IUserStore(Of TUser), IOptions(Of IdentityOptions), IPasswordHasher(Of TUser), IEnumerable(Of IUserValidator(Of TUser)), IEnumerable(Of IPasswordValidator(Of TUser)), ILookupNormalizer, IdentityErrorDescriber, IServiceProvider, ILogger(Of UserManager(Of TUser)))
      nameWithType:
        CSharp: IdentityUserManager<TUserId, TUser>.IdentityUserManager(IUserStore<TUser>, IOptions<IdentityOptions>, IPasswordHasher<TUser>, IEnumerable<IUserValidator<TUser>>, IEnumerable<IPasswordValidator<TUser>>, ILookupNormalizer, IdentityErrorDescriber, IServiceProvider, ILogger<UserManager<TUser>>)
        VB: IdentityUserManager(Of TUserId, TUser).IdentityUserManager(IUserStore(Of TUser), IOptions(Of IdentityOptions), IPasswordHasher(Of TUser), IEnumerable(Of IUserValidator(Of TUser)), IEnumerable(Of IPasswordValidator(Of TUser)), ILookupNormalizer, IdentityErrorDescriber, IServiceProvider, ILogger(Of UserManager(Of TUser)))
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.IdentityUserManager(Microsoft.AspNetCore.Identity.IUserStore<TUser>, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.IdentityOptions>, Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IUserValidator<TUser>>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IPasswordValidator<TUser>>, Microsoft.AspNetCore.Identity.ILookupNormalizer, Microsoft.AspNetCore.Identity.IdentityErrorDescriber, System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<Microsoft.AspNetCore.Identity.UserManager<TUser>>)
        VB: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).IdentityUserManager(Microsoft.AspNetCore.Identity.IUserStore(Of TUser), Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Identity.IdentityOptions), Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Identity.IUserValidator(Of TUser)), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Identity.IPasswordValidator(Of TUser)), Microsoft.AspNetCore.Identity.ILookupNormalizer, Microsoft.AspNetCore.Identity.IdentityErrorDescriber, System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of Microsoft.AspNetCore.Identity.UserManager(Of TUser)))
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityUserManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Managers/IdentityUserManager.cs
        startLine: 16
      syntax:
        content:
          CSharp: public IdentityUserManager(IUserStore<TUser> store, IOptions<IdentityOptions> optionsAccessor, IPasswordHasher<TUser> passwordHasher, IEnumerable<IUserValidator<TUser>> userValidators, IEnumerable<IPasswordValidator<TUser>> passwordValidators, ILookupNormalizer keyNormalizer, IdentityErrorDescriber errors, IServiceProvider services, ILogger<UserManager<TUser>> logger)
          VB: Public Sub New(store As IUserStore(Of TUser), optionsAccessor As IOptions(Of IdentityOptions), passwordHasher As IPasswordHasher(Of TUser), userValidators As IEnumerable(Of IUserValidator(Of TUser)), passwordValidators As IEnumerable(Of IPasswordValidator(Of TUser)), keyNormalizer As ILookupNormalizer, errors As IdentityErrorDescriber, services As IServiceProvider, logger As ILogger(Of UserManager(Of TUser)))
        parameters:
        - id: store
          type: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
        - id: optionsAccessor
          type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}
        - id: passwordHasher
          type: Microsoft.AspNetCore.Identity.IPasswordHasher{{TUser}}
        - id: userValidators
          type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{{TUser}}}
        - id: passwordValidators
          type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{{TUser}}}
        - id: keyNormalizer
          type: Microsoft.AspNetCore.Identity.ILookupNormalizer
        - id: errors
          type: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
        - id: services
          type: System.IServiceProvider
        - id: logger
          type: Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{{TUser}}}
      overload: es.efor.Auth.Managers.IdentityUserManager`2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync(System.Collections.Generic.IEnumerable{`0})
      commentId: M:es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync(System.Collections.Generic.IEnumerable{`0})
      language: CSharp
      name:
        CSharp: FindByIdAsync(IEnumerable<TUserId>)
        VB: FindByIdAsync(IEnumerable(Of TUserId))
      nameWithType:
        CSharp: IdentityUserManager<TUserId, TUser>.FindByIdAsync(IEnumerable<TUserId>)
        VB: IdentityUserManager(Of TUserId, TUser).FindByIdAsync(IEnumerable(Of TUserId))
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.FindByIdAsync(System.Collections.Generic.IEnumerable<TUserId>)
        VB: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).FindByIdAsync(System.Collections.Generic.IEnumerable(Of TUserId))
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityUserManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: FindByIdAsync
        path: ../es.efor.Auth/Managers/IdentityUserManager.cs
        startLine: 27
      syntax:
        content:
          CSharp: public virtual Task<IEnumerable<TUser>> FindByIdAsync(IEnumerable<TUserId> userIds)
          VB: Public Overridable Function FindByIdAsync(userIds As IEnumerable(Of TUserId)) As Task(Of IEnumerable(Of TUser))
        parameters:
        - id: userIds
          type: System.Collections.Generic.IEnumerable{{TUserId}}
        return:
          type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TUser}}}
      overload: es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync(`0)
      commentId: M:es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync(`0)
      language: CSharp
      name:
        CSharp: FindByIdAsync(TUserId)
        VB: FindByIdAsync(TUserId)
      nameWithType:
        CSharp: IdentityUserManager<TUserId, TUser>.FindByIdAsync(TUserId)
        VB: IdentityUserManager(Of TUserId, TUser).FindByIdAsync(TUserId)
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.FindByIdAsync(TUserId)
        VB: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).FindByIdAsync(TUserId)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityUserManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: FindByIdAsync
        path: ../es.efor.Auth/Managers/IdentityUserManager.cs
        startLine: 35
      syntax:
        content:
          CSharp: public virtual Task<TUser> FindByIdAsync(TUserId userId)
          VB: Public Overridable Function FindByIdAsync(userId As TUserId) As Task(Of TUser)
        parameters:
        - id: userId
          type: '{TUserId}'
        return:
          type: System.Threading.Tasks.Task{{TUser}}
      overload: es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync(System.Collections.Generic.IEnumerable{`1})
      commentId: M:es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync(System.Collections.Generic.IEnumerable{`1})
      language: CSharp
      name:
        CSharp: UpdateAsync(IEnumerable<TUser>)
        VB: UpdateAsync(IEnumerable(Of TUser))
      nameWithType:
        CSharp: IdentityUserManager<TUserId, TUser>.UpdateAsync(IEnumerable<TUser>)
        VB: IdentityUserManager(Of TUserId, TUser).UpdateAsync(IEnumerable(Of TUser))
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.UpdateAsync(System.Collections.Generic.IEnumerable<TUser>)
        VB: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).UpdateAsync(System.Collections.Generic.IEnumerable(Of TUser))
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityUserManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UpdateAsync
        path: ../es.efor.Auth/Managers/IdentityUserManager.cs
        startLine: 40
      syntax:
        content:
          CSharp: public virtual Task<Dictionary<TUserId, IdentityResult>> UpdateAsync(IEnumerable<TUser> users)
          VB: Public Overridable Function UpdateAsync(users As IEnumerable(Of TUser)) As Task(Of Dictionary(Of TUserId, IdentityResult))
        parameters:
        - id: users
          type: System.Collections.Generic.IEnumerable{{TUser}}
        return:
          type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{{TUserId},Microsoft.AspNetCore.Identity.IdentityResult}}
      overload: es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync(`1,System.Collections.Generic.IEnumerable{System.String})
      commentId: M:es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync(`1,System.Collections.Generic.IEnumerable{System.String})
      language: CSharp
      name:
        CSharp: IsInAllRolesAsync(TUser, IEnumerable<String>)
        VB: IsInAllRolesAsync(TUser, IEnumerable(Of String))
      nameWithType:
        CSharp: IdentityUserManager<TUserId, TUser>.IsInAllRolesAsync(TUser, IEnumerable<String>)
        VB: IdentityUserManager(Of TUserId, TUser).IsInAllRolesAsync(TUser, IEnumerable(Of String))
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.IsInAllRolesAsync(TUser, System.Collections.Generic.IEnumerable<System.String>)
        VB: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).IsInAllRolesAsync(TUser, System.Collections.Generic.IEnumerable(Of System.String))
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityUserManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: IsInAllRolesAsync
        path: ../es.efor.Auth/Managers/IdentityUserManager.cs
        startLine: 53
      syntax:
        content:
          CSharp: public virtual Task<bool> IsInAllRolesAsync(TUser user, IEnumerable<string> roles)
          VB: Public Overridable Function IsInAllRolesAsync(user As TUser, roles As IEnumerable(Of String)) As Task(Of Boolean)
        parameters:
        - id: user
          type: '{TUser}'
        - id: roles
          type: System.Collections.Generic.IEnumerable{System.String}
        return:
          type: System.Threading.Tasks.Task{System.Boolean}
      overload: es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync(`1,System.Collections.Generic.IEnumerable{System.String})
      commentId: M:es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync(`1,System.Collections.Generic.IEnumerable{System.String})
      language: CSharp
      name:
        CSharp: IsInAnyRoleAsync(TUser, IEnumerable<String>)
        VB: IsInAnyRoleAsync(TUser, IEnumerable(Of String))
      nameWithType:
        CSharp: IdentityUserManager<TUserId, TUser>.IsInAnyRoleAsync(TUser, IEnumerable<String>)
        VB: IdentityUserManager(Of TUserId, TUser).IsInAnyRoleAsync(TUser, IEnumerable(Of String))
      qualifiedName:
        CSharp: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.IsInAnyRoleAsync(TUser, System.Collections.Generic.IEnumerable<System.String>)
        VB: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).IsInAnyRoleAsync(TUser, System.Collections.Generic.IEnumerable(Of System.String))
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Managers
      source:
        remote:
          path: es.efor.Auth/Managers/IdentityUserManager.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: IsInAnyRoleAsync
        path: ../es.efor.Auth/Managers/IdentityUserManager.cs
        startLine: 70
      syntax:
        content:
          CSharp: public virtual Task<bool> IsInAnyRoleAsync(TUser user, IEnumerable<string> roles)
          VB: Public Overridable Function IsInAnyRoleAsync(user As TUser, roles As IEnumerable(Of String)) As Task(Of Boolean)
        parameters:
        - id: user
          type: '{TUser}'
        - id: roles
          type: System.Collections.Generic.IEnumerable{System.String}
        return:
          type: System.Threading.Tasks.Task{System.Boolean}
      overload: es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
- id: es.efor.Auth.Middlewares
  commentId: N:es.efor.Auth.Middlewares
  language: CSharp
  name:
    CSharp: es.efor.Auth.Middlewares
    VB: es.efor.Auth.Middlewares
  nameWithType:
    CSharp: es.efor.Auth.Middlewares
    VB: es.efor.Auth.Middlewares
  qualifiedName:
    CSharp: es.efor.Auth.Middlewares
    VB: es.efor.Auth.Middlewares
  type: Namespace
  assemblies:
  - es.efor.Auth
  modifiers: {}
  items:
  - id: es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5
    commentId: T:es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5
    language: CSharp
    name:
      CSharp: ClaimRefreshMiddleware<TKey, TUser, TSignInManager, TUserManager, TRole>
      VB: ClaimRefreshMiddleware(Of TKey, TUser, TSignInManager, TUserManager, TRole)
    nameWithType:
      CSharp: ClaimRefreshMiddleware<TKey, TUser, TSignInManager, TUserManager, TRole>
      VB: ClaimRefreshMiddleware(Of TKey, TUser, TSignInManager, TUserManager, TRole)
    qualifiedName:
      CSharp: es.efor.Auth.Middlewares.ClaimRefreshMiddleware<TKey, TUser, TSignInManager, TUserManager, TRole>
      VB: es.efor.Auth.Middlewares.ClaimRefreshMiddleware(Of TKey, TUser, TSignInManager, TUserManager, TRole)
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Middlewares
    source:
      remote:
        path: es.efor.Auth/Middlewares/ClaimRefreshMiddleware.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: ClaimRefreshMiddleware
      path: ../es.efor.Auth/Middlewares/ClaimRefreshMiddleware.cs
      startLine: 14
    syntax:
      content:
        CSharp: >-
          public class ClaimRefreshMiddleware<TKey, TUser, TSignInManager, TUserManager, TRole>

              where TKey : IEquatable<TKey> where TUser : User<TKey> where TSignInManager : IdentitySignInManager<TKey, TUser> where TUserManager : UserManager<TUser> where TRole : Role<TKey>, new()
        VB: Public Class ClaimRefreshMiddleware(Of TKey As IEquatable(Of TKey), TUser As User(Of TKey), TSignInManager As IdentitySignInManager(Of TKey, TUser), TUserManager As UserManager(Of TUser), TRole As {Role(Of TKey), New})
      typeParameters:
      - id: TKey
      - id: TUser
      - id: TSignInManager
      - id: TUserManager
      - id: TRole
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)
      commentId: M:es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)
      language: CSharp
      name:
        CSharp: ClaimRefreshMiddleware(RequestDelegate)
        VB: ClaimRefreshMiddleware(RequestDelegate)
      nameWithType:
        CSharp: ClaimRefreshMiddleware<TKey, TUser, TSignInManager, TUserManager, TRole>.ClaimRefreshMiddleware(RequestDelegate)
        VB: ClaimRefreshMiddleware(Of TKey, TUser, TSignInManager, TUserManager, TRole).ClaimRefreshMiddleware(RequestDelegate)
      qualifiedName:
        CSharp: es.efor.Auth.Middlewares.ClaimRefreshMiddleware<TKey, TUser, TSignInManager, TUserManager, TRole>.ClaimRefreshMiddleware(Microsoft.AspNetCore.Http.RequestDelegate)
        VB: es.efor.Auth.Middlewares.ClaimRefreshMiddleware(Of TKey, TUser, TSignInManager, TUserManager, TRole).ClaimRefreshMiddleware(Microsoft.AspNetCore.Http.RequestDelegate)
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Middlewares
      source:
        remote:
          path: es.efor.Auth/Middlewares/ClaimRefreshMiddleware.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Middlewares/ClaimRefreshMiddleware.cs
        startLine: 22
      syntax:
        content:
          CSharp: public ClaimRefreshMiddleware(RequestDelegate next)
          VB: Public Sub New(next As RequestDelegate)
        parameters:
        - id: next
          type: Microsoft.AspNetCore.Http.RequestDelegate
      overload: es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.Invoke(Microsoft.AspNetCore.Http.HttpContext,`2,`3)
      commentId: M:es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.Invoke(Microsoft.AspNetCore.Http.HttpContext,`2,`3)
      language: CSharp
      name:
        CSharp: Invoke(HttpContext, TSignInManager, TUserManager)
        VB: Invoke(HttpContext, TSignInManager, TUserManager)
      nameWithType:
        CSharp: ClaimRefreshMiddleware<TKey, TUser, TSignInManager, TUserManager, TRole>.Invoke(HttpContext, TSignInManager, TUserManager)
        VB: ClaimRefreshMiddleware(Of TKey, TUser, TSignInManager, TUserManager, TRole).Invoke(HttpContext, TSignInManager, TUserManager)
      qualifiedName:
        CSharp: es.efor.Auth.Middlewares.ClaimRefreshMiddleware<TKey, TUser, TSignInManager, TUserManager, TRole>.Invoke(Microsoft.AspNetCore.Http.HttpContext, TSignInManager, TUserManager)
        VB: es.efor.Auth.Middlewares.ClaimRefreshMiddleware(Of TKey, TUser, TSignInManager, TUserManager, TRole).Invoke(Microsoft.AspNetCore.Http.HttpContext, TSignInManager, TUserManager)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Middlewares
      source:
        remote:
          path: es.efor.Auth/Middlewares/ClaimRefreshMiddleware.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: Invoke
        path: ../es.efor.Auth/Middlewares/ClaimRefreshMiddleware.cs
        startLine: 27
      syntax:
        content:
          CSharp: public Task Invoke(HttpContext context, TSignInManager signInManager, TUserManager userManager)
          VB: Public Function Invoke(context As HttpContext, signInManager As TSignInManager, userManager As TUserManager) As Task
        parameters:
        - id: context
          type: Microsoft.AspNetCore.Http.HttpContext
        - id: signInManager
          type: '{TSignInManager}'
        - id: userManager
          type: '{TUserManager}'
        return:
          type: System.Threading.Tasks.Task
      overload: es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.Invoke*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: es.efor.Auth.Identity.Models.Api
  commentId: N:es.efor.Auth.Identity.Models.Api
  language: CSharp
  name:
    CSharp: es.efor.Auth.Identity.Models.Api
    VB: es.efor.Auth.Identity.Models.Api
  nameWithType:
    CSharp: es.efor.Auth.Identity.Models.Api
    VB: es.efor.Auth.Identity.Models.Api
  qualifiedName:
    CSharp: es.efor.Auth.Identity.Models.Api
    VB: es.efor.Auth.Identity.Models.Api
  type: Namespace
  assemblies:
  - es.efor.Auth
  modifiers: {}
  items:
  - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
    commentId: T:es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
    language: CSharp
    name:
      CSharp: JsonWebTokenResponse
      VB: JsonWebTokenResponse
    nameWithType:
      CSharp: JsonWebTokenResponse
      VB: JsonWebTokenResponse
    qualifiedName:
      CSharp: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
      VB: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Identity.Models.Api
    source:
      remote:
        path: es.efor.Auth/Models/Api/JsonWebTokenResponse.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: JsonWebTokenResponse
      path: ../es.efor.Auth/Models/Api/JsonWebTokenResponse.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class JsonWebTokenResponse
        VB: Public Class JsonWebTokenResponse
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidTo
      commentId: P:es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidTo
      language: CSharp
      name:
        CSharp: ValidTo
        VB: ValidTo
      nameWithType:
        CSharp: JsonWebTokenResponse.ValidTo
        VB: JsonWebTokenResponse.ValidTo
      qualifiedName:
        CSharp: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidTo
        VB: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidTo
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Identity.Models.Api
      source:
        remote:
          path: es.efor.Auth/Models/Api/JsonWebTokenResponse.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: ValidTo
        path: ../es.efor.Auth/Models/Api/JsonWebTokenResponse.cs
        startLine: 9
      syntax:
        content:
          CSharp: public DateTimeOffset ValidTo { get; }
          VB: Public ReadOnly Property ValidTo As DateTimeOffset
        parameters: []
        return:
          type: System.DateTimeOffset
      overload: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidTo*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidFrom
      commentId: P:es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidFrom
      language: CSharp
      name:
        CSharp: ValidFrom
        VB: ValidFrom
      nameWithType:
        CSharp: JsonWebTokenResponse.ValidFrom
        VB: JsonWebTokenResponse.ValidFrom
      qualifiedName:
        CSharp: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidFrom
        VB: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidFrom
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Identity.Models.Api
      source:
        remote:
          path: es.efor.Auth/Models/Api/JsonWebTokenResponse.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: ValidFrom
        path: ../es.efor.Auth/Models/Api/JsonWebTokenResponse.cs
        startLine: 10
      syntax:
        content:
          CSharp: public DateTimeOffset ValidFrom { get; }
          VB: Public ReadOnly Property ValidFrom As DateTimeOffset
        parameters: []
        return:
          type: System.DateTimeOffset
      overload: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidFrom*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.AccessToken
      commentId: P:es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.AccessToken
      language: CSharp
      name:
        CSharp: AccessToken
        VB: AccessToken
      nameWithType:
        CSharp: JsonWebTokenResponse.AccessToken
        VB: JsonWebTokenResponse.AccessToken
      qualifiedName:
        CSharp: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.AccessToken
        VB: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.AccessToken
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Identity.Models.Api
      source:
        remote:
          path: es.efor.Auth/Models/Api/JsonWebTokenResponse.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: AccessToken
        path: ../es.efor.Auth/Models/Api/JsonWebTokenResponse.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string AccessToken { get; }
          VB: Public ReadOnly Property AccessToken As String
        parameters: []
        return:
          type: System.String
      overload: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.AccessToken*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.#ctor(System.IdentityModel.Tokens.Jwt.JwtSecurityToken)
      commentId: M:es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.#ctor(System.IdentityModel.Tokens.Jwt.JwtSecurityToken)
      language: CSharp
      name:
        CSharp: JsonWebTokenResponse(JwtSecurityToken)
        VB: JsonWebTokenResponse(JwtSecurityToken)
      nameWithType:
        CSharp: JsonWebTokenResponse.JsonWebTokenResponse(JwtSecurityToken)
        VB: JsonWebTokenResponse.JsonWebTokenResponse(JwtSecurityToken)
      qualifiedName:
        CSharp: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.JsonWebTokenResponse(System.IdentityModel.Tokens.Jwt.JwtSecurityToken)
        VB: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.JsonWebTokenResponse(System.IdentityModel.Tokens.Jwt.JwtSecurityToken)
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Identity.Models.Api
      source:
        remote:
          path: es.efor.Auth/Models/Api/JsonWebTokenResponse.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Models/Api/JsonWebTokenResponse.cs
        startLine: 14
      syntax:
        content:
          CSharp: public JsonWebTokenResponse(JwtSecurityToken token)
          VB: Public Sub New(token As JwtSecurityToken)
        parameters:
        - id: token
          type: System.IdentityModel.Tokens.Jwt.JwtSecurityToken
      overload: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.FromToken(System.IdentityModel.Tokens.Jwt.JwtSecurityToken)
      commentId: M:es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.FromToken(System.IdentityModel.Tokens.Jwt.JwtSecurityToken)
      language: CSharp
      name:
        CSharp: FromToken(JwtSecurityToken)
        VB: FromToken(JwtSecurityToken)
      nameWithType:
        CSharp: JsonWebTokenResponse.FromToken(JwtSecurityToken)
        VB: JsonWebTokenResponse.FromToken(JwtSecurityToken)
      qualifiedName:
        CSharp: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.FromToken(System.IdentityModel.Tokens.Jwt.JwtSecurityToken)
        VB: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.FromToken(System.IdentityModel.Tokens.Jwt.JwtSecurityToken)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Identity.Models.Api
      source:
        remote:
          path: es.efor.Auth/Models/Api/JsonWebTokenResponse.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: FromToken
        path: ../es.efor.Auth/Models/Api/JsonWebTokenResponse.cs
        startLine: 21
      syntax:
        content:
          CSharp: public static JsonWebTokenResponse FromToken(JwtSecurityToken token)
          VB: Public Shared Function FromToken(token As JwtSecurityToken) As JsonWebTokenResponse
        parameters:
        - id: token
          type: System.IdentityModel.Tokens.Jwt.JwtSecurityToken
        return:
          type: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
      overload: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.FromToken*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: es.efor.Auth.Models.Configs
  commentId: N:es.efor.Auth.Models.Configs
  language: CSharp
  name:
    CSharp: es.efor.Auth.Models.Configs
    VB: es.efor.Auth.Models.Configs
  nameWithType:
    CSharp: es.efor.Auth.Models.Configs
    VB: es.efor.Auth.Models.Configs
  qualifiedName:
    CSharp: es.efor.Auth.Models.Configs
    VB: es.efor.Auth.Models.Configs
  type: Namespace
  assemblies:
  - es.efor.Auth
  modifiers: {}
  items:
  - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration
    commentId: T:es.efor.Auth.Models.Configs.CookieIdentityConfiguration
    language: CSharp
    name:
      CSharp: CookieIdentityConfiguration
      VB: CookieIdentityConfiguration
    nameWithType:
      CSharp: CookieIdentityConfiguration
      VB: CookieIdentityConfiguration
    qualifiedName:
      CSharp: es.efor.Auth.Models.Configs.CookieIdentityConfiguration
      VB: es.efor.Auth.Models.Configs.CookieIdentityConfiguration
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Models.Configs
    source:
      remote:
        path: es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: CookieIdentityConfiguration
      path: ../es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class CookieIdentityConfiguration
        VB: Public Class CookieIdentityConfiguration
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Scheme
      commentId: P:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Scheme
      language: CSharp
      name:
        CSharp: Scheme
        VB: Scheme
      nameWithType:
        CSharp: CookieIdentityConfiguration.Scheme
        VB: CookieIdentityConfiguration.Scheme
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Scheme
        VB: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Scheme
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: Scheme
        path: ../es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
        startLine: 12
      summary: "\nPredefined: <xref href=\"Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults.AuthenticationScheme\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public string Scheme { get; set; }
          VB: Public Property Scheme As String
        parameters: []
        return:
          type: System.String
      overload: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Scheme*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
      references:
        Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults.AuthenticationScheme: 
    - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogin
      commentId: P:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogin
      language: CSharp
      name:
        CSharp: PathAuthLogin
        VB: PathAuthLogin
      nameWithType:
        CSharp: CookieIdentityConfiguration.PathAuthLogin
        VB: CookieIdentityConfiguration.PathAuthLogin
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogin
        VB: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogin
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: PathAuthLogin
        path: ../es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
        startLine: 17
      summary: "\nPredefined: &quot;/auth/login&quot;\n"
      example: []
      syntax:
        content:
          CSharp: public string PathAuthLogin { get; set; }
          VB: Public Property PathAuthLogin As String
        parameters: []
        return:
          type: System.String
      overload: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogin*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogout
      commentId: P:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogout
      language: CSharp
      name:
        CSharp: PathAuthLogout
        VB: PathAuthLogout
      nameWithType:
        CSharp: CookieIdentityConfiguration.PathAuthLogout
        VB: CookieIdentityConfiguration.PathAuthLogout
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogout
        VB: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogout
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: PathAuthLogout
        path: ../es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
        startLine: 21
      summary: "\nPredefined: &quot;/auth/logout&quot;\n"
      example: []
      syntax:
        content:
          CSharp: public string PathAuthLogout { get; set; }
          VB: Public Property PathAuthLogout As String
        parameters: []
        return:
          type: System.String
      overload: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogout*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthAccessDenied
      commentId: P:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthAccessDenied
      language: CSharp
      name:
        CSharp: PathAuthAccessDenied
        VB: PathAuthAccessDenied
      nameWithType:
        CSharp: CookieIdentityConfiguration.PathAuthAccessDenied
        VB: CookieIdentityConfiguration.PathAuthAccessDenied
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthAccessDenied
        VB: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthAccessDenied
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: PathAuthAccessDenied
        path: ../es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
        startLine: 25
      summary: "\nPredefined: &quot;/error/503&quot;\n"
      example: []
      syntax:
        content:
          CSharp: public string PathAuthAccessDenied { get; set; }
          VB: Public Property PathAuthAccessDenied As String
        parameters: []
        return:
          type: System.String
      overload: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthAccessDenied*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.OptionModifier
      commentId: P:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.OptionModifier
      language: CSharp
      name:
        CSharp: OptionModifier
        VB: OptionModifier
      nameWithType:
        CSharp: CookieIdentityConfiguration.OptionModifier
        VB: CookieIdentityConfiguration.OptionModifier
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.OptionModifier
        VB: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.OptionModifier
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: OptionModifier
        path: ../es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
        startLine: 30
      summary: "\nPredefined: null\n"
      example: []
      syntax:
        content:
          CSharp: public Action<CookieAuthenticationOptions> OptionModifier { get; set; }
          VB: Public Property OptionModifier As Action(Of CookieAuthenticationOptions)
        parameters: []
        return:
          type: System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions}
      overload: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.OptionModifier*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.#ctor(System.String)
      commentId: M:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.#ctor(System.String)
      language: CSharp
      name:
        CSharp: CookieIdentityConfiguration(String)
        VB: CookieIdentityConfiguration(String)
      nameWithType:
        CSharp: CookieIdentityConfiguration.CookieIdentityConfiguration(String)
        VB: CookieIdentityConfiguration.CookieIdentityConfiguration(String)
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.CookieIdentityConfiguration(System.String)
        VB: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.CookieIdentityConfiguration(System.String)
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
        startLine: 32
      syntax:
        content:
          CSharp: public CookieIdentityConfiguration(string scheme = null)
          VB: Public Sub New(scheme As String = Nothing)
        parameters:
        - id: scheme
          type: System.String
      overload: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Validate
      commentId: M:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Validate
      language: CSharp
      name:
        CSharp: Validate()
        VB: Validate()
      nameWithType:
        CSharp: CookieIdentityConfiguration.Validate()
        VB: CookieIdentityConfiguration.Validate()
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Validate()
        VB: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Validate()
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: Validate
        path: ../es.efor.Auth/Models/Configs/CookieIdentityConfiguration.cs
        startLine: 41
      summary: "\nValidates the class&apos; information. Throws an exception if\nthe information is not valid.\n"
      example: []
      syntax:
        content:
          CSharp: public void Validate()
          VB: Public Sub Validate
      overload: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Validate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: es.efor.Auth.Models.Configs.IdentityConfiguration
    commentId: T:es.efor.Auth.Models.Configs.IdentityConfiguration
    language: CSharp
    name:
      CSharp: IdentityConfiguration
      VB: IdentityConfiguration
    nameWithType:
      CSharp: IdentityConfiguration
      VB: IdentityConfiguration
    qualifiedName:
      CSharp: es.efor.Auth.Models.Configs.IdentityConfiguration
      VB: es.efor.Auth.Models.Configs.IdentityConfiguration
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Models.Configs
    source:
      remote:
        path: es.efor.Auth/Models/Configs/IdentityConfiguration.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: IdentityConfiguration
      path: ../es.efor.Auth/Models/Configs/IdentityConfiguration.cs
      startLine: 6
    syntax:
      content:
        CSharp: public class IdentityConfiguration
        VB: Public Class IdentityConfiguration
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Models.Configs.IdentityConfiguration.Cookie
      commentId: P:es.efor.Auth.Models.Configs.IdentityConfiguration.Cookie
      language: CSharp
      name:
        CSharp: Cookie
        VB: Cookie
      nameWithType:
        CSharp: IdentityConfiguration.Cookie
        VB: IdentityConfiguration.Cookie
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.IdentityConfiguration.Cookie
        VB: es.efor.Auth.Models.Configs.IdentityConfiguration.Cookie
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/IdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: Cookie
        path: ../es.efor.Auth/Models/Configs/IdentityConfiguration.cs
        startLine: 8
      syntax:
        content:
          CSharp: public CookieIdentityConfiguration Cookie { get; }
          VB: Public ReadOnly Property Cookie As CookieIdentityConfiguration
        parameters: []
        return:
          type: es.efor.Auth.Models.Configs.CookieIdentityConfiguration
      overload: es.efor.Auth.Models.Configs.IdentityConfiguration.Cookie*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: es.efor.Auth.Models.Configs.IdentityConfiguration.JsonWebToken
      commentId: P:es.efor.Auth.Models.Configs.IdentityConfiguration.JsonWebToken
      language: CSharp
      name:
        CSharp: JsonWebToken
        VB: JsonWebToken
      nameWithType:
        CSharp: IdentityConfiguration.JsonWebToken
        VB: IdentityConfiguration.JsonWebToken
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.IdentityConfiguration.JsonWebToken
        VB: es.efor.Auth.Models.Configs.IdentityConfiguration.JsonWebToken
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/IdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: JsonWebToken
        path: ../es.efor.Auth/Models/Configs/IdentityConfiguration.cs
        startLine: 9
      syntax:
        content:
          CSharp: public JwtIdentityConfiguration JsonWebToken { get; }
          VB: Public ReadOnly Property JsonWebToken As JwtIdentityConfiguration
        parameters: []
        return:
          type: es.efor.Auth.Models.Configs.JwtIdentityConfiguration
      overload: es.efor.Auth.Models.Configs.IdentityConfiguration.JsonWebToken*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies
      commentId: M:es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies
      language: CSharp
      name:
        CSharp: UseCookies()
        VB: UseCookies()
      nameWithType:
        CSharp: IdentityConfiguration.UseCookies()
        VB: IdentityConfiguration.UseCookies()
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies()
        VB: es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies()
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/IdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UseCookies
        path: ../es.efor.Auth/Models/Configs/IdentityConfiguration.cs
        startLine: 11
      syntax:
        content:
          CSharp: public IdentityConfiguration UseCookies()
          VB: Public Function UseCookies As IdentityConfiguration
        return:
          type: es.efor.Auth.Models.Configs.IdentityConfiguration
      overload: es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies(System.String)
      commentId: M:es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies(System.String)
      language: CSharp
      name:
        CSharp: UseCookies(String)
        VB: UseCookies(String)
      nameWithType:
        CSharp: IdentityConfiguration.UseCookies(String)
        VB: IdentityConfiguration.UseCookies(String)
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies(System.String)
        VB: es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies(System.String)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/IdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UseCookies
        path: ../es.efor.Auth/Models/Configs/IdentityConfiguration.cs
        startLine: 16
      syntax:
        content:
          CSharp: public IdentityConfiguration UseCookies(string scheme)
          VB: Public Function UseCookies(scheme As String) As IdentityConfiguration
        parameters:
        - id: scheme
          type: System.String
        return:
          type: es.efor.Auth.Models.Configs.IdentityConfiguration
      overload: es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.IdentityConfiguration.UseJsonWebTokens(System.String,System.String,System.String,System.String)
      commentId: M:es.efor.Auth.Models.Configs.IdentityConfiguration.UseJsonWebTokens(System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: UseJsonWebTokens(String, String, String, String)
        VB: UseJsonWebTokens(String, String, String, String)
      nameWithType:
        CSharp: IdentityConfiguration.UseJsonWebTokens(String, String, String, String)
        VB: IdentityConfiguration.UseJsonWebTokens(String, String, String, String)
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.IdentityConfiguration.UseJsonWebTokens(System.String, System.String, System.String, System.String)
        VB: es.efor.Auth.Models.Configs.IdentityConfiguration.UseJsonWebTokens(System.String, System.String, System.String, System.String)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/IdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UseJsonWebTokens
        path: ../es.efor.Auth/Models/Configs/IdentityConfiguration.cs
        startLine: 35
      example: []
      syntax:
        content:
          CSharp: public IdentityConfiguration UseJsonWebTokens(string secret, string issuer, string audience = null, string scheme = null)
          VB: Public Function UseJsonWebTokens(secret As String, issuer As String, audience As String = Nothing, scheme As String = Nothing) As IdentityConfiguration
        parameters:
        - id: secret
          type: System.String
          description: "\nUsed to generate tokens. Keep it safe.\n<p>** IF THE TOKEN IS ISSUED WITH A DIFFERENT SECRET, IT WILL BE REJECTED.\nBEWARE OF APP INSTANCES, CLUSTERS, SERVER FARMS, KUBERNETES PODS... **</p>\n"
        - id: issuer
          type: System.String
          description: "\nThe identity provider that is going to emit the auth token\n"
        - id: audience
          type: System.String
          description: "\nThe identity provider that is going to validate the auth token.\nKeep it null to copy the <code data-dev-comment-type=\"paramref\" class=\"paramref\">issuer</code>.\n<p>** IF THE TOKEN HAS A DIFFERENT ISSUER THAN THE ONE SPECIFIED HERE, THE TOKEN WILL BE REJECTED.\nBEWARE OF APP INSTANCES, CLUSTERS, SERVER FARMS, KUBERNETES PODS... **</p>\n"
        - id: scheme
          type: System.String
        return:
          type: es.efor.Auth.Models.Configs.IdentityConfiguration
      overload: es.efor.Auth.Models.Configs.IdentityConfiguration.UseJsonWebTokens*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.IdentityConfiguration.Validate
      commentId: M:es.efor.Auth.Models.Configs.IdentityConfiguration.Validate
      language: CSharp
      name:
        CSharp: Validate()
        VB: Validate()
      nameWithType:
        CSharp: IdentityConfiguration.Validate()
        VB: IdentityConfiguration.Validate()
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.IdentityConfiguration.Validate()
        VB: es.efor.Auth.Models.Configs.IdentityConfiguration.Validate()
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/IdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: Validate
        path: ../es.efor.Auth/Models/Configs/IdentityConfiguration.cs
        startLine: 45
      summary: "\nValidates the class&apos; information. Throws an exception if\nthe information is not valid.\n"
      example: []
      syntax:
        content:
          CSharp: public void Validate()
          VB: Public Sub Validate
      overload: es.efor.Auth.Models.Configs.IdentityConfiguration.Validate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration
    commentId: T:es.efor.Auth.Models.Configs.JwtIdentityConfiguration
    language: CSharp
    name:
      CSharp: JwtIdentityConfiguration
      VB: JwtIdentityConfiguration
    nameWithType:
      CSharp: JwtIdentityConfiguration
      VB: JwtIdentityConfiguration
    qualifiedName:
      CSharp: es.efor.Auth.Models.Configs.JwtIdentityConfiguration
      VB: es.efor.Auth.Models.Configs.JwtIdentityConfiguration
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Models.Configs
    source:
      remote:
        path: es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: JwtIdentityConfiguration
      path: ../es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class JwtIdentityConfiguration
        VB: Public Class JwtIdentityConfiguration
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Scheme
      commentId: P:es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Scheme
      language: CSharp
      name:
        CSharp: Scheme
        VB: Scheme
      nameWithType:
        CSharp: JwtIdentityConfiguration.Scheme
        VB: JwtIdentityConfiguration.Scheme
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Scheme
        VB: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Scheme
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: Scheme
        path: ../es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
        startLine: 9
      syntax:
        content:
          CSharp: public string Scheme { get; set; }
          VB: Public Property Scheme As String
        parameters: []
        return:
          type: System.String
      overload: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Scheme*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Audience
      commentId: P:es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Audience
      language: CSharp
      name:
        CSharp: Audience
        VB: Audience
      nameWithType:
        CSharp: JwtIdentityConfiguration.Audience
        VB: JwtIdentityConfiguration.Audience
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Audience
        VB: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Audience
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: Audience
        path: ../es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string Audience { get; set; }
          VB: Public Property Audience As String
        parameters: []
        return:
          type: System.String
      overload: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Audience*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Issuer
      commentId: P:es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Issuer
      language: CSharp
      name:
        CSharp: Issuer
        VB: Issuer
      nameWithType:
        CSharp: JwtIdentityConfiguration.Issuer
        VB: JwtIdentityConfiguration.Issuer
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Issuer
        VB: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Issuer
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: Issuer
        path: ../es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
        startLine: 12
      syntax:
        content:
          CSharp: public string Issuer { get; set; }
          VB: Public Property Issuer As String
        parameters: []
        return:
          type: System.String
      overload: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Issuer*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.OptionModifier
      commentId: P:es.efor.Auth.Models.Configs.JwtIdentityConfiguration.OptionModifier
      language: CSharp
      name:
        CSharp: OptionModifier
        VB: OptionModifier
      nameWithType:
        CSharp: JwtIdentityConfiguration.OptionModifier
        VB: JwtIdentityConfiguration.OptionModifier
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.OptionModifier
        VB: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.OptionModifier
      type: Property
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: OptionModifier
        path: ../es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
        startLine: 16
      syntax:
        content:
          CSharp: public Action<JwtBearerOptions> OptionModifier { get; set; }
          VB: Public Property OptionModifier As Action(Of JwtBearerOptions)
        parameters: []
        return:
          type: System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions}
      overload: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.OptionModifier*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.#ctor(System.String,System.String,System.String,System.String)
      commentId: M:es.efor.Auth.Models.Configs.JwtIdentityConfiguration.#ctor(System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: JwtIdentityConfiguration(String, String, String, String)
        VB: JwtIdentityConfiguration(String, String, String, String)
      nameWithType:
        CSharp: JwtIdentityConfiguration.JwtIdentityConfiguration(String, String, String, String)
        VB: JwtIdentityConfiguration.JwtIdentityConfiguration(String, String, String, String)
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.JwtIdentityConfiguration(System.String, System.String, System.String, System.String)
        VB: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.JwtIdentityConfiguration(System.String, System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
        startLine: 32
      example: []
      syntax:
        content:
          CSharp: public JwtIdentityConfiguration(string secret, string issuer, string audience = null, string scheme = null)
          VB: Public Sub New(secret As String, issuer As String, audience As String = Nothing, scheme As String = Nothing)
        parameters:
        - id: secret
          type: System.String
          description: "\nUsed to generate tokens. Keep it safe.\n<p>** IF THE TOKEN IS ISSUED WITH A DIFFERENT SECRET, IT WILL BE REJECTED.\nBEWARE OF APP INSTANCES, CLUSTERS, SERVER FARMS, KUBERNETES PODS... **</p>\n"
        - id: issuer
          type: System.String
          description: "\nThe identity provider that is going to emit the auth token\n"
        - id: audience
          type: System.String
          description: "\nThe identity provider that is going to validate the auth token.\nKeep it null to copy the <code data-dev-comment-type=\"paramref\" class=\"paramref\">issuer</code>.\n<p>** IF THE TOKEN HAS A DIFFERENT ISSUER THAN THE ONE SPECIFIED HERE, THE TOKEN WILL BE REJECTED.\nBEWARE OF APP INSTANCES, CLUSTERS, SERVER FARMS, KUBERNETES PODS... **</p>\n"
        - id: scheme
          type: System.String
      overload: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Validate
      commentId: M:es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Validate
      language: CSharp
      name:
        CSharp: Validate()
        VB: Validate()
      nameWithType:
        CSharp: JwtIdentityConfiguration.Validate()
        VB: JwtIdentityConfiguration.Validate()
      qualifiedName:
        CSharp: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Validate()
        VB: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Validate()
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Configs
      source:
        remote:
          path: es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: Validate
        path: ../es.efor.Auth/Models/Configs/JwtIdentityConfiguration.cs
        startLine: 46
      summary: "\nValidates the class&apos; information. Throws an exception if\nthe information is not valid.\n"
      example: []
      syntax:
        content:
          CSharp: public void Validate()
          VB: Public Sub Validate
      overload: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Validate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: es.efor.Auth.Models.Entities
  commentId: N:es.efor.Auth.Models.Entities
  language: CSharp
  name:
    CSharp: es.efor.Auth.Models.Entities
    VB: es.efor.Auth.Models.Entities
  nameWithType:
    CSharp: es.efor.Auth.Models.Entities
    VB: es.efor.Auth.Models.Entities
  qualifiedName:
    CSharp: es.efor.Auth.Models.Entities
    VB: es.efor.Auth.Models.Entities
  type: Namespace
  assemblies:
  - es.efor.Auth
  modifiers: {}
  items:
  - id: es.efor.Auth.Models.Entities.Role
    commentId: T:es.efor.Auth.Models.Entities.Role
    language: CSharp
    name:
      CSharp: Role
      VB: Role
    nameWithType:
      CSharp: Role
      VB: Role
    qualifiedName:
      CSharp: es.efor.Auth.Models.Entities.Role
      VB: es.efor.Auth.Models.Entities.Role
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Models.Entities
    source:
      remote:
        path: es.efor.Auth/Models/Entities/Role.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: Role
      path: ../es.efor.Auth/Models/Entities/Role.cs
      startLine: 10
    summary: "\nClase de implementación para Roles de Identity.\nUtilizar esta clase en lugar de la tipificada en la medida de lo posible.\nDe ser necesario editar el tipo de clave primaria, hacerlo en la definición de esta clase.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Role : Role<Guid>'
        VB: >-
          Public Class Role

              Inherits Role(Of Guid)
    inheritance:
    - System.Object
    - Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}
    - es.efor.Auth.Models.Entities.Role{System.Guid}
    inheritedMembers:
    - Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.ToString
    - Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.Id
    - Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.Name
    - Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.NormalizedName
    - Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.ConcurrencyStamp
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Models.Entities.Role.#ctor
      commentId: M:es.efor.Auth.Models.Entities.Role.#ctor
      language: CSharp
      name:
        CSharp: Role()
        VB: Role()
      nameWithType:
        CSharp: Role.Role()
        VB: Role.Role()
      qualifiedName:
        CSharp: es.efor.Auth.Models.Entities.Role.Role()
        VB: es.efor.Auth.Models.Entities.Role.Role()
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Entities
      source:
        remote:
          path: es.efor.Auth/Models/Entities/Role.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Models/Entities/Role.cs
        startLine: 12
      syntax:
        content:
          CSharp: public Role()
          VB: Public Sub New
      overload: es.efor.Auth.Models.Entities.Role.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Models.Entities.Role.#ctor(System.String)
      commentId: M:es.efor.Auth.Models.Entities.Role.#ctor(System.String)
      language: CSharp
      name:
        CSharp: Role(String)
        VB: Role(String)
      nameWithType:
        CSharp: Role.Role(String)
        VB: Role.Role(String)
      qualifiedName:
        CSharp: es.efor.Auth.Models.Entities.Role.Role(System.String)
        VB: es.efor.Auth.Models.Entities.Role.Role(System.String)
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Entities
      source:
        remote:
          path: es.efor.Auth/Models/Entities/Role.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Models/Entities/Role.cs
        startLine: 13
      syntax:
        content:
          CSharp: public Role(string roleName)
          VB: Public Sub New(roleName As String)
        parameters:
        - id: roleName
          type: System.String
      overload: es.efor.Auth.Models.Entities.Role.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: es.efor.Auth.Models.Entities.Role`1
    commentId: T:es.efor.Auth.Models.Entities.Role`1
    language: CSharp
    name:
      CSharp: Role<TId>
      VB: Role(Of TId)
    nameWithType:
      CSharp: Role<TId>
      VB: Role(Of TId)
    qualifiedName:
      CSharp: es.efor.Auth.Models.Entities.Role<TId>
      VB: es.efor.Auth.Models.Entities.Role(Of TId)
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Models.Entities
    source:
      remote:
        path: es.efor.Auth/Models/Entities/Role.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: Role
      path: ../es.efor.Auth/Models/Entities/Role.cs
      startLine: 21
    summary: "\nClase de implementación para Roles de Identity.\nUtilizar Role sin tipo de clave especificado en la medida de lo posible.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Role<TId> : IdentityRole<TId> where TId : IEquatable<TId>'
        VB: >-
          Public Class Role(Of TId As IEquatable(Of TId))

              Inherits IdentityRole(Of TId)
      typeParameters:
      - id: TId
        description: Tipo de clave primaria a asignar en el contexto de la base de datos
    inheritance:
    - System.Object
    - Microsoft.AspNetCore.Identity.IdentityRole{{TId}}
    inheritedMembers:
    - Microsoft.AspNetCore.Identity.IdentityRole{{TId}}.ToString
    - Microsoft.AspNetCore.Identity.IdentityRole{{TId}}.Id
    - Microsoft.AspNetCore.Identity.IdentityRole{{TId}}.Name
    - Microsoft.AspNetCore.Identity.IdentityRole{{TId}}.NormalizedName
    - Microsoft.AspNetCore.Identity.IdentityRole{{TId}}.ConcurrencyStamp
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Models.Entities.Role`1.#ctor
      commentId: M:es.efor.Auth.Models.Entities.Role`1.#ctor
      language: CSharp
      name:
        CSharp: Role()
        VB: Role()
      nameWithType:
        CSharp: Role<TId>.Role()
        VB: Role(Of TId).Role()
      qualifiedName:
        CSharp: es.efor.Auth.Models.Entities.Role<TId>.Role()
        VB: es.efor.Auth.Models.Entities.Role(Of TId).Role()
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Entities
      source:
        remote:
          path: es.efor.Auth/Models/Entities/Role.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Models/Entities/Role.cs
        startLine: 28
      syntax:
        content:
          CSharp: public Role()
          VB: Public Sub New
      overload: es.efor.Auth.Models.Entities.Role`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Models.Entities.Role`1.#ctor(System.String)
      commentId: M:es.efor.Auth.Models.Entities.Role`1.#ctor(System.String)
      language: CSharp
      name:
        CSharp: Role(String)
        VB: Role(String)
      nameWithType:
        CSharp: Role<TId>.Role(String)
        VB: Role(Of TId).Role(String)
      qualifiedName:
        CSharp: es.efor.Auth.Models.Entities.Role<TId>.Role(System.String)
        VB: es.efor.Auth.Models.Entities.Role(Of TId).Role(System.String)
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Entities
      source:
        remote:
          path: es.efor.Auth/Models/Entities/Role.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Models/Entities/Role.cs
        startLine: 29
      syntax:
        content:
          CSharp: public Role(string roleName)
          VB: Public Sub New(roleName As String)
        parameters:
        - id: roleName
          type: System.String
      overload: es.efor.Auth.Models.Entities.Role`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: es.efor.Auth.Models.Entities.User
    commentId: T:es.efor.Auth.Models.Entities.User
    language: CSharp
    name:
      CSharp: User
      VB: User
    nameWithType:
      CSharp: User
      VB: User
    qualifiedName:
      CSharp: es.efor.Auth.Models.Entities.User
      VB: es.efor.Auth.Models.Entities.User
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Models.Entities
    source:
      remote:
        path: es.efor.Auth/Models/Entities/User.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: User
      path: ../es.efor.Auth/Models/Entities/User.cs
      startLine: 10
    summary: "\nClase de implementación para Users de Identity.\nUtilizar esta clase en lugar de la tipificada en la medida de lo posible.\nDe ser necesario editar el tipo de clave primaria, hacerlo en la definición de esta clase.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class User : User<Guid>'
        VB: >-
          Public Class User

              Inherits User(Of Guid)
    inheritance:
    - System.Object
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    - es.efor.Auth.Models.Entities.User{System.Guid}
    inheritedMembers:
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.ToString
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.Id
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.UserName
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.NormalizedUserName
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.Email
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.NormalizedEmail
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.EmailConfirmed
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.PasswordHash
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.SecurityStamp
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.ConcurrencyStamp
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.PhoneNumber
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.PhoneNumberConfirmed
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.TwoFactorEnabled
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.LockoutEnd
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.LockoutEnabled
    - Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.AccessFailedCount
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Models.Entities.User.#ctor
      commentId: M:es.efor.Auth.Models.Entities.User.#ctor
      language: CSharp
      name:
        CSharp: User()
        VB: User()
      nameWithType:
        CSharp: User.User()
        VB: User.User()
      qualifiedName:
        CSharp: es.efor.Auth.Models.Entities.User.User()
        VB: es.efor.Auth.Models.Entities.User.User()
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Entities
      source:
        remote:
          path: es.efor.Auth/Models/Entities/User.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Models/Entities/User.cs
        startLine: 12
      syntax:
        content:
          CSharp: public User()
          VB: Public Sub New
      overload: es.efor.Auth.Models.Entities.User.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Models.Entities.User.#ctor(System.String)
      commentId: M:es.efor.Auth.Models.Entities.User.#ctor(System.String)
      language: CSharp
      name:
        CSharp: User(String)
        VB: User(String)
      nameWithType:
        CSharp: User.User(String)
        VB: User.User(String)
      qualifiedName:
        CSharp: es.efor.Auth.Models.Entities.User.User(System.String)
        VB: es.efor.Auth.Models.Entities.User.User(System.String)
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Entities
      source:
        remote:
          path: es.efor.Auth/Models/Entities/User.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Models/Entities/User.cs
        startLine: 13
      syntax:
        content:
          CSharp: public User(string userName)
          VB: Public Sub New(userName As String)
        parameters:
        - id: userName
          type: System.String
      overload: es.efor.Auth.Models.Entities.User.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: es.efor.Auth.Models.Entities.User`1
    commentId: T:es.efor.Auth.Models.Entities.User`1
    language: CSharp
    name:
      CSharp: User<TId>
      VB: User(Of TId)
    nameWithType:
      CSharp: User<TId>
      VB: User(Of TId)
    qualifiedName:
      CSharp: es.efor.Auth.Models.Entities.User<TId>
      VB: es.efor.Auth.Models.Entities.User(Of TId)
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Models.Entities
    source:
      remote:
        path: es.efor.Auth/Models/Entities/User.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: User
      path: ../es.efor.Auth/Models/Entities/User.cs
      startLine: 21
    summary: "\nClase de implementación para Usuarios de Identity.\nUtilizar User sin tipo de clave especificado en la medida de lo posible.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class User<TId> : IdentityUser<TId> where TId : IEquatable<TId>'
        VB: >-
          Public Class User(Of TId As IEquatable(Of TId))

              Inherits IdentityUser(Of TId)
      typeParameters:
      - id: TId
        description: Tipo de clave primaria a asignar en el contexto de la base de datos
    inheritance:
    - System.Object
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    inheritedMembers:
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.ToString
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.Id
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.UserName
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.NormalizedUserName
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.Email
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.NormalizedEmail
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.EmailConfirmed
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.PasswordHash
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.SecurityStamp
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.ConcurrencyStamp
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.PhoneNumber
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.PhoneNumberConfirmed
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.TwoFactorEnabled
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.LockoutEnd
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.LockoutEnabled
    - Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.AccessFailedCount
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Auth.Models.Entities.User`1.#ctor
      commentId: M:es.efor.Auth.Models.Entities.User`1.#ctor
      language: CSharp
      name:
        CSharp: User()
        VB: User()
      nameWithType:
        CSharp: User<TId>.User()
        VB: User(Of TId).User()
      qualifiedName:
        CSharp: es.efor.Auth.Models.Entities.User<TId>.User()
        VB: es.efor.Auth.Models.Entities.User(Of TId).User()
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Entities
      source:
        remote:
          path: es.efor.Auth/Models/Entities/User.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Models/Entities/User.cs
        startLine: 31
      syntax:
        content:
          CSharp: public User()
          VB: Public Sub New
      overload: es.efor.Auth.Models.Entities.User`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Auth.Models.Entities.User`1.#ctor(System.String)
      commentId: M:es.efor.Auth.Models.Entities.User`1.#ctor(System.String)
      language: CSharp
      name:
        CSharp: User(String)
        VB: User(String)
      nameWithType:
        CSharp: User<TId>.User(String)
        VB: User(Of TId).User(String)
      qualifiedName:
        CSharp: es.efor.Auth.Models.Entities.User<TId>.User(System.String)
        VB: es.efor.Auth.Models.Entities.User(Of TId).User(System.String)
      type: Constructor
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Models.Entities
      source:
        remote:
          path: es.efor.Auth/Models/Entities/User.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Auth/Models/Entities/User.cs
        startLine: 32
      syntax:
        content:
          CSharp: public User(string userName)
          VB: Public Sub New(userName As String)
        parameters:
        - id: userName
          type: System.String
      overload: es.efor.Auth.Models.Entities.User`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: es.efor.Auth.Utilities
  commentId: N:es.efor.Auth.Utilities
  language: CSharp
  name:
    CSharp: es.efor.Auth.Utilities
    VB: es.efor.Auth.Utilities
  nameWithType:
    CSharp: es.efor.Auth.Utilities
    VB: es.efor.Auth.Utilities
  qualifiedName:
    CSharp: es.efor.Auth.Utilities
    VB: es.efor.Auth.Utilities
  type: Namespace
  assemblies:
  - es.efor.Auth
  modifiers: {}
  items:
  - id: es.efor.Auth.Utilities.AuthorizationPolicyUtilities
    commentId: T:es.efor.Auth.Utilities.AuthorizationPolicyUtilities
    language: CSharp
    name:
      CSharp: AuthorizationPolicyUtilities
      VB: AuthorizationPolicyUtilities
    nameWithType:
      CSharp: AuthorizationPolicyUtilities
      VB: AuthorizationPolicyUtilities
    qualifiedName:
      CSharp: es.efor.Auth.Utilities.AuthorizationPolicyUtilities
      VB: es.efor.Auth.Utilities.AuthorizationPolicyUtilities
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Utilities
    source:
      remote:
        path: es.efor.Auth/Utilities/AuthorizationPolicyUtilities.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: AuthorizationPolicyUtilities
      path: ../es.efor.Auth/Utilities/AuthorizationPolicyUtilities.cs
      startLine: 8
    syntax:
      content:
        CSharp: public static class AuthorizationPolicyUtilities
        VB: Public Module AuthorizationPolicyUtilities
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: es.efor.Auth.Utilities.AuthorizationPolicyUtilities.GetAllPolicyEnums(System.String,System.Boolean)
      commentId: M:es.efor.Auth.Utilities.AuthorizationPolicyUtilities.GetAllPolicyEnums(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: GetAllPolicyEnums(String, Boolean)
        VB: GetAllPolicyEnums(String, Boolean)
      nameWithType:
        CSharp: AuthorizationPolicyUtilities.GetAllPolicyEnums(String, Boolean)
        VB: AuthorizationPolicyUtilities.GetAllPolicyEnums(String, Boolean)
      qualifiedName:
        CSharp: es.efor.Auth.Utilities.AuthorizationPolicyUtilities.GetAllPolicyEnums(System.String, System.Boolean)
        VB: es.efor.Auth.Utilities.AuthorizationPolicyUtilities.GetAllPolicyEnums(System.String, System.Boolean)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Utilities
      source:
        remote:
          path: es.efor.Auth/Utilities/AuthorizationPolicyUtilities.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: GetAllPolicyEnums
        path: ../es.efor.Auth/Utilities/AuthorizationPolicyUtilities.cs
        startLine: 19
      summary: "\nLooks for Policy enumerations on the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">policyEnumNamespace</code>.\nLook docs for more info and how to setup policy enumerations.\n"
      example: []
      syntax:
        content:
          CSharp: public static IEnumerable<Type> GetAllPolicyEnums(string policyEnumNamespace, bool forceRefresh = false)
          VB: Public Shared Function GetAllPolicyEnums(policyEnumNamespace As String, forceRefresh As Boolean = False) As IEnumerable(Of Type)
        parameters:
        - id: policyEnumNamespace
          type: System.String
          description: Namespace where the policy enums are being stored. Follow the docs.
        - id: forceRefresh
          type: System.Boolean
          description: If true, the specified namespace will be re-scaned for new policies.
        return:
          type: System.Collections.Generic.IEnumerable{System.Type}
      overload: es.efor.Auth.Utilities.AuthorizationPolicyUtilities.GetAllPolicyEnums*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: es.efor.Auth.Utilities.JwtUtilities
    commentId: T:es.efor.Auth.Utilities.JwtUtilities
    language: CSharp
    name:
      CSharp: JwtUtilities
      VB: JwtUtilities
    nameWithType:
      CSharp: JwtUtilities
      VB: JwtUtilities
    qualifiedName:
      CSharp: es.efor.Auth.Utilities.JwtUtilities
      VB: es.efor.Auth.Utilities.JwtUtilities
    type: Class
    assemblies:
    - es.efor.Auth
    namespace: es.efor.Auth.Utilities
    source:
      remote:
        path: es.efor.Auth/Utilities/JwtUtilities.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: JwtUtilities
      path: ../es.efor.Auth/Utilities/JwtUtilities.cs
      startLine: 17
    syntax:
      content:
        CSharp: public static class JwtUtilities
        VB: Public Module JwtUtilities
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
      commentId: M:es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
      language: CSharp
      name:
        CSharp: GetAuthBearerToken(String, String, String, String, IEnumerable<Claim>)
        VB: GetAuthBearerToken(String, String, String, String, IEnumerable(Of Claim))
      nameWithType:
        CSharp: JwtUtilities.GetAuthBearerToken(String, String, String, String, IEnumerable<Claim>)
        VB: JwtUtilities.GetAuthBearerToken(String, String, String, String, IEnumerable(Of Claim))
      qualifiedName:
        CSharp: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(System.String, System.String, System.String, System.String, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
        VB: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(System.String, System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Utilities
      source:
        remote:
          path: es.efor.Auth/Utilities/JwtUtilities.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: GetAuthBearerToken
        path: ../es.efor.Auth/Utilities/JwtUtilities.cs
        startLine: 19
      syntax:
        content:
          CSharp: public static Task<JsonWebTokenResponse> GetAuthBearerToken(string stringifiedUserId, string userName, string name = null, string email = null, IEnumerable<Claim> extraClaims = null)
          VB: Public Shared Function GetAuthBearerToken(stringifiedUserId As String, userName As String, name As String = Nothing, email As String = Nothing, extraClaims As IEnumerable(Of Claim) = Nothing) As Task(Of JsonWebTokenResponse)
        parameters:
        - id: stringifiedUserId
          type: System.String
        - id: userName
          type: System.String
        - id: name
          type: System.String
        - id: email
          type: System.String
        - id: extraClaims
          type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
        return:
          type: System.Threading.Tasks.Task{es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse}
      overload: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
      commentId: M:es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
      language: CSharp
      name:
        CSharp: GetAuthBearerToken(IEnumerable<Claim>)
        VB: GetAuthBearerToken(IEnumerable(Of Claim))
      nameWithType:
        CSharp: JwtUtilities.GetAuthBearerToken(IEnumerable<Claim>)
        VB: JwtUtilities.GetAuthBearerToken(IEnumerable(Of Claim))
      qualifiedName:
        CSharp: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
        VB: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Utilities
      source:
        remote:
          path: es.efor.Auth/Utilities/JwtUtilities.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: GetAuthBearerToken
        path: ../es.efor.Auth/Utilities/JwtUtilities.cs
        startLine: 35
      syntax:
        content:
          CSharp: public static Task<JsonWebTokenResponse> GetAuthBearerToken(IEnumerable<Claim> claims)
          VB: Public Shared Function GetAuthBearerToken(claims As IEnumerable(Of Claim)) As Task(Of JsonWebTokenResponse)
        parameters:
        - id: claims
          type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
        return:
          type: System.Threading.Tasks.Task{es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse}
      overload: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(es.efor.Auth.Models.Entities.User,es.efor.Auth.Managers.IdentityUserManager{System.Guid,es.efor.Auth.Models.Entities.User})
      commentId: M:es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(es.efor.Auth.Models.Entities.User,es.efor.Auth.Managers.IdentityUserManager{System.Guid,es.efor.Auth.Models.Entities.User})
      language: CSharp
      name:
        CSharp: GetAuthBearerToken(User, IdentityUserManager<Guid, User>)
        VB: GetAuthBearerToken(User, IdentityUserManager(Of Guid, User))
      nameWithType:
        CSharp: JwtUtilities.GetAuthBearerToken(User, IdentityUserManager<Guid, User>)
        VB: JwtUtilities.GetAuthBearerToken(User, IdentityUserManager(Of Guid, User))
      qualifiedName:
        CSharp: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(es.efor.Auth.Models.Entities.User, es.efor.Auth.Managers.IdentityUserManager<System.Guid, es.efor.Auth.Models.Entities.User>)
        VB: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(es.efor.Auth.Models.Entities.User, es.efor.Auth.Managers.IdentityUserManager(Of System.Guid, es.efor.Auth.Models.Entities.User))
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Utilities
      source:
        remote:
          path: es.efor.Auth/Utilities/JwtUtilities.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: GetAuthBearerToken
        path: ../es.efor.Auth/Utilities/JwtUtilities.cs
        startLine: 53
      syntax:
        content:
          CSharp: public static Task<JsonWebTokenResponse> GetAuthBearerToken(User user, IdentityUserManager<Guid, User> userManager)
          VB: Public Shared Function GetAuthBearerToken(user As User, userManager As IdentityUserManager(Of Guid, User)) As Task(Of JsonWebTokenResponse)
        parameters:
        - id: user
          type: es.efor.Auth.Models.Entities.User
        - id: userManager
          type: es.efor.Auth.Managers.IdentityUserManager{System.Guid,es.efor.Auth.Models.Entities.User}
        return:
          type: System.Threading.Tasks.Task{es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse}
      overload: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken``1(Microsoft.AspNetCore.Identity.IdentityUser{``0},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser{``0}})
      commentId: M:es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken``1(Microsoft.AspNetCore.Identity.IdentityUser{``0},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser{``0}})
      language: CSharp
      name:
        CSharp: GetAuthBearerToken<TKey>(IdentityUser<TKey>, UserManager<IdentityUser<TKey>>)
        VB: GetAuthBearerToken(Of TKey)(IdentityUser(Of TKey), UserManager(Of IdentityUser(Of TKey)))
      nameWithType:
        CSharp: JwtUtilities.GetAuthBearerToken<TKey>(IdentityUser<TKey>, UserManager<IdentityUser<TKey>>)
        VB: JwtUtilities.GetAuthBearerToken(Of TKey)(IdentityUser(Of TKey), UserManager(Of IdentityUser(Of TKey)))
      qualifiedName:
        CSharp: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken<TKey>(Microsoft.AspNetCore.Identity.IdentityUser<TKey>, Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.IdentityUser<TKey>>)
        VB: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(Of TKey)(Microsoft.AspNetCore.Identity.IdentityUser(Of TKey), Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.IdentityUser(Of TKey)))
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Utilities
      source:
        remote:
          path: es.efor.Auth/Utilities/JwtUtilities.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: GetAuthBearerToken
        path: ../es.efor.Auth/Utilities/JwtUtilities.cs
        startLine: 57
      syntax:
        content:
          CSharp: >-
            public static Task<JsonWebTokenResponse> GetAuthBearerToken<TKey>(IdentityUser<TKey> user, UserManager<IdentityUser<TKey>> userManager)

                where TKey : IEquatable<TKey>
          VB: Public Shared Function GetAuthBearerToken(Of TKey As IEquatable(Of TKey))(user As IdentityUser(Of TKey), userManager As UserManager(Of IdentityUser(Of TKey))) As Task(Of JsonWebTokenResponse)
        parameters:
        - id: user
          type: Microsoft.AspNetCore.Identity.IdentityUser{{TKey}}
        - id: userManager
          type: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser{{TKey}}}
        typeParameters:
        - id: TKey
        return:
          type: System.Threading.Tasks.Task{es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse}
      overload: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken``3(``1,``2)
      commentId: M:es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken``3(``1,``2)
      language: CSharp
      name:
        CSharp: GetAuthBearerToken<TKey, TUser, TUserManager>(TUser, TUserManager)
        VB: GetAuthBearerToken(Of TKey, TUser, TUserManager)(TUser, TUserManager)
      nameWithType:
        CSharp: JwtUtilities.GetAuthBearerToken<TKey, TUser, TUserManager>(TUser, TUserManager)
        VB: JwtUtilities.GetAuthBearerToken(Of TKey, TUser, TUserManager)(TUser, TUserManager)
      qualifiedName:
        CSharp: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken<TKey, TUser, TUserManager>(TUser, TUserManager)
        VB: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken(Of TKey, TUser, TUserManager)(TUser, TUserManager)
      type: Method
      assemblies:
      - es.efor.Auth
      namespace: es.efor.Auth.Utilities
      source:
        remote:
          path: es.efor.Auth/Utilities/JwtUtilities.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: GetAuthBearerToken
        path: ../es.efor.Auth/Utilities/JwtUtilities.cs
        startLine: 62
      syntax:
        content:
          CSharp: >-
            public static Task<JsonWebTokenResponse> GetAuthBearerToken<TKey, TUser, TUserManager>(TUser user, TUserManager userManage)

                where TKey : IEquatable<TKey> where TUser : IdentityUser<TKey> where TUserManager : UserManager<TUser>
          VB: Public Shared Function GetAuthBearerToken(Of TKey As IEquatable(Of TKey), TUser As IdentityUser(Of TKey), TUserManager As UserManager(Of TUser))(user As TUser, userManage As TUserManager) As Task(Of JsonWebTokenResponse)
        parameters:
        - id: user
          type: '{TUser}'
        - id: userManage
          type: '{TUserManager}'
        typeParameters:
        - id: TKey
        - id: TUser
        - id: TUserManager
        return:
          type: System.Threading.Tasks.Task{es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse}
      overload: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  System.Security.Claims.Claim.Type:
    commentId: P:System.Security.Claims.Claim.Type
  System.Security.Claims.Claim.Value:
    commentId: P:System.Security.Claims.Claim.Value
  es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute:
    name:
      CSharp:
      - id: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute
        name: PolicyRequiredClaimsAttribute
        nameWithType: PolicyRequiredClaimsAttribute
        qualifiedName: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute
      VB:
      - id: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute
        name: PolicyRequiredClaimsAttribute
        nameWithType: PolicyRequiredClaimsAttribute
        qualifiedName: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute
    isDefinition: true
    commentId: T:es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Attribute:
    name:
      CSharp:
      - id: System.Attribute
        name: Attribute
        nameWithType: Attribute
        qualifiedName: System.Attribute
        isExternal: true
      VB:
      - id: System.Attribute
        name: Attribute
        nameWithType: Attribute
        qualifiedName: System.Attribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Attribute
  System.Attribute.Equals(System.Object):
    name:
      CSharp:
      - id: System.Attribute.Equals(System.Object)
        name: Equals
        nameWithType: Attribute.Equals
        qualifiedName: System.Attribute.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.Equals(System.Object)
        name: Equals
        nameWithType: Attribute.Equals
        qualifiedName: System.Attribute.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.Equals(System.Object)
  System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Module):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetHashCode:
    name:
      CSharp:
      - id: System.Attribute.GetHashCode
        name: GetHashCode
        nameWithType: Attribute.GetHashCode
        qualifiedName: System.Attribute.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetHashCode
        name: GetHashCode
        nameWithType: Attribute.GetHashCode
        qualifiedName: System.Attribute.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetHashCode
  System.Attribute.IsDefaultAttribute:
    name:
      CSharp:
      - id: System.Attribute.IsDefaultAttribute
        name: IsDefaultAttribute
        nameWithType: Attribute.IsDefaultAttribute
        qualifiedName: System.Attribute.IsDefaultAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefaultAttribute
        name: IsDefaultAttribute
        nameWithType: Attribute.IsDefaultAttribute
        qualifiedName: System.Attribute.IsDefaultAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefaultAttribute
  System.Attribute.IsDefined(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.Match(System.Object):
    name:
      CSharp:
      - id: System.Attribute.Match(System.Object)
        name: Match
        nameWithType: Attribute.Match
        qualifiedName: System.Attribute.Match
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.Match(System.Object)
        name: Match
        nameWithType: Attribute.Match
        qualifiedName: System.Attribute.Match
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.Match(System.Object)
  System.Attribute.TypeId:
    name:
      CSharp:
      - id: System.Attribute.TypeId
        name: TypeId
        nameWithType: Attribute.TypeId
        qualifiedName: System.Attribute.TypeId
        isExternal: true
      VB:
      - id: System.Attribute.TypeId
        name: TypeId
        nameWithType: Attribute.TypeId
        qualifiedName: System.Attribute.TypeId
        isExternal: true
    isDefinition: true
    parent: System.Attribute
    commentId: P:System.Attribute.TypeId
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings):
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
        name: CopyMap<TDestination>
        nameWithType: ObjectHelper.CopyMap<TDestination>
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Newtonsoft.Json.JsonSerializerSettings
        name: JsonSerializerSettings
        nameWithType: JsonSerializerSettings
        qualifiedName: Newtonsoft.Json.JsonSerializerSettings
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
        name: CopyMap(Of TDestination)
        nameWithType: ObjectHelper.CopyMap(Of TDestination)
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Newtonsoft.Json.JsonSerializerSettings
        name: JsonSerializerSettings
        nameWithType: JsonSerializerSettings
        qualifiedName: Newtonsoft.Json.JsonSerializerSettings
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  es.efor.Utilities.General.Helpers:
    name:
      CSharp:
      - name: es.efor.Utilities.General.Helpers
        nameWithType: es.efor.Utilities.General.Helpers
        qualifiedName: es.efor.Utilities.General.Helpers
      VB:
      - name: es.efor.Utilities.General.Helpers
        nameWithType: es.efor.Utilities.General.Helpers
        qualifiedName: es.efor.Utilities.General.Helpers
    isDefinition: true
    commentId: N:es.efor.Utilities.General.Helpers
  es.efor.Utilities.General.Helpers.ObjectHelper:
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper
        name: ObjectHelper
        nameWithType: ObjectHelper
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper
        name: ObjectHelper
        nameWithType: ObjectHelper
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper
    isDefinition: true
    parent: es.efor.Utilities.General.Helpers
    commentId: T:es.efor.Utilities.General.Helpers.ObjectHelper
  System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings):
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
        name: CopyMap<TDestination>
        nameWithType: ObjectHelper.CopyMap<TDestination>
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Newtonsoft.Json.JsonSerializerSettings
        name: JsonSerializerSettings
        nameWithType: JsonSerializerSettings
        qualifiedName: Newtonsoft.Json.JsonSerializerSettings
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
        name: CopyMap(Of TDestination)
        nameWithType: ObjectHelper.CopyMap(Of TDestination)
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Newtonsoft.Json.JsonSerializerSettings
        name: JsonSerializerSettings
        nameWithType: JsonSerializerSettings
        qualifiedName: Newtonsoft.Json.JsonSerializerSettings
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
    parent: es.efor.Utilities.General.Helpers.ObjectHelper
    commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling):
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
        name: CopyMap<TDestination>
        nameWithType: ObjectHelper.CopyMap<TDestination>
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Newtonsoft.Json.ReferenceLoopHandling
        name: ReferenceLoopHandling
        nameWithType: ReferenceLoopHandling
        qualifiedName: Newtonsoft.Json.ReferenceLoopHandling
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
        name: CopyMap(Of TDestination)
        nameWithType: ObjectHelper.CopyMap(Of TDestination)
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Newtonsoft.Json.ReferenceLoopHandling
        name: ReferenceLoopHandling
        nameWithType: ReferenceLoopHandling
        qualifiedName: Newtonsoft.Json.ReferenceLoopHandling
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling):
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
        name: CopyMap<TDestination>
        nameWithType: ObjectHelper.CopyMap<TDestination>
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Newtonsoft.Json.ReferenceLoopHandling
        name: ReferenceLoopHandling
        nameWithType: ReferenceLoopHandling
        qualifiedName: Newtonsoft.Json.ReferenceLoopHandling
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
        name: CopyMap(Of TDestination)
        nameWithType: ObjectHelper.CopyMap(Of TDestination)
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Newtonsoft.Json.ReferenceLoopHandling
        name: ReferenceLoopHandling
        nameWithType: ReferenceLoopHandling
        qualifiedName: Newtonsoft.Json.ReferenceLoopHandling
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
    parent: es.efor.Utilities.General.Helpers.ObjectHelper
    commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimType*:
    name:
      CSharp:
      - id: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimType*
        name: ClaimType
        nameWithType: PolicyRequiredClaimsAttribute.ClaimType
        qualifiedName: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimType
      VB:
      - id: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimType*
        name: ClaimType
        nameWithType: PolicyRequiredClaimsAttribute.ClaimType
        qualifiedName: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimType
    isDefinition: true
    commentId: Overload:es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimType
  es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimValue*:
    name:
      CSharp:
      - id: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimValue*
        name: ClaimValue
        nameWithType: PolicyRequiredClaimsAttribute.ClaimValue
        qualifiedName: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimValue
      VB:
      - id: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimValue*
        name: ClaimValue
        nameWithType: PolicyRequiredClaimsAttribute.ClaimValue
        qualifiedName: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimValue
    isDefinition: true
    commentId: Overload:es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.ClaimValue
  es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.#ctor*
        name: PolicyRequiredClaimsAttribute
        nameWithType: PolicyRequiredClaimsAttribute.PolicyRequiredClaimsAttribute
        qualifiedName: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.PolicyRequiredClaimsAttribute
      VB:
      - id: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.#ctor*
        name: PolicyRequiredClaimsAttribute
        nameWithType: PolicyRequiredClaimsAttribute.PolicyRequiredClaimsAttribute
        qualifiedName: es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.PolicyRequiredClaimsAttribute
    isDefinition: true
    commentId: Overload:es.efor.Auth.Attributes.PolicyRequiredClaimsAttribute.#ctor
  System.AttributeUsageAttribute:
    name:
      CSharp:
      - id: System.AttributeUsageAttribute
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute
        isExternal: true
      VB:
      - id: System.AttributeUsageAttribute
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.AttributeUsageAttribute
  System.AttributeUsageAttribute.#ctor(System.AttributeTargets):
    name:
      CSharp:
      - id: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute.AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute.AttributeUsageAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute.AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute.AttributeUsageAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.AttributeUsageAttribute
    commentId: M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
  System.AttributeTargets:
    name:
      CSharp:
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
      VB:
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.AttributeTargets
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  es.efor.Auth.Attributes:
    name:
      CSharp:
      - name: es.efor.Auth.Attributes
        nameWithType: es.efor.Auth.Attributes
        qualifiedName: es.efor.Auth.Attributes
      VB:
      - name: es.efor.Auth.Attributes
        nameWithType: es.efor.Auth.Attributes
        qualifiedName: es.efor.Auth.Attributes
    isDefinition: true
    commentId: N:es.efor.Auth.Attributes
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  es.efor.Auth.Constants.Claims.AppClaimTypes:
    name:
      CSharp:
      - id: es.efor.Auth.Constants.Claims.AppClaimTypes
        name: AppClaimTypes
        nameWithType: AppClaimTypes
        qualifiedName: es.efor.Auth.Constants.Claims.AppClaimTypes
      VB:
      - id: es.efor.Auth.Constants.Claims.AppClaimTypes
        name: AppClaimTypes
        nameWithType: AppClaimTypes
        qualifiedName: es.efor.Auth.Constants.Claims.AppClaimTypes
    isDefinition: true
    commentId: T:es.efor.Auth.Constants.Claims.AppClaimTypes
  es.efor.Auth.Constants.Claims:
    name:
      CSharp:
      - name: es.efor.Auth.Constants.Claims
        nameWithType: es.efor.Auth.Constants.Claims
        qualifiedName: es.efor.Auth.Constants.Claims
      VB:
      - name: es.efor.Auth.Constants.Claims
        nameWithType: es.efor.Auth.Constants.Claims
        qualifiedName: es.efor.Auth.Constants.Claims
    isDefinition: true
    commentId: N:es.efor.Auth.Constants.Claims
  es.efor.Utilities.Web.Controllers:
    name:
      CSharp:
      - name: es.efor.Utilities.Web.Controllers
        nameWithType: es.efor.Utilities.Web.Controllers
        qualifiedName: es.efor.Utilities.Web.Controllers
      VB:
      - name: es.efor.Utilities.Web.Controllers
        nameWithType: es.efor.Utilities.Web.Controllers
        qualifiedName: es.efor.Utilities.Web.Controllers
    isDefinition: true
    commentId: N:es.efor.Utilities.Web.Controllers
  es.efor.Utilities.Web.Controllers.BaseEforController:
    name:
      CSharp:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController
        name: BaseEforController
        nameWithType: BaseEforController
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController
      VB:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController
        name: BaseEforController
        nameWithType: BaseEforController
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController
    isDefinition: true
    parent: es.efor.Utilities.Web.Controllers
    commentId: T:es.efor.Utilities.Web.Controllers.BaseEforController
  es.efor.Utilities.Web.Controllers.BaseEforController.PREDETERMINED_HEADER_LANGCODE:
    name:
      CSharp:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.PREDETERMINED_HEADER_LANGCODE
        name: PREDETERMINED_HEADER_LANGCODE
        nameWithType: BaseEforController.PREDETERMINED_HEADER_LANGCODE
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.PREDETERMINED_HEADER_LANGCODE
      VB:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.PREDETERMINED_HEADER_LANGCODE
        name: PREDETERMINED_HEADER_LANGCODE
        nameWithType: BaseEforController.PREDETERMINED_HEADER_LANGCODE
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.PREDETERMINED_HEADER_LANGCODE
    isDefinition: true
    parent: es.efor.Utilities.Web.Controllers.BaseEforController
    commentId: F:es.efor.Utilities.Web.Controllers.BaseEforController.PREDETERMINED_HEADER_LANGCODE
  es.efor.Utilities.Web.Controllers.BaseEforController.UserLang:
    name:
      CSharp:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.UserLang
        name: UserLang
        nameWithType: BaseEforController.UserLang
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.UserLang
      VB:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.UserLang
        name: UserLang
        nameWithType: BaseEforController.UserLang
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.UserLang
    isDefinition: true
    parent: es.efor.Utilities.Web.Controllers.BaseEforController
    commentId: P:es.efor.Utilities.Web.Controllers.BaseEforController.UserLang
  es.efor.Utilities.Web.Controllers.BaseEforController.UserId:
    name:
      CSharp:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.UserId
        name: UserId
        nameWithType: BaseEforController.UserId
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.UserId
      VB:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.UserId
        name: UserId
        nameWithType: BaseEforController.UserId
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.UserId
    isDefinition: true
    parent: es.efor.Utilities.Web.Controllers.BaseEforController
    commentId: P:es.efor.Utilities.Web.Controllers.BaseEforController.UserId
  es.efor.Utilities.Web.Controllers.BaseEforController._authService:
    name:
      CSharp:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController._authService
        name: _authService
        nameWithType: BaseEforController._authService
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController._authService
      VB:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController._authService
        name: _authService
        nameWithType: BaseEforController._authService
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController._authService
    isDefinition: true
    parent: es.efor.Utilities.Web.Controllers.BaseEforController
    commentId: F:es.efor.Utilities.Web.Controllers.BaseEforController._authService
  es.efor.Utilities.Web.Controllers.BaseEforController._mapper:
    name:
      CSharp:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController._mapper
        name: _mapper
        nameWithType: BaseEforController._mapper
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController._mapper
      VB:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController._mapper
        name: _mapper
        nameWithType: BaseEforController._mapper
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController._mapper
    isDefinition: true
    parent: es.efor.Utilities.Web.Controllers.BaseEforController
    commentId: F:es.efor.Utilities.Web.Controllers.BaseEforController._mapper
  es.efor.Utilities.Web.Controllers.BaseEforController.BadRequestToast(System.String,System.String[]):
    name:
      CSharp:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequestToast(System.String,System.String[])
        name: BadRequestToast
        nameWithType: BaseEforController.BadRequestToast
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequestToast
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequestToast(System.String,System.String[])
        name: BadRequestToast
        nameWithType: BaseEforController.BadRequestToast
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequestToast
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: es.efor.Utilities.Web.Controllers.BaseEforController
    commentId: M:es.efor.Utilities.Web.Controllers.BaseEforController.BadRequestToast(System.String,System.String[])
  es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.String,System.String[]):
    name:
      CSharp:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.String,System.String[])
        name: BadRequest
        nameWithType: BaseEforController.BadRequest
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.String,System.String[])
        name: BadRequest
        nameWithType: BaseEforController.BadRequest
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: es.efor.Utilities.Web.Controllers.BaseEforController
    commentId: M:es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.String,System.String[])
  ? es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.String})
  : name:
      CSharp:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.String})
        name: BadRequest
        nameWithType: BaseEforController.BadRequest
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.String})
        name: BadRequest
        nameWithType: BaseEforController.BadRequest
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: es.efor.Utilities.Web.Controllers.BaseEforController
    commentId: M:es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.String})
  ? es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}})
  : name:
      CSharp:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}})
        name: BadRequest
        nameWithType: BaseEforController.BadRequest
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}})
        name: BadRequest
        nameWithType: BaseEforController.BadRequest
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: es.efor.Utilities.Web.Controllers.BaseEforController
    commentId: M:es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}})
  ? es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Boolean,System.Boolean)
  : name:
      CSharp:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Boolean,System.Boolean)
        name: BadRequest
        nameWithType: BaseEforController.BadRequest
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        name: ModelStateDictionary
        nameWithType: ModelStateDictionary
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Boolean,System.Boolean)
        name: BadRequest
        nameWithType: BaseEforController.BadRequest
        qualifiedName: es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        name: ModelStateDictionary
        nameWithType: ModelStateDictionary
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: es.efor.Utilities.Web.Controllers.BaseEforController
    commentId: M:es.efor.Utilities.Web.Controllers.BaseEforController.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Boolean,System.Boolean)
  Microsoft.AspNetCore.Mvc:
    name:
      CSharp:
      - name: Microsoft.AspNetCore.Mvc
        nameWithType: Microsoft.AspNetCore.Mvc
        qualifiedName: Microsoft.AspNetCore.Mvc
        isExternal: true
      VB:
      - name: Microsoft.AspNetCore.Mvc
        nameWithType: Microsoft.AspNetCore.Mvc
        qualifiedName: Microsoft.AspNetCore.Mvc
    isDefinition: true
    commentId: N:Microsoft.AspNetCore.Mvc
  Microsoft.AspNetCore.Mvc.ControllerBase:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase
        name: ControllerBase
        nameWithType: ControllerBase
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase
        name: ControllerBase
        nameWithType: ControllerBase
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc
    commentId: T:Microsoft.AspNetCore.Mvc.ControllerBase
  Microsoft.AspNetCore.Mvc.ControllerBase.Accepted:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        name: Accepted
        nameWithType: ControllerBase.Accepted
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        name: Accepted
        nameWithType: ControllerBase.Accepted
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
  Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)
        name: Accepted
        nameWithType: ControllerBase.Accepted
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)
        name: Accepted
        nameWithType: ControllerBase.Accepted
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)
        name: Accepted
        nameWithType: ControllerBase.Accepted
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)
        name: Accepted
        nameWithType: ControllerBase.Accepted
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)
        name: Accepted
        nameWithType: ControllerBase.Accepted
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)
        name: Accepted
        nameWithType: ControllerBase.Accepted
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)
        name: Accepted
        nameWithType: ControllerBase.Accepted
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)
        name: Accepted
        nameWithType: ControllerBase.Accepted
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)
  Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)
        name: Accepted
        nameWithType: ControllerBase.Accepted
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)
        name: Accepted
        nameWithType: ControllerBase.Accepted
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Accepted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)
        name: AcceptedAtAction
        nameWithType: ControllerBase.AcceptedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)
        name: AcceptedAtAction
        nameWithType: ControllerBase.AcceptedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)
        name: AcceptedAtAction
        nameWithType: ControllerBase.AcceptedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)
        name: AcceptedAtAction
        nameWithType: ControllerBase.AcceptedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)
        name: AcceptedAtAction
        nameWithType: ControllerBase.AcceptedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)
        name: AcceptedAtAction
        nameWithType: ControllerBase.AcceptedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)
        name: AcceptedAtAction
        nameWithType: ControllerBase.AcceptedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)
        name: AcceptedAtAction
        nameWithType: ControllerBase.AcceptedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)
        name: AcceptedAtAction
        nameWithType: ControllerBase.AcceptedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)
        name: AcceptedAtAction
        nameWithType: ControllerBase.AcceptedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)
        name: AcceptedAtAction
        nameWithType: ControllerBase.AcceptedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)
        name: AcceptedAtAction
        nameWithType: ControllerBase.AcceptedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)
        name: AcceptedAtRoute
        nameWithType: ControllerBase.AcceptedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)
        name: AcceptedAtRoute
        nameWithType: ControllerBase.AcceptedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)
        name: AcceptedAtRoute
        nameWithType: ControllerBase.AcceptedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)
        name: AcceptedAtRoute
        nameWithType: ControllerBase.AcceptedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)
        name: AcceptedAtRoute
        nameWithType: ControllerBase.AcceptedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)
        name: AcceptedAtRoute
        nameWithType: ControllerBase.AcceptedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)
        name: AcceptedAtRoute
        nameWithType: ControllerBase.AcceptedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)
        name: AcceptedAtRoute
        nameWithType: ControllerBase.AcceptedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)
        name: AcceptedAtRoute
        nameWithType: ControllerBase.AcceptedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)
        name: AcceptedAtRoute
        nameWithType: ControllerBase.AcceptedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
        name: BadRequest
        nameWithType: ControllerBase.BadRequest
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
        name: BadRequest
        nameWithType: ControllerBase.BadRequest
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
  Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
        name: BadRequest
        nameWithType: ControllerBase.BadRequest
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        name: ModelStateDictionary
        nameWithType: ModelStateDictionary
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
        name: BadRequest
        nameWithType: ControllerBase.BadRequest
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        name: ModelStateDictionary
        nameWithType: ModelStateDictionary
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
        name: BadRequest
        nameWithType: ControllerBase.BadRequest
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
        name: BadRequest
        nameWithType: ControllerBase.BadRequest
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.Challenge:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
        name: Challenge
        nameWithType: ControllerBase.Challenge
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
        name: Challenge
        nameWithType: ControllerBase.Challenge
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
  Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
        name: Challenge
        nameWithType: ControllerBase.Challenge
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
        name: Challenge
        nameWithType: ControllerBase.Challenge
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[]):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
        name: Challenge
        nameWithType: ControllerBase.Challenge
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
        name: Challenge
        nameWithType: ControllerBase.Challenge
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
  Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
        name: Challenge
        nameWithType: ControllerBase.Challenge
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
        name: Challenge
        nameWithType: ControllerBase.Challenge
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Challenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])
  Microsoft.AspNetCore.Mvc.ControllerBase.Conflict:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
        name: Conflict
        nameWithType: ControllerBase.Conflict
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
        name: Conflict
        nameWithType: ControllerBase.Conflict
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
  Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
        name: Conflict
        nameWithType: ControllerBase.Conflict
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        name: ModelStateDictionary
        nameWithType: ModelStateDictionary
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
        name: Conflict
        nameWithType: ControllerBase.Conflict
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        name: ModelStateDictionary
        nameWithType: ModelStateDictionary
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object)
        name: Conflict
        nameWithType: ControllerBase.Conflict
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object)
        name: Conflict
        nameWithType: ControllerBase.Conflict
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Conflict
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
        name: Content
        nameWithType: ControllerBase.Content
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
        name: Content
        nameWithType: ControllerBase.Content
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
        name: Content
        nameWithType: ControllerBase.Content
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
        name: MediaTypeHeaderValue
        nameWithType: MediaTypeHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
        name: Content
        nameWithType: ControllerBase.Content
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
        name: MediaTypeHeaderValue
        nameWithType: MediaTypeHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.MediaTypeHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)
  Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
        name: Content
        nameWithType: ControllerBase.Content
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
        name: Content
        nameWithType: ControllerBase.Content
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
        name: Content
        nameWithType: ControllerBase.Content
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
        name: Content
        nameWithType: ControllerBase.Content
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)
  Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
        name: Created
        nameWithType: ControllerBase.Created
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Created
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
        name: Created
        nameWithType: ControllerBase.Created
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Created
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
        name: Created
        nameWithType: ControllerBase.Created
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Created
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
        name: Created
        nameWithType: ControllerBase.Created
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Created
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
        name: CreatedAtAction
        nameWithType: ControllerBase.CreatedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
        name: CreatedAtAction
        nameWithType: ControllerBase.CreatedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
        name: CreatedAtAction
        nameWithType: ControllerBase.CreatedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
        name: CreatedAtAction
        nameWithType: ControllerBase.CreatedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
        name: CreatedAtAction
        nameWithType: ControllerBase.CreatedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
        name: CreatedAtAction
        nameWithType: ControllerBase.CreatedAtAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
        name: CreatedAtRoute
        nameWithType: ControllerBase.CreatedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
        name: CreatedAtRoute
        nameWithType: ControllerBase.CreatedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
        name: CreatedAtRoute
        nameWithType: ControllerBase.CreatedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
        name: CreatedAtRoute
        nameWithType: ControllerBase.CreatedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
        name: CreatedAtRoute
        nameWithType: ControllerBase.CreatedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
        name: CreatedAtRoute
        nameWithType: ControllerBase.CreatedAtRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: File
        nameWithType: ControllerBase.File
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  Microsoft.AspNetCore.Mvc.ControllerBase.Forbid:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
        name: Forbid
        nameWithType: ControllerBase.Forbid
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
        name: Forbid
        nameWithType: ControllerBase.Forbid
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
  Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
        name: Forbid
        nameWithType: ControllerBase.Forbid
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
        name: Forbid
        nameWithType: ControllerBase.Forbid
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[]):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
        name: Forbid
        nameWithType: ControllerBase.Forbid
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
        name: Forbid
        nameWithType: ControllerBase.Forbid
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
  Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
        name: Forbid
        nameWithType: ControllerBase.Forbid
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
        name: Forbid
        nameWithType: ControllerBase.Forbid
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Forbid
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])
  Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
        name: LocalRedirect
        nameWithType: ControllerBase.LocalRedirect
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
        name: LocalRedirect
        nameWithType: ControllerBase.LocalRedirect
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
        name: LocalRedirectPermanent
        nameWithType: ControllerBase.LocalRedirectPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
        name: LocalRedirectPermanent
        nameWithType: ControllerBase.LocalRedirectPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String)
        name: LocalRedirectPermanentPreserveMethod
        nameWithType: ControllerBase.LocalRedirectPermanentPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String)
        name: LocalRedirectPermanentPreserveMethod
        nameWithType: ControllerBase.LocalRedirectPermanentPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String)
        name: LocalRedirectPreserveMethod
        nameWithType: ControllerBase.LocalRedirectPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String)
        name: LocalRedirectPreserveMethod
        nameWithType: ControllerBase.LocalRedirectPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.NoContent:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
        name: NoContent
        nameWithType: ControllerBase.NoContent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
        name: NoContent
        nameWithType: ControllerBase.NoContent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.NoContent
  Microsoft.AspNetCore.Mvc.ControllerBase.NotFound:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
        name: NotFound
        nameWithType: ControllerBase.NotFound
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
        name: NotFound
        nameWithType: ControllerBase.NotFound
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
  Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
        name: NotFound
        nameWithType: ControllerBase.NotFound
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
        name: NotFound
        nameWithType: ControllerBase.NotFound
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.NotFound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.Ok:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Ok
        name: Ok
        nameWithType: ControllerBase.Ok
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Ok
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Ok
        name: Ok
        nameWithType: ControllerBase.Ok
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Ok
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Ok
  Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
        name: Ok
        nameWithType: ControllerBase.Ok
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Ok
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
        name: Ok
        nameWithType: ControllerBase.Ok
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Ok
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
        name: PhysicalFile
        nameWithType: ControllerBase.PhysicalFile
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        name: EntityTagHeaderValue
        nameWithType: EntityTagHeaderValue
        qualifiedName: Microsoft.Net.Http.Headers.EntityTagHeaderValue
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
        name: Problem
        nameWithType: ControllerBase.Problem
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Problem
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
        name: Problem
        nameWithType: ControllerBase.Problem
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Problem
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
        name: Redirect
        nameWithType: ControllerBase.Redirect
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Redirect
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
        name: Redirect
        nameWithType: ControllerBase.Redirect
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Redirect
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
        name: RedirectPermanent
        nameWithType: ControllerBase.RedirectPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
        name: RedirectPermanent
        nameWithType: ControllerBase.RedirectPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String)
        name: RedirectPermanentPreserveMethod
        nameWithType: ControllerBase.RedirectPermanentPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String)
        name: RedirectPermanentPreserveMethod
        nameWithType: ControllerBase.RedirectPermanentPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String)
        name: RedirectPreserveMethod
        nameWithType: ControllerBase.RedirectPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String)
        name: RedirectPreserveMethod
        nameWithType: ControllerBase.RedirectPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String)
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String)
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String)
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String)
        name: RedirectToAction
        nameWithType: ControllerBase.RedirectToAction
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
        name: RedirectToActionPermanent
        nameWithType: ControllerBase.RedirectToActionPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
        name: RedirectToActionPermanent
        nameWithType: ControllerBase.RedirectToActionPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
        name: RedirectToActionPermanent
        nameWithType: ControllerBase.RedirectToActionPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
        name: RedirectToActionPermanent
        nameWithType: ControllerBase.RedirectToActionPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
        name: RedirectToActionPermanent
        nameWithType: ControllerBase.RedirectToActionPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
        name: RedirectToActionPermanent
        nameWithType: ControllerBase.RedirectToActionPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
        name: RedirectToActionPermanent
        nameWithType: ControllerBase.RedirectToActionPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
        name: RedirectToActionPermanent
        nameWithType: ControllerBase.RedirectToActionPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String)
        name: RedirectToActionPermanent
        nameWithType: ControllerBase.RedirectToActionPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String)
        name: RedirectToActionPermanent
        nameWithType: ControllerBase.RedirectToActionPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String)
        name: RedirectToActionPermanent
        nameWithType: ControllerBase.RedirectToActionPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String)
        name: RedirectToActionPermanent
        nameWithType: ControllerBase.RedirectToActionPermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)
        name: RedirectToActionPermanentPreserveMethod
        nameWithType: ControllerBase.RedirectToActionPermanentPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)
        name: RedirectToActionPermanentPreserveMethod
        nameWithType: ControllerBase.RedirectToActionPermanentPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String)
        name: RedirectToActionPreserveMethod
        nameWithType: ControllerBase.RedirectToActionPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String)
        name: RedirectToActionPreserveMethod
        nameWithType: ControllerBase.RedirectToActionPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String)
        name: RedirectToPage
        nameWithType: ControllerBase.RedirectToPage
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String)
        name: RedirectToPage
        nameWithType: ControllerBase.RedirectToPage
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object)
        name: RedirectToPage
        nameWithType: ControllerBase.RedirectToPage
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object)
        name: RedirectToPage
        nameWithType: ControllerBase.RedirectToPage
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String)
        name: RedirectToPage
        nameWithType: ControllerBase.RedirectToPage
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String)
        name: RedirectToPage
        nameWithType: ControllerBase.RedirectToPage
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object)
        name: RedirectToPage
        nameWithType: ControllerBase.RedirectToPage
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object)
        name: RedirectToPage
        nameWithType: ControllerBase.RedirectToPage
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String)
        name: RedirectToPage
        nameWithType: ControllerBase.RedirectToPage
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String)
        name: RedirectToPage
        nameWithType: ControllerBase.RedirectToPage
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String)
        name: RedirectToPage
        nameWithType: ControllerBase.RedirectToPage
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String)
        name: RedirectToPage
        nameWithType: ControllerBase.RedirectToPage
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String)
        name: RedirectToPagePermanent
        nameWithType: ControllerBase.RedirectToPagePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String)
        name: RedirectToPagePermanent
        nameWithType: ControllerBase.RedirectToPagePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object)
        name: RedirectToPagePermanent
        nameWithType: ControllerBase.RedirectToPagePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object)
        name: RedirectToPagePermanent
        nameWithType: ControllerBase.RedirectToPagePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String)
        name: RedirectToPagePermanent
        nameWithType: ControllerBase.RedirectToPagePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String)
        name: RedirectToPagePermanent
        nameWithType: ControllerBase.RedirectToPagePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String)
        name: RedirectToPagePermanent
        nameWithType: ControllerBase.RedirectToPagePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String)
        name: RedirectToPagePermanent
        nameWithType: ControllerBase.RedirectToPagePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String)
        name: RedirectToPagePermanent
        nameWithType: ControllerBase.RedirectToPagePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String)
        name: RedirectToPagePermanent
        nameWithType: ControllerBase.RedirectToPagePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)
        name: RedirectToPagePermanentPreserveMethod
        nameWithType: ControllerBase.RedirectToPagePermanentPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)
        name: RedirectToPagePermanentPreserveMethod
        nameWithType: ControllerBase.RedirectToPagePermanentPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String)
        name: RedirectToPagePreserveMethod
        nameWithType: ControllerBase.RedirectToPagePreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String)
        name: RedirectToPagePreserveMethod
        nameWithType: ControllerBase.RedirectToPagePreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
        name: RedirectToRoute
        nameWithType: ControllerBase.RedirectToRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
        name: RedirectToRoute
        nameWithType: ControllerBase.RedirectToRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
        name: RedirectToRoute
        nameWithType: ControllerBase.RedirectToRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
        name: RedirectToRoute
        nameWithType: ControllerBase.RedirectToRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
        name: RedirectToRoute
        nameWithType: ControllerBase.RedirectToRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
        name: RedirectToRoute
        nameWithType: ControllerBase.RedirectToRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String)
        name: RedirectToRoute
        nameWithType: ControllerBase.RedirectToRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String)
        name: RedirectToRoute
        nameWithType: ControllerBase.RedirectToRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String)
        name: RedirectToRoute
        nameWithType: ControllerBase.RedirectToRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String)
        name: RedirectToRoute
        nameWithType: ControllerBase.RedirectToRoute
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
        name: RedirectToRoutePermanent
        nameWithType: ControllerBase.RedirectToRoutePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
        name: RedirectToRoutePermanent
        nameWithType: ControllerBase.RedirectToRoutePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
        name: RedirectToRoutePermanent
        nameWithType: ControllerBase.RedirectToRoutePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
        name: RedirectToRoutePermanent
        nameWithType: ControllerBase.RedirectToRoutePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
        name: RedirectToRoutePermanent
        nameWithType: ControllerBase.RedirectToRoutePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
        name: RedirectToRoutePermanent
        nameWithType: ControllerBase.RedirectToRoutePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String)
        name: RedirectToRoutePermanent
        nameWithType: ControllerBase.RedirectToRoutePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String)
        name: RedirectToRoutePermanent
        nameWithType: ControllerBase.RedirectToRoutePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String)
        name: RedirectToRoutePermanent
        nameWithType: ControllerBase.RedirectToRoutePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String)
        name: RedirectToRoutePermanent
        nameWithType: ControllerBase.RedirectToRoutePermanent
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String)
        name: RedirectToRoutePermanentPreserveMethod
        nameWithType: ControllerBase.RedirectToRoutePermanentPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String)
        name: RedirectToRoutePermanentPreserveMethod
        nameWithType: ControllerBase.RedirectToRoutePermanentPreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String)
        name: RedirectToRoutePreserveMethod
        nameWithType: ControllerBase.RedirectToRoutePreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String)
        name: RedirectToRoutePreserveMethod
        nameWithType: ControllerBase.RedirectToRoutePreserveMethod
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
        name: SignIn
        nameWithType: ControllerBase.SignIn
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
        name: SignIn
        nameWithType: ControllerBase.SignIn
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
        name: SignIn
        nameWithType: ControllerBase.SignIn
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
        name: SignIn
        nameWithType: ControllerBase.SignIn
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.SignIn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[]):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
        name: SignOut
        nameWithType: ControllerBase.SignOut
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
        name: SignOut
        nameWithType: ControllerBase.SignOut
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])
  Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
        name: SignOut
        nameWithType: ControllerBase.SignOut
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
        name: SignOut
        nameWithType: ControllerBase.SignOut
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.SignOut
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])
  Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
        name: StatusCode
        nameWithType: ControllerBase.StatusCode
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
        name: StatusCode
        nameWithType: ControllerBase.StatusCode
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)
  Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
        name: StatusCode
        nameWithType: ControllerBase.StatusCode
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
        name: StatusCode
        nameWithType: ControllerBase.StatusCode
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
        name: TryUpdateModelAsync
        nameWithType: ControllerBase.TryUpdateModelAsync
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
        name: TryUpdateModelAsync
        nameWithType: ControllerBase.TryUpdateModelAsync
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
        name: TryUpdateModelAsync
        nameWithType: ControllerBase.TryUpdateModelAsync
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        name: ModelMetadata
        nameWithType: ModelMetadata
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
        name: TryUpdateModelAsync
        nameWithType: ControllerBase.TryUpdateModelAsync
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        name: ModelMetadata
        nameWithType: ModelMetadata
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
  Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)
  Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        name: ModelMetadata
        nameWithType: ModelMetadata
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        name: ModelMetadata
        nameWithType: ModelMetadata
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  ? Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        name: ModelMetadata
        nameWithType: ModelMetadata
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        name: ModelMetadata
        nameWithType: ModelMetadata
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  ? Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  ? Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[])
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  ? Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        name: ModelMetadata
        nameWithType: ModelMetadata
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        name: ModelMetadata
        nameWithType: ModelMetadata
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  ? Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        name: ModelMetadata
        nameWithType: ModelMetadata
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        name: ModelMetadata
        nameWithType: ModelMetadata
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})
  ? Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  ? Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1({TModel},System.String,System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[])
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
        name: TryUpdateModelAsync<TModel>
        nameWithType: ControllerBase.TryUpdateModelAsync<TModel>
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
        name: TryUpdateModelAsync(Of TModel)
        nameWithType: ControllerBase.TryUpdateModelAsync(Of TModel)
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Linq.Expressions.Expression`1
        name: Expression
        nameWithType: Expression
        qualifiedName: System.Linq.Expressions.Expression
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
        name: TryValidateModel
        nameWithType: ControllerBase.TryValidateModel
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
        name: TryValidateModel
        nameWithType: ControllerBase.TryValidateModel
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
        name: TryValidateModel
        nameWithType: ControllerBase.TryValidateModel
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
        name: TryValidateModel
        nameWithType: ControllerBase.TryValidateModel
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)
  Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
        name: Unauthorized
        nameWithType: ControllerBase.Unauthorized
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
        name: Unauthorized
        nameWithType: ControllerBase.Unauthorized
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
  Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object)
        name: Unauthorized
        nameWithType: ControllerBase.Unauthorized
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object)
        name: Unauthorized
        nameWithType: ControllerBase.Unauthorized
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
        name: UnprocessableEntity
        nameWithType: ControllerBase.UnprocessableEntity
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
        name: UnprocessableEntity
        nameWithType: ControllerBase.UnprocessableEntity
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
  Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
        name: UnprocessableEntity
        nameWithType: ControllerBase.UnprocessableEntity
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        name: ModelStateDictionary
        nameWithType: ModelStateDictionary
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
        name: UnprocessableEntity
        nameWithType: ControllerBase.UnprocessableEntity
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        name: ModelStateDictionary
        nameWithType: ModelStateDictionary
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object)
        name: UnprocessableEntity
        nameWithType: ControllerBase.UnprocessableEntity
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object)
        name: UnprocessableEntity
        nameWithType: ControllerBase.UnprocessableEntity
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object)
  Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
        name: ValidationProblem
        nameWithType: ControllerBase.ValidationProblem
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
        name: ValidationProblem
        nameWithType: ControllerBase.ValidationProblem
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
  Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
        name: ValidationProblem
        nameWithType: ControllerBase.ValidationProblem
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        name: ModelStateDictionary
        nameWithType: ModelStateDictionary
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
        name: ValidationProblem
        nameWithType: ControllerBase.ValidationProblem
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        name: ModelStateDictionary
        nameWithType: ModelStateDictionary
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)
        name: ValidationProblem
        nameWithType: ControllerBase.ValidationProblem
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Mvc.ValidationProblemDetails
        name: ValidationProblemDetails
        nameWithType: ValidationProblemDetails
        qualifiedName: Microsoft.AspNetCore.Mvc.ValidationProblemDetails
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)
        name: ValidationProblem
        nameWithType: ControllerBase.ValidationProblem
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Mvc.ValidationProblemDetails
        name: ValidationProblemDetails
        nameWithType: ValidationProblemDetails
        qualifiedName: Microsoft.AspNetCore.Mvc.ValidationProblemDetails
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)
  ? Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
        name: ValidationProblem
        nameWithType: ControllerBase.ValidationProblem
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        name: ModelStateDictionary
        nameWithType: ModelStateDictionary
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
        name: ValidationProblem
        nameWithType: ControllerBase.ValidationProblem
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        name: ModelStateDictionary
        nameWithType: ModelStateDictionary
        qualifiedName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: M:Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
        name: ControllerContext
        nameWithType: ControllerBase.ControllerContext
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
        name: ControllerContext
        nameWithType: ControllerBase.ControllerContext
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext
  Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
        name: HttpContext
        nameWithType: ControllerBase.HttpContext
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
        name: HttpContext
        nameWithType: ControllerBase.HttpContext
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext
  Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
        name: MetadataProvider
        nameWithType: ControllerBase.MetadataProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
        name: MetadataProvider
        nameWithType: ControllerBase.MetadataProvider
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider
  Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
        name: ModelBinderFactory
        nameWithType: ControllerBase.ModelBinderFactory
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
        name: ModelBinderFactory
        nameWithType: ControllerBase.ModelBinderFactory
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory
  Microsoft.AspNetCore.Mvc.ControllerBase.ModelState:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
        name: ModelState
        nameWithType: ControllerBase.ModelState
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
        name: ModelState
        nameWithType: ControllerBase.ModelState
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState
  Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
        name: ObjectValidator
        nameWithType: ControllerBase.ObjectValidator
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
        name: ObjectValidator
        nameWithType: ControllerBase.ObjectValidator
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator
  Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory
        name: ProblemDetailsFactory
        nameWithType: ControllerBase.ProblemDetailsFactory
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory
        name: ProblemDetailsFactory
        nameWithType: ControllerBase.ProblemDetailsFactory
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory
  Microsoft.AspNetCore.Mvc.ControllerBase.Request:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Request
        name: Request
        nameWithType: ControllerBase.Request
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Request
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Request
        name: Request
        nameWithType: ControllerBase.Request
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Request
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.Request
  Microsoft.AspNetCore.Mvc.ControllerBase.Response:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Response
        name: Response
        nameWithType: ControllerBase.Response
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Response
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Response
        name: Response
        nameWithType: ControllerBase.Response
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Response
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.Response
  Microsoft.AspNetCore.Mvc.ControllerBase.RouteData:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
        name: RouteData
        nameWithType: ControllerBase.RouteData
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
        name: RouteData
        nameWithType: ControllerBase.RouteData
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.RouteData
  Microsoft.AspNetCore.Mvc.ControllerBase.Url:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Url
        name: Url
        nameWithType: ControllerBase.Url
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Url
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.Url
        name: Url
        nameWithType: ControllerBase.Url
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.Url
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.Url
  Microsoft.AspNetCore.Mvc.ControllerBase.User:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.User
        name: User
        nameWithType: ControllerBase.User
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.User
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ControllerBase.User
        name: User
        nameWithType: ControllerBase.User
        qualifiedName: Microsoft.AspNetCore.Mvc.ControllerBase.User
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ControllerBase
    commentId: P:Microsoft.AspNetCore.Mvc.ControllerBase.User
  Microsoft.AspNetCore.Authorization:
    name:
      CSharp:
      - name: Microsoft.AspNetCore.Authorization
        nameWithType: Microsoft.AspNetCore.Authorization
        qualifiedName: Microsoft.AspNetCore.Authorization
        isExternal: true
      VB:
      - name: Microsoft.AspNetCore.Authorization
        nameWithType: Microsoft.AspNetCore.Authorization
        qualifiedName: Microsoft.AspNetCore.Authorization
    isDefinition: true
    commentId: N:Microsoft.AspNetCore.Authorization
  Microsoft.AspNetCore.Authorization.IAuthorizationService:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Authorization.IAuthorizationService
        name: IAuthorizationService
        nameWithType: IAuthorizationService
        qualifiedName: Microsoft.AspNetCore.Authorization.IAuthorizationService
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Authorization.IAuthorizationService
        name: IAuthorizationService
        nameWithType: IAuthorizationService
        qualifiedName: Microsoft.AspNetCore.Authorization.IAuthorizationService
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Authorization
    commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationService
  AutoMapper:
    name:
      CSharp:
      - name: AutoMapper
        nameWithType: AutoMapper
        qualifiedName: AutoMapper
        isExternal: true
      VB:
      - name: AutoMapper
        nameWithType: AutoMapper
        qualifiedName: AutoMapper
    isDefinition: true
    commentId: N:AutoMapper
  AutoMapper.IMapper:
    name:
      CSharp:
      - id: AutoMapper.IMapper
        name: IMapper
        nameWithType: IMapper
        qualifiedName: AutoMapper.IMapper
        isExternal: true
      VB:
      - id: AutoMapper.IMapper
        name: IMapper
        nameWithType: IMapper
        qualifiedName: AutoMapper.IMapper
        isExternal: true
    isDefinition: true
    parent: AutoMapper
    commentId: T:AutoMapper.IMapper
  es.efor.Auth.Controllers.AccessController.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccessController.#ctor*
        name: AccessController
        nameWithType: AccessController.AccessController
        qualifiedName: es.efor.Auth.Controllers.AccessController.AccessController
      VB:
      - id: es.efor.Auth.Controllers.AccessController.#ctor*
        name: AccessController
        nameWithType: AccessController.AccessController
        qualifiedName: es.efor.Auth.Controllers.AccessController.AccessController
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccessController.#ctor
  System.Threading.Tasks.Task`1:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Threading.Tasks.Task`1
  System.Threading.Tasks:
    name:
      CSharp:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
        isExternal: true
      VB:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
    isDefinition: true
    commentId: N:System.Threading.Tasks
  System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Mvc.IActionResult
        name: IActionResult
        nameWithType: IActionResult
        qualifiedName: Microsoft.AspNetCore.Mvc.IActionResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Mvc.IActionResult
        name: IActionResult
        nameWithType: IActionResult
        qualifiedName: Microsoft.AspNetCore.Mvc.IActionResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}
  Microsoft.AspNetCore.Mvc.FromQueryAttribute:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.FromQueryAttribute
        name: FromQueryAttribute
        nameWithType: FromQueryAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.FromQueryAttribute
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.FromQueryAttribute
        name: FromQueryAttribute
        nameWithType: FromQueryAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.FromQueryAttribute
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc
    commentId: T:Microsoft.AspNetCore.Mvc.FromQueryAttribute
  Microsoft.AspNetCore.Mvc.FromQueryAttribute.#ctor:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.FromQueryAttribute.#ctor
        name: FromQueryAttribute
        nameWithType: FromQueryAttribute.FromQueryAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.FromQueryAttribute.FromQueryAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.FromQueryAttribute.#ctor
        name: FromQueryAttribute
        nameWithType: FromQueryAttribute.FromQueryAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.FromQueryAttribute.FromQueryAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.FromQueryAttribute
    commentId: M:Microsoft.AspNetCore.Mvc.FromQueryAttribute.#ctor
  es.efor.Auth.Controllers.AccessController.CheckAccess*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccessController.CheckAccess*
        name: CheckAccess
        nameWithType: AccessController.CheckAccess
        qualifiedName: es.efor.Auth.Controllers.AccessController.CheckAccess
      VB:
      - id: es.efor.Auth.Controllers.AccessController.CheckAccess*
        name: CheckAccess
        nameWithType: AccessController.CheckAccess
        qualifiedName: es.efor.Auth.Controllers.AccessController.CheckAccess
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccessController.CheckAccess
  Microsoft.AspNetCore.Mvc.HttpGetAttribute:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.HttpGetAttribute
        name: HttpGetAttribute
        nameWithType: HttpGetAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.HttpGetAttribute
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.HttpGetAttribute
        name: HttpGetAttribute
        nameWithType: HttpGetAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.HttpGetAttribute
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc
    commentId: T:Microsoft.AspNetCore.Mvc.HttpGetAttribute
  Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)
        name: HttpGetAttribute
        nameWithType: HttpGetAttribute.HttpGetAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.HttpGetAttribute.HttpGetAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)
        name: HttpGetAttribute
        nameWithType: HttpGetAttribute.HttpGetAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.HttpGetAttribute.HttpGetAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.HttpGetAttribute
    commentId: M:Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)
  Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
        name: ProducesResponseTypeAttribute
        nameWithType: ProducesResponseTypeAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
        name: ProducesResponseTypeAttribute
        nameWithType: ProducesResponseTypeAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc
    commentId: T:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
  Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32)
        name: ProducesResponseTypeAttribute
        nameWithType: ProducesResponseTypeAttribute.ProducesResponseTypeAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.ProducesResponseTypeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32)
        name: ProducesResponseTypeAttribute
        nameWithType: ProducesResponseTypeAttribute.ProducesResponseTypeAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.ProducesResponseTypeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    commentId: M:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32)
  System.Type:
    name:
      CSharp:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      VB:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Type
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  es.efor.Auth.Controllers.AccessController:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccessController
        name: AccessController
        nameWithType: AccessController
        qualifiedName: es.efor.Auth.Controllers.AccessController
      VB:
      - id: es.efor.Auth.Controllers.AccessController
        name: AccessController
        nameWithType: AccessController
        qualifiedName: es.efor.Auth.Controllers.AccessController
    isDefinition: true
    commentId: T:es.efor.Auth.Controllers.AccessController
  es.efor.Auth.Controllers:
    name:
      CSharp:
      - name: es.efor.Auth.Controllers
        nameWithType: es.efor.Auth.Controllers
        qualifiedName: es.efor.Auth.Controllers
      VB:
      - name: es.efor.Auth.Controllers
        nameWithType: es.efor.Auth.Controllers
        qualifiedName: es.efor.Auth.Controllers
    isDefinition: true
    commentId: N:es.efor.Auth.Controllers
  es.efor.Auth.Controllers.AccountSimpleController:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController
        name: AccountSimpleController
        nameWithType: AccountSimpleController
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController
        name: AccountSimpleController
        nameWithType: AccountSimpleController
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController
    isDefinition: true
    parent: es.efor.Auth.Controllers
    commentId: T:es.efor.Auth.Controllers.AccountSimpleController
  es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile
        name: GetMyProfile
        nameWithType: AccountSimpleController.GetMyProfile
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile
        name: GetMyProfile
        nameWithType: AccountSimpleController.GetMyProfile
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: es.efor.Auth.Controllers.AccountSimpleController
    commentId: M:es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile
  es.efor.Auth.Controllers.AccountSimpleController.GetPolicies:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.GetPolicies
        name: GetPolicies
        nameWithType: AccountSimpleController.GetPolicies
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.GetPolicies
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.GetPolicies
        name: GetPolicies
        nameWithType: AccountSimpleController.GetPolicies
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.GetPolicies
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: es.efor.Auth.Controllers.AccountSimpleController
    commentId: M:es.efor.Auth.Controllers.AccountSimpleController.GetPolicies
  es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
        name: GetProjectAuthClaimsByPolicyEnumName
        nameWithType: AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
        name: GetProjectAuthClaimsByPolicyEnumName
        nameWithType: AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: es.efor.Auth.Controllers.AccountSimpleController
    commentId: M:es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
  es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest):
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
        name: CheckUserPassword
        nameWithType: AccountSimpleController.CheckUserPassword
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
        name: AccountLoginRequest
        nameWithType: AccountLoginRequest
        qualifiedName: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
        name: CheckUserPassword
        nameWithType: AccountSimpleController.CheckUserPassword
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
        name: AccountLoginRequest
        nameWithType: AccountLoginRequest
        qualifiedName: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: es.efor.Auth.Controllers.AccountSimpleController
    commentId: M:es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
  Microsoft.AspNetCore.Identity.SignInManager`1:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1
        name: SignInManager
        nameWithType: SignInManager
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1
        name: SignInManager
        nameWithType: SignInManager
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNetCore.Identity.SignInManager`1
  Microsoft.AspNetCore.Identity:
    name:
      CSharp:
      - name: Microsoft.AspNetCore.Identity
        nameWithType: Microsoft.AspNetCore.Identity
        qualifiedName: Microsoft.AspNetCore.Identity
        isExternal: true
      VB:
      - name: Microsoft.AspNetCore.Identity
        nameWithType: Microsoft.AspNetCore.Identity
        qualifiedName: Microsoft.AspNetCore.Identity
    isDefinition: true
    commentId: N:Microsoft.AspNetCore.Identity
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1
        name: SignInManager
        nameWithType: SignInManager
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1
        name: SignInManager
        nameWithType: SignInManager
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.SignInManager{`0}
  Microsoft.AspNetCore.Identity.UserManager`1:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNetCore.Identity.UserManager`1
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.UserManager{`0}
  es.efor.Auth.Controllers.AccountIdentityController`2.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountIdentityController`2.#ctor*
        name: AccountIdentityController
        nameWithType: AccountIdentityController<TUser, TUSerKey>.AccountIdentityController
        qualifiedName: es.efor.Auth.Controllers.AccountIdentityController<TUser, TUSerKey>.AccountIdentityController
      VB:
      - id: es.efor.Auth.Controllers.AccountIdentityController`2.#ctor*
        name: AccountIdentityController
        nameWithType: AccountIdentityController(Of TUser, TUSerKey).AccountIdentityController
        qualifiedName: es.efor.Auth.Controllers.AccountIdentityController(Of TUser, TUSerKey).AccountIdentityController
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccountIdentityController`2.#ctor
  es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest):
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
        name: JwtTokenAsync
        nameWithType: AccountSimpleController.JwtTokenAsync
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
        name: AccountLoginRequest
        nameWithType: AccountLoginRequest
        qualifiedName: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
        name: JwtTokenAsync
        nameWithType: AccountSimpleController.JwtTokenAsync
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
        name: AccountLoginRequest
        nameWithType: AccountLoginRequest
        qualifiedName: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: es.efor.Auth.Controllers.AccountSimpleController
    commentId: M:es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
  es.efor.Utilities.Web.Models.Identity:
    name:
      CSharp:
      - name: es.efor.Utilities.Web.Models.Identity
        nameWithType: es.efor.Utilities.Web.Models.Identity
        qualifiedName: es.efor.Utilities.Web.Models.Identity
      VB:
      - name: es.efor.Utilities.Web.Models.Identity
        nameWithType: es.efor.Utilities.Web.Models.Identity
        qualifiedName: es.efor.Utilities.Web.Models.Identity
    isDefinition: true
    commentId: N:es.efor.Utilities.Web.Models.Identity
  es.efor.Utilities.Web.Models.Identity.AccountLoginRequest:
    name:
      CSharp:
      - id: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
        name: AccountLoginRequest
        nameWithType: AccountLoginRequest
        qualifiedName: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
      VB:
      - id: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
        name: AccountLoginRequest
        nameWithType: AccountLoginRequest
        qualifiedName: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
    isDefinition: true
    parent: es.efor.Utilities.Web.Models.Identity
    commentId: T:es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
  Microsoft.AspNetCore.Mvc.FromBodyAttribute:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.FromBodyAttribute
        name: FromBodyAttribute
        nameWithType: FromBodyAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.FromBodyAttribute
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.FromBodyAttribute
        name: FromBodyAttribute
        nameWithType: FromBodyAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.FromBodyAttribute
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc
    commentId: T:Microsoft.AspNetCore.Mvc.FromBodyAttribute
  Microsoft.AspNetCore.Mvc.FromBodyAttribute.#ctor:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.FromBodyAttribute.#ctor
        name: FromBodyAttribute
        nameWithType: FromBodyAttribute.FromBodyAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.FromBodyAttribute.FromBodyAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.FromBodyAttribute.#ctor
        name: FromBodyAttribute
        nameWithType: FromBodyAttribute.FromBodyAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.FromBodyAttribute.FromBodyAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.FromBodyAttribute
    commentId: M:Microsoft.AspNetCore.Mvc.FromBodyAttribute.#ctor
  es.efor.Auth.Controllers.AccountIdentityController`2.JwtTokenAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountIdentityController`2.JwtTokenAsync*
        name: JwtTokenAsync
        nameWithType: AccountIdentityController<TUser, TUSerKey>.JwtTokenAsync
        qualifiedName: es.efor.Auth.Controllers.AccountIdentityController<TUser, TUSerKey>.JwtTokenAsync
      VB:
      - id: es.efor.Auth.Controllers.AccountIdentityController`2.JwtTokenAsync*
        name: JwtTokenAsync
        nameWithType: AccountIdentityController(Of TUser, TUSerKey).JwtTokenAsync
        qualifiedName: es.efor.Auth.Controllers.AccountIdentityController(Of TUser, TUSerKey).JwtTokenAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccountIdentityController`2.JwtTokenAsync
  Microsoft.AspNetCore.Mvc.HttpPostAttribute:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.HttpPostAttribute
        name: HttpPostAttribute
        nameWithType: HttpPostAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.HttpPostAttribute
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.HttpPostAttribute
        name: HttpPostAttribute
        nameWithType: HttpPostAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.HttpPostAttribute
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc
    commentId: T:Microsoft.AspNetCore.Mvc.HttpPostAttribute
  Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String)
        name: HttpPostAttribute
        nameWithType: HttpPostAttribute.HttpPostAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.HttpPostAttribute.HttpPostAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String)
        name: HttpPostAttribute
        nameWithType: HttpPostAttribute.HttpPostAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.HttpPostAttribute.HttpPostAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.HttpPostAttribute
    commentId: M:Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String)
  es.efor.Auth.Identity.Models.Api:
    name:
      CSharp:
      - name: es.efor.Auth.Identity.Models.Api
        nameWithType: es.efor.Auth.Identity.Models.Api
        qualifiedName: es.efor.Auth.Identity.Models.Api
      VB:
      - name: es.efor.Auth.Identity.Models.Api
        nameWithType: es.efor.Auth.Identity.Models.Api
        qualifiedName: es.efor.Auth.Identity.Models.Api
    isDefinition: true
    commentId: N:es.efor.Auth.Identity.Models.Api
  es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse:
    name:
      CSharp:
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
        name: JsonWebTokenResponse
        nameWithType: JsonWebTokenResponse
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
      VB:
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
        name: JsonWebTokenResponse
        nameWithType: JsonWebTokenResponse
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
    isDefinition: true
    parent: es.efor.Auth.Identity.Models.Api
    commentId: T:es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
  Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute
        name: ProducesErrorResponseTypeAttribute
        nameWithType: ProducesErrorResponseTypeAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute
        name: ProducesErrorResponseTypeAttribute
        nameWithType: ProducesErrorResponseTypeAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc
    commentId: T:Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute
  Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.#ctor(System.Type):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.#ctor(System.Type)
        name: ProducesErrorResponseTypeAttribute
        nameWithType: ProducesErrorResponseTypeAttribute.ProducesErrorResponseTypeAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.ProducesErrorResponseTypeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.#ctor(System.Type)
        name: ProducesErrorResponseTypeAttribute
        nameWithType: ProducesErrorResponseTypeAttribute.ProducesErrorResponseTypeAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.ProducesErrorResponseTypeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute
    commentId: M:Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.#ctor(System.Type)
  Microsoft.AspNetCore.Mvc.BadRequestResult:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.BadRequestResult
        name: BadRequestResult
        nameWithType: BadRequestResult
        qualifiedName: Microsoft.AspNetCore.Mvc.BadRequestResult
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.BadRequestResult
        name: BadRequestResult
        nameWithType: BadRequestResult
        qualifiedName: Microsoft.AspNetCore.Mvc.BadRequestResult
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc
    commentId: T:Microsoft.AspNetCore.Mvc.BadRequestResult
  es.efor.Auth.Controllers.AccountSimpleController.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest):
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
        name: LoginAsync
        nameWithType: AccountSimpleController.LoginAsync
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
        name: AccountLoginRequest
        nameWithType: AccountLoginRequest
        qualifiedName: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
        name: LoginAsync
        nameWithType: AccountSimpleController.LoginAsync
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
        name: AccountLoginRequest
        nameWithType: AccountLoginRequest
        qualifiedName: es.efor.Utilities.Web.Models.Identity.AccountLoginRequest
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: es.efor.Auth.Controllers.AccountSimpleController
    commentId: M:es.efor.Auth.Controllers.AccountSimpleController.LoginAsync(es.efor.Utilities.Web.Models.Identity.AccountLoginRequest)
  es.efor.Auth.Controllers.AccountIdentityController`2.LoginAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountIdentityController`2.LoginAsync*
        name: LoginAsync
        nameWithType: AccountIdentityController<TUser, TUSerKey>.LoginAsync
        qualifiedName: es.efor.Auth.Controllers.AccountIdentityController<TUser, TUSerKey>.LoginAsync
      VB:
      - id: es.efor.Auth.Controllers.AccountIdentityController`2.LoginAsync*
        name: LoginAsync
        nameWithType: AccountIdentityController(Of TUser, TUSerKey).LoginAsync
        qualifiedName: es.efor.Auth.Controllers.AccountIdentityController(Of TUser, TUSerKey).LoginAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccountIdentityController`2.LoginAsync
  Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
        name: ProducesResponseTypeAttribute
        nameWithType: ProducesResponseTypeAttribute.ProducesResponseTypeAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.ProducesResponseTypeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
        name: ProducesResponseTypeAttribute
        nameWithType: ProducesResponseTypeAttribute.ProducesResponseTypeAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.ProducesResponseTypeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute
    commentId: M:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)
  es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync
        name: LogoutAsync
        nameWithType: AccountSimpleController.LogoutAsync
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync
        name: LogoutAsync
        nameWithType: AccountSimpleController.LogoutAsync
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: es.efor.Auth.Controllers.AccountSimpleController
    commentId: M:es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync
  es.efor.Auth.Controllers.AccountIdentityController`2.LogoutAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountIdentityController`2.LogoutAsync*
        name: LogoutAsync
        nameWithType: AccountIdentityController<TUser, TUSerKey>.LogoutAsync
        qualifiedName: es.efor.Auth.Controllers.AccountIdentityController<TUser, TUSerKey>.LogoutAsync
      VB:
      - id: es.efor.Auth.Controllers.AccountIdentityController`2.LogoutAsync*
        name: LogoutAsync
        nameWithType: AccountIdentityController(Of TUser, TUSerKey).LogoutAsync
        qualifiedName: es.efor.Auth.Controllers.AccountIdentityController(Of TUser, TUSerKey).LogoutAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccountIdentityController`2.LogoutAsync
  es.efor.Auth.Controllers.AccountIdentityController`2:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountIdentityController`2
        name: AccountIdentityController
        nameWithType: AccountIdentityController
        qualifiedName: es.efor.Auth.Controllers.AccountIdentityController
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUSerKey
        nameWithType: TUSerKey
        qualifiedName: TUSerKey
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Auth.Controllers.AccountIdentityController`2
        name: AccountIdentityController
        nameWithType: AccountIdentityController
        qualifiedName: es.efor.Auth.Controllers.AccountIdentityController
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUSerKey
        nameWithType: TUSerKey
        qualifiedName: TUSerKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:es.efor.Auth.Controllers.AccountIdentityController`2
  es.efor.Auth.Controllers.AccountSimpleController.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.#ctor*
        name: AccountSimpleController
        nameWithType: AccountSimpleController.AccountSimpleController
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.AccountSimpleController
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.#ctor*
        name: AccountSimpleController
        nameWithType: AccountSimpleController.AccountSimpleController
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.AccountSimpleController
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccountSimpleController.#ctor
  es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync*
        name: JwtTokenAsync
        nameWithType: AccountSimpleController.JwtTokenAsync
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync*
        name: JwtTokenAsync
        nameWithType: AccountSimpleController.JwtTokenAsync
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccountSimpleController.JwtTokenAsync
  es.efor.Auth.Controllers.AccountSimpleController.LoginAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync*
        name: LoginAsync
        nameWithType: AccountSimpleController.LoginAsync
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync*
        name: LoginAsync
        nameWithType: AccountSimpleController.LoginAsync
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.LoginAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccountSimpleController.LoginAsync
  es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync*
        name: LogoutAsync
        nameWithType: AccountSimpleController.LogoutAsync
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync*
        name: LogoutAsync
        nameWithType: AccountSimpleController.LogoutAsync
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccountSimpleController.LogoutAsync
  es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile*
        name: GetMyProfile
        nameWithType: AccountSimpleController.GetMyProfile
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile*
        name: GetMyProfile
        nameWithType: AccountSimpleController.GetMyProfile
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccountSimpleController.GetMyProfile
  es.efor.Utilities.Web.Models.Identity.AuthenticationState:
    name:
      CSharp:
      - id: es.efor.Utilities.Web.Models.Identity.AuthenticationState
        name: AuthenticationState
        nameWithType: AuthenticationState
        qualifiedName: es.efor.Utilities.Web.Models.Identity.AuthenticationState
      VB:
      - id: es.efor.Utilities.Web.Models.Identity.AuthenticationState
        name: AuthenticationState
        nameWithType: AuthenticationState
        qualifiedName: es.efor.Utilities.Web.Models.Identity.AuthenticationState
    isDefinition: true
    parent: es.efor.Utilities.Web.Models.Identity
    commentId: T:es.efor.Utilities.Web.Models.Identity.AuthenticationState
  es.efor.Auth.Controllers.AccountSimpleController.GetPolicies*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.GetPolicies*
        name: GetPolicies
        nameWithType: AccountSimpleController.GetPolicies
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.GetPolicies
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.GetPolicies*
        name: GetPolicies
        nameWithType: AccountSimpleController.GetPolicies
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.GetPolicies
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccountSimpleController.GetPolicies
  ? System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}}}
  : name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}}}
  es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName*
        name: GetProjectAuthClaimsByPolicyEnumName
        nameWithType: AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName*
        name: GetProjectAuthClaimsByPolicyEnumName
        nameWithType: AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccountSimpleController.GetProjectAuthClaimsByPolicyEnumName
  Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute
        name: ApiExplorerSettingsAttribute
        nameWithType: ApiExplorerSettingsAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute
        name: ApiExplorerSettingsAttribute
        nameWithType: ApiExplorerSettingsAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc
    commentId: T:Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute
  Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute.#ctor:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute.#ctor
        name: ApiExplorerSettingsAttribute
        nameWithType: ApiExplorerSettingsAttribute.ApiExplorerSettingsAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute.ApiExplorerSettingsAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute.#ctor
        name: ApiExplorerSettingsAttribute
        nameWithType: ApiExplorerSettingsAttribute.ApiExplorerSettingsAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute.ApiExplorerSettingsAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute
    commentId: M:Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute.#ctor
  Microsoft.AspNetCore.Mvc.NonActionAttribute:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.NonActionAttribute
        name: NonActionAttribute
        nameWithType: NonActionAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.NonActionAttribute
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Mvc.NonActionAttribute
        name: NonActionAttribute
        nameWithType: NonActionAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.NonActionAttribute
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc
    commentId: T:Microsoft.AspNetCore.Mvc.NonActionAttribute
  Microsoft.AspNetCore.Mvc.NonActionAttribute.#ctor:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Mvc.NonActionAttribute.#ctor
        name: NonActionAttribute
        nameWithType: NonActionAttribute.NonActionAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.NonActionAttribute.NonActionAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Mvc.NonActionAttribute.#ctor
        name: NonActionAttribute
        nameWithType: NonActionAttribute.NonActionAttribute
        qualifiedName: Microsoft.AspNetCore.Mvc.NonActionAttribute.NonActionAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNetCore.Mvc.NonActionAttribute
    commentId: M:Microsoft.AspNetCore.Mvc.NonActionAttribute.#ctor
  System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.SignInResult}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Identity.SignInResult
        name: SignInResult
        nameWithType: SignInResult
        qualifiedName: Microsoft.AspNetCore.Identity.SignInResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Identity.SignInResult
        name: SignInResult
        nameWithType: SignInResult
        qualifiedName: Microsoft.AspNetCore.Identity.SignInResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.SignInResult}
  es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword*:
    name:
      CSharp:
      - id: es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword*
        name: CheckUserPassword
        nameWithType: AccountSimpleController.CheckUserPassword
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword
      VB:
      - id: es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword*
        name: CheckUserPassword
        nameWithType: AccountSimpleController.CheckUserPassword
        qualifiedName: es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword
    isDefinition: true
    commentId: Overload:es.efor.Auth.Controllers.AccountSimpleController.CheckUserPassword
  Microsoft.AspNetCore.Builder:
    name:
      CSharp:
      - name: Microsoft.AspNetCore.Builder
        nameWithType: Microsoft.AspNetCore.Builder
        qualifiedName: Microsoft.AspNetCore.Builder
        isExternal: true
      VB:
      - name: Microsoft.AspNetCore.Builder
        nameWithType: Microsoft.AspNetCore.Builder
        qualifiedName: Microsoft.AspNetCore.Builder
    isDefinition: true
    commentId: N:Microsoft.AspNetCore.Builder
  Microsoft.AspNetCore.Builder.IApplicationBuilder:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Builder.IApplicationBuilder
        name: IApplicationBuilder
        nameWithType: IApplicationBuilder
        qualifiedName: Microsoft.AspNetCore.Builder.IApplicationBuilder
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Builder.IApplicationBuilder
        name: IApplicationBuilder
        nameWithType: IApplicationBuilder
        qualifiedName: Microsoft.AspNetCore.Builder.IApplicationBuilder
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Builder
    commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforSimpleAuthentication*:
    name:
      CSharp:
      - id: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforSimpleAuthentication*
        name: UseEforSimpleAuthentication
        nameWithType: IApplicationBuilderExtensions.UseEforSimpleAuthentication
        qualifiedName: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforSimpleAuthentication
      VB:
      - id: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforSimpleAuthentication*
        name: UseEforSimpleAuthentication
        nameWithType: IApplicationBuilderExtensions.UseEforSimpleAuthentication
        qualifiedName: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforSimpleAuthentication
    isDefinition: true
    commentId: Overload:es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforSimpleAuthentication
  es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforIdentityAuthentication*:
    name:
      CSharp:
      - id: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforIdentityAuthentication*
        name: UseEforIdentityAuthentication
        nameWithType: IApplicationBuilderExtensions.UseEforIdentityAuthentication
        qualifiedName: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforIdentityAuthentication
      VB:
      - id: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforIdentityAuthentication*
        name: UseEforIdentityAuthentication
        nameWithType: IApplicationBuilderExtensions.UseEforIdentityAuthentication
        qualifiedName: es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforIdentityAuthentication
    isDefinition: true
    commentId: Overload:es.efor.Auth.Extensions.IApplicationBuilderExtensions.UseEforIdentityAuthentication
  es.efor.Auth.Extensions.IApplicationBuilderExtensions:
    name:
      CSharp:
      - id: es.efor.Auth.Extensions.IApplicationBuilderExtensions
        name: IApplicationBuilderExtensions
        nameWithType: IApplicationBuilderExtensions
        qualifiedName: es.efor.Auth.Extensions.IApplicationBuilderExtensions
      VB:
      - id: es.efor.Auth.Extensions.IApplicationBuilderExtensions
        name: IApplicationBuilderExtensions
        nameWithType: IApplicationBuilderExtensions
        qualifiedName: es.efor.Auth.Extensions.IApplicationBuilderExtensions
    isDefinition: true
    commentId: T:es.efor.Auth.Extensions.IApplicationBuilderExtensions
  Microsoft.Extensions.DependencyInjection:
    name:
      CSharp:
      - name: Microsoft.Extensions.DependencyInjection
        nameWithType: Microsoft.Extensions.DependencyInjection
        qualifiedName: Microsoft.Extensions.DependencyInjection
        isExternal: true
      VB:
      - name: Microsoft.Extensions.DependencyInjection
        nameWithType: Microsoft.Extensions.DependencyInjection
        qualifiedName: Microsoft.Extensions.DependencyInjection
    isDefinition: true
    commentId: N:Microsoft.Extensions.DependencyInjection
  Microsoft.Extensions.DependencyInjection.IServiceCollection:
    name:
      CSharp:
      - id: Microsoft.Extensions.DependencyInjection.IServiceCollection
        name: IServiceCollection
        nameWithType: IServiceCollection
        qualifiedName: Microsoft.Extensions.DependencyInjection.IServiceCollection
        isExternal: true
      VB:
      - id: Microsoft.Extensions.DependencyInjection.IServiceCollection
        name: IServiceCollection
        nameWithType: IServiceCollection
        qualifiedName: Microsoft.Extensions.DependencyInjection.IServiceCollection
        isExternal: true
    isDefinition: true
    parent: Microsoft.Extensions.DependencyInjection
    commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  es.efor.Auth.Models.Configs:
    name:
      CSharp:
      - name: es.efor.Auth.Models.Configs
        nameWithType: es.efor.Auth.Models.Configs
        qualifiedName: es.efor.Auth.Models.Configs
      VB:
      - name: es.efor.Auth.Models.Configs
        nameWithType: es.efor.Auth.Models.Configs
        qualifiedName: es.efor.Auth.Models.Configs
    isDefinition: true
    commentId: N:es.efor.Auth.Models.Configs
  es.efor.Auth.Models.Configs.IdentityConfiguration:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.IdentityConfiguration
        name: IdentityConfiguration
        nameWithType: IdentityConfiguration
        qualifiedName: es.efor.Auth.Models.Configs.IdentityConfiguration
      VB:
      - id: es.efor.Auth.Models.Configs.IdentityConfiguration
        name: IdentityConfiguration
        nameWithType: IdentityConfiguration
        qualifiedName: es.efor.Auth.Models.Configs.IdentityConfiguration
    isDefinition: true
    parent: es.efor.Auth.Models.Configs
    commentId: T:es.efor.Auth.Models.Configs.IdentityConfiguration
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}}
  System.Collections.Generic.IEnumerable`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerable`1
  System.Collections.Generic.IEnumerable{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{System.String}
  es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforSimpleAuthentication*:
    name:
      CSharp:
      - id: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforSimpleAuthentication*
        name: AddEforSimpleAuthentication
        nameWithType: IServiceCollectionExtensions.AddEforSimpleAuthentication
        qualifiedName: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforSimpleAuthentication
      VB:
      - id: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforSimpleAuthentication*
        name: AddEforSimpleAuthentication
        nameWithType: IServiceCollectionExtensions.AddEforSimpleAuthentication
        qualifiedName: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforSimpleAuthentication
    isDefinition: true
    commentId: Overload:es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforSimpleAuthentication
  Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`3:
    commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityDbContext`3
  Microsoft.AspNetCore.Identity.IdentityUser`1.Id:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.Id
        name: Id
        nameWithType: IdentityUser<TKey>.Id
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.Id
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.Id
        name: Id
        nameWithType: IdentityUser(Of TKey).Id
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).Id
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.Id
  Microsoft.AspNetCore.Identity.IdentityUser`1:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNetCore.Identity.IdentityUser`1
  Microsoft.AspNetCore.Identity.IdentityRole`1:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1
        name: IdentityRole
        nameWithType: IdentityRole
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1
        name: IdentityRole
        nameWithType: IdentityRole
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNetCore.Identity.IdentityRole`1
  Microsoft.AspNetCore.Identity.RoleManager`1:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1
        name: RoleManager
        nameWithType: RoleManager
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1
        name: RoleManager
        nameWithType: RoleManager
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNetCore.Identity.RoleManager`1
  es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforIdentityAuthentication*:
    name:
      CSharp:
      - id: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforIdentityAuthentication*
        name: AddEforIdentityAuthentication
        nameWithType: IServiceCollectionExtensions.AddEforIdentityAuthentication
        qualifiedName: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforIdentityAuthentication
      VB:
      - id: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforIdentityAuthentication*
        name: AddEforIdentityAuthentication
        nameWithType: IServiceCollectionExtensions.AddEforIdentityAuthentication
        qualifiedName: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforIdentityAuthentication
    isDefinition: true
    commentId: Overload:es.efor.Auth.Extensions.IServiceCollectionExtensions.AddEforIdentityAuthentication
  System.Security.Claims.Claim:
    name:
      CSharp:
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      VB:
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
    isDefinition: true
    parent: System.Security.Claims
    commentId: T:System.Security.Claims.Claim
  es.efor.Auth.Extensions.IServiceCollectionExtensions.AddAppAuthorizationPolicies*:
    name:
      CSharp:
      - id: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddAppAuthorizationPolicies*
        name: AddAppAuthorizationPolicies
        nameWithType: IServiceCollectionExtensions.AddAppAuthorizationPolicies
        qualifiedName: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddAppAuthorizationPolicies
      VB:
      - id: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddAppAuthorizationPolicies*
        name: AddAppAuthorizationPolicies
        nameWithType: IServiceCollectionExtensions.AddAppAuthorizationPolicies
        qualifiedName: es.efor.Auth.Extensions.IServiceCollectionExtensions.AddAppAuthorizationPolicies
    isDefinition: true
    commentId: Overload:es.efor.Auth.Extensions.IServiceCollectionExtensions.AddAppAuthorizationPolicies
  es.efor.Auth.Extensions.IServiceCollectionExtensions:
    name:
      CSharp:
      - id: es.efor.Auth.Extensions.IServiceCollectionExtensions
        name: IServiceCollectionExtensions
        nameWithType: IServiceCollectionExtensions
        qualifiedName: es.efor.Auth.Extensions.IServiceCollectionExtensions
      VB:
      - id: es.efor.Auth.Extensions.IServiceCollectionExtensions
        name: IServiceCollectionExtensions
        nameWithType: IServiceCollectionExtensions
        qualifiedName: es.efor.Auth.Extensions.IServiceCollectionExtensions
    isDefinition: true
    commentId: T:es.efor.Auth.Extensions.IServiceCollectionExtensions
  es.efor.Auth.Extensions:
    name:
      CSharp:
      - name: es.efor.Auth.Extensions
        nameWithType: es.efor.Auth.Extensions
        qualifiedName: es.efor.Auth.Extensions
      VB:
      - name: es.efor.Auth.Extensions
        nameWithType: es.efor.Auth.Extensions
        qualifiedName: es.efor.Auth.Extensions
    isDefinition: true
    commentId: N:es.efor.Auth.Extensions
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1
        name: RoleManager
        nameWithType: RoleManager
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1
        name: RoleManager
        nameWithType: RoleManager
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.RoleManager{`1}
  Microsoft.AspNetCore.Identity.RoleManager`1.RoleExistsAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.RoleExistsAsync(System.String)
        name: RoleExistsAsync
        nameWithType: RoleManager<TRole>.RoleExistsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.RoleExistsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.RoleExistsAsync(System.String)
        name: RoleExistsAsync
        nameWithType: RoleManager(Of TRole).RoleExistsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).RoleExistsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.RoleExistsAsync(System.String)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.RoleExistsAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.RoleExistsAsync(System.String)
        name: RoleExistsAsync
        nameWithType: RoleManager<TRole>.RoleExistsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.RoleExistsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.RoleExistsAsync(System.String)
        name: RoleExistsAsync
        nameWithType: RoleManager(Of TRole).RoleExistsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).RoleExistsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.RoleExistsAsync(System.String)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.RoleExistsAsync(System.String)
  Microsoft.AspNetCore.Identity.RoleManager`1.NormalizeKey(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.NormalizeKey(System.String)
        name: NormalizeKey
        nameWithType: RoleManager<TRole>.NormalizeKey
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.NormalizeKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.NormalizeKey(System.String)
        name: NormalizeKey
        nameWithType: RoleManager(Of TRole).NormalizeKey
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).NormalizeKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.NormalizeKey(System.String)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.NormalizeKey(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.NormalizeKey(System.String)
        name: NormalizeKey
        nameWithType: RoleManager<TRole>.NormalizeKey
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.NormalizeKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.NormalizeKey(System.String)
        name: NormalizeKey
        nameWithType: RoleManager(Of TRole).NormalizeKey
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).NormalizeKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.NormalizeKey(System.String)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.NormalizeKey(System.String)
  Microsoft.AspNetCore.Identity.RoleManager`1.FindByIdAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.FindByIdAsync(System.String)
        name: FindByIdAsync
        nameWithType: RoleManager<TRole>.FindByIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.FindByIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.FindByIdAsync(System.String)
        name: FindByIdAsync
        nameWithType: RoleManager(Of TRole).FindByIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).FindByIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.FindByIdAsync(System.String)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.FindByIdAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.FindByIdAsync(System.String)
        name: FindByIdAsync
        nameWithType: RoleManager<TRole>.FindByIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.FindByIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.FindByIdAsync(System.String)
        name: FindByIdAsync
        nameWithType: RoleManager(Of TRole).FindByIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).FindByIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.FindByIdAsync(System.String)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.FindByIdAsync(System.String)
  Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleNameAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleNameAsync(`0)
        name: GetRoleNameAsync
        nameWithType: RoleManager<TRole>.GetRoleNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.GetRoleNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleNameAsync(`0)
        name: GetRoleNameAsync
        nameWithType: RoleManager(Of TRole).GetRoleNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).GetRoleNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleNameAsync(`0)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.GetRoleNameAsync({TRole}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleNameAsync(`0)
        name: GetRoleNameAsync
        nameWithType: RoleManager<TRole>.GetRoleNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.GetRoleNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleNameAsync(`0)
        name: GetRoleNameAsync
        nameWithType: RoleManager(Of TRole).GetRoleNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).GetRoleNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleNameAsync(`0)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.GetRoleNameAsync(`1)
  Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleIdAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleIdAsync(`0)
        name: GetRoleIdAsync
        nameWithType: RoleManager<TRole>.GetRoleIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.GetRoleIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleIdAsync(`0)
        name: GetRoleIdAsync
        nameWithType: RoleManager(Of TRole).GetRoleIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).GetRoleIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleIdAsync(`0)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.GetRoleIdAsync({TRole}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleIdAsync(`0)
        name: GetRoleIdAsync
        nameWithType: RoleManager<TRole>.GetRoleIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.GetRoleIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleIdAsync(`0)
        name: GetRoleIdAsync
        nameWithType: RoleManager(Of TRole).GetRoleIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).GetRoleIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.GetRoleIdAsync(`0)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.GetRoleIdAsync(`1)
  Microsoft.AspNetCore.Identity.RoleManager`1.FindByNameAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.FindByNameAsync(System.String)
        name: FindByNameAsync
        nameWithType: RoleManager<TRole>.FindByNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.FindByNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.FindByNameAsync(System.String)
        name: FindByNameAsync
        nameWithType: RoleManager(Of TRole).FindByNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).FindByNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.FindByNameAsync(System.String)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.FindByNameAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.FindByNameAsync(System.String)
        name: FindByNameAsync
        nameWithType: RoleManager<TRole>.FindByNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.FindByNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.FindByNameAsync(System.String)
        name: FindByNameAsync
        nameWithType: RoleManager(Of TRole).FindByNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).FindByNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.FindByNameAsync(System.String)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.FindByNameAsync(System.String)
  Microsoft.AspNetCore.Identity.RoleManager`1.GetClaimsAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.GetClaimsAsync(`0)
        name: GetClaimsAsync
        nameWithType: RoleManager<TRole>.GetClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.GetClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.GetClaimsAsync(`0)
        name: GetClaimsAsync
        nameWithType: RoleManager(Of TRole).GetClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).GetClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.GetClaimsAsync(`0)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.GetClaimsAsync({TRole}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.GetClaimsAsync(`0)
        name: GetClaimsAsync
        nameWithType: RoleManager<TRole>.GetClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.GetClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.GetClaimsAsync(`0)
        name: GetClaimsAsync
        nameWithType: RoleManager(Of TRole).GetClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).GetClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.GetClaimsAsync(`0)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.GetClaimsAsync(`1)
  Microsoft.AspNetCore.Identity.RoleManager`1.Dispose:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Dispose
        name: Dispose
        nameWithType: RoleManager<TRole>.Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Dispose
        name: Dispose
        nameWithType: RoleManager(Of TRole).Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.Dispose
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.Dispose:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Dispose
        name: Dispose
        nameWithType: RoleManager<TRole>.Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Dispose
        name: Dispose
        nameWithType: RoleManager(Of TRole).Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.Dispose
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.Dispose
  Microsoft.AspNetCore.Identity.RoleManager`1.Dispose(System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Dispose(System.Boolean)
        name: Dispose
        nameWithType: RoleManager<TRole>.Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Dispose(System.Boolean)
        name: Dispose
        nameWithType: RoleManager(Of TRole).Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.Dispose(System.Boolean)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.Dispose(System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Dispose(System.Boolean)
        name: Dispose
        nameWithType: RoleManager<TRole>.Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Dispose(System.Boolean)
        name: Dispose
        nameWithType: RoleManager(Of TRole).Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.Dispose(System.Boolean)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.Dispose(System.Boolean)
  Microsoft.AspNetCore.Identity.RoleManager`1.ValidateRoleAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.ValidateRoleAsync(`0)
        name: ValidateRoleAsync
        nameWithType: RoleManager<TRole>.ValidateRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.ValidateRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.ValidateRoleAsync(`0)
        name: ValidateRoleAsync
        nameWithType: RoleManager(Of TRole).ValidateRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).ValidateRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.ValidateRoleAsync(`0)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.ValidateRoleAsync({TRole}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.ValidateRoleAsync(`0)
        name: ValidateRoleAsync
        nameWithType: RoleManager<TRole>.ValidateRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.ValidateRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.ValidateRoleAsync(`0)
        name: ValidateRoleAsync
        nameWithType: RoleManager(Of TRole).ValidateRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).ValidateRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.ValidateRoleAsync(`0)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.ValidateRoleAsync(`1)
  Microsoft.AspNetCore.Identity.RoleManager`1.UpdateRoleAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateRoleAsync(`0)
        name: UpdateRoleAsync
        nameWithType: RoleManager<TRole>.UpdateRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.UpdateRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateRoleAsync(`0)
        name: UpdateRoleAsync
        nameWithType: RoleManager(Of TRole).UpdateRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).UpdateRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.UpdateRoleAsync(`0)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.UpdateRoleAsync({TRole}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateRoleAsync(`0)
        name: UpdateRoleAsync
        nameWithType: RoleManager<TRole>.UpdateRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.UpdateRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateRoleAsync(`0)
        name: UpdateRoleAsync
        nameWithType: RoleManager(Of TRole).UpdateRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).UpdateRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateRoleAsync(`0)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.UpdateRoleAsync(`1)
  Microsoft.AspNetCore.Identity.RoleManager`1.ThrowIfDisposed:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.ThrowIfDisposed
        name: ThrowIfDisposed
        nameWithType: RoleManager<TRole>.ThrowIfDisposed
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.ThrowIfDisposed
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.ThrowIfDisposed
        name: ThrowIfDisposed
        nameWithType: RoleManager(Of TRole).ThrowIfDisposed
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).ThrowIfDisposed
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.ThrowIfDisposed
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.ThrowIfDisposed:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.ThrowIfDisposed
        name: ThrowIfDisposed
        nameWithType: RoleManager<TRole>.ThrowIfDisposed
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.ThrowIfDisposed
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.ThrowIfDisposed
        name: ThrowIfDisposed
        nameWithType: RoleManager(Of TRole).ThrowIfDisposed
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).ThrowIfDisposed
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.ThrowIfDisposed
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.ThrowIfDisposed
  Microsoft.AspNetCore.Identity.RoleManager`1.CancellationToken:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.CancellationToken
        name: CancellationToken
        nameWithType: RoleManager<TRole>.CancellationToken
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.CancellationToken
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.CancellationToken
        name: CancellationToken
        nameWithType: RoleManager(Of TRole).CancellationToken
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).CancellationToken
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager`1.CancellationToken
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.CancellationToken:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.CancellationToken
        name: CancellationToken
        nameWithType: RoleManager<TRole>.CancellationToken
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.CancellationToken
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.CancellationToken
        name: CancellationToken
        nameWithType: RoleManager(Of TRole).CancellationToken
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).CancellationToken
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.CancellationToken
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager{`1}.CancellationToken
  Microsoft.AspNetCore.Identity.RoleManager`1.Store:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Store
        name: Store
        nameWithType: RoleManager<TRole>.Store
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.Store
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Store
        name: Store
        nameWithType: RoleManager(Of TRole).Store
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).Store
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager`1.Store
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.Store:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Store
        name: Store
        nameWithType: RoleManager<TRole>.Store
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.Store
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Store
        name: Store
        nameWithType: RoleManager(Of TRole).Store
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).Store
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.Store
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager{`1}.Store
  Microsoft.AspNetCore.Identity.RoleManager`1.Logger:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Logger
        name: Logger
        nameWithType: RoleManager<TRole>.Logger
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.Logger
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Logger
        name: Logger
        nameWithType: RoleManager(Of TRole).Logger
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).Logger
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager`1.Logger
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.Logger:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Logger
        name: Logger
        nameWithType: RoleManager<TRole>.Logger
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.Logger
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Logger
        name: Logger
        nameWithType: RoleManager(Of TRole).Logger
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).Logger
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.Logger
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager{`1}.Logger
  Microsoft.AspNetCore.Identity.RoleManager`1.RoleValidators:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.RoleValidators
        name: RoleValidators
        nameWithType: RoleManager<TRole>.RoleValidators
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.RoleValidators
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.RoleValidators
        name: RoleValidators
        nameWithType: RoleManager(Of TRole).RoleValidators
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).RoleValidators
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager`1.RoleValidators
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.RoleValidators:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.RoleValidators
        name: RoleValidators
        nameWithType: RoleManager<TRole>.RoleValidators
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.RoleValidators
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.RoleValidators
        name: RoleValidators
        nameWithType: RoleManager(Of TRole).RoleValidators
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).RoleValidators
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.RoleValidators
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager{`1}.RoleValidators
  Microsoft.AspNetCore.Identity.RoleManager`1.ErrorDescriber:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.ErrorDescriber
        name: ErrorDescriber
        nameWithType: RoleManager<TRole>.ErrorDescriber
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.ErrorDescriber
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.ErrorDescriber
        name: ErrorDescriber
        nameWithType: RoleManager(Of TRole).ErrorDescriber
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).ErrorDescriber
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager`1.ErrorDescriber
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.ErrorDescriber:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.ErrorDescriber
        name: ErrorDescriber
        nameWithType: RoleManager<TRole>.ErrorDescriber
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.ErrorDescriber
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.ErrorDescriber
        name: ErrorDescriber
        nameWithType: RoleManager(Of TRole).ErrorDescriber
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).ErrorDescriber
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.ErrorDescriber
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager{`1}.ErrorDescriber
  Microsoft.AspNetCore.Identity.RoleManager`1.KeyNormalizer:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.KeyNormalizer
        name: KeyNormalizer
        nameWithType: RoleManager<TRole>.KeyNormalizer
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.KeyNormalizer
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.KeyNormalizer
        name: KeyNormalizer
        nameWithType: RoleManager(Of TRole).KeyNormalizer
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).KeyNormalizer
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager`1.KeyNormalizer
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.KeyNormalizer:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.KeyNormalizer
        name: KeyNormalizer
        nameWithType: RoleManager<TRole>.KeyNormalizer
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.KeyNormalizer
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.KeyNormalizer
        name: KeyNormalizer
        nameWithType: RoleManager(Of TRole).KeyNormalizer
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).KeyNormalizer
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.KeyNormalizer
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager{`1}.KeyNormalizer
  Microsoft.AspNetCore.Identity.RoleManager`1.Roles:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Roles
        name: Roles
        nameWithType: RoleManager<TRole>.Roles
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.Roles
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Roles
        name: Roles
        nameWithType: RoleManager(Of TRole).Roles
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).Roles
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager`1.Roles
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.Roles:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Roles
        name: Roles
        nameWithType: RoleManager<TRole>.Roles
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.Roles
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.Roles
        name: Roles
        nameWithType: RoleManager(Of TRole).Roles
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).Roles
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.Roles
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager{`1}.Roles
  Microsoft.AspNetCore.Identity.RoleManager`1.SupportsQueryableRoles:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.SupportsQueryableRoles
        name: SupportsQueryableRoles
        nameWithType: RoleManager<TRole>.SupportsQueryableRoles
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.SupportsQueryableRoles
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.SupportsQueryableRoles
        name: SupportsQueryableRoles
        nameWithType: RoleManager(Of TRole).SupportsQueryableRoles
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).SupportsQueryableRoles
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager`1.SupportsQueryableRoles
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.SupportsQueryableRoles:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.SupportsQueryableRoles
        name: SupportsQueryableRoles
        nameWithType: RoleManager<TRole>.SupportsQueryableRoles
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.SupportsQueryableRoles
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.SupportsQueryableRoles
        name: SupportsQueryableRoles
        nameWithType: RoleManager(Of TRole).SupportsQueryableRoles
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).SupportsQueryableRoles
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.SupportsQueryableRoles
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager{`1}.SupportsQueryableRoles
  Microsoft.AspNetCore.Identity.RoleManager`1.SupportsRoleClaims:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.SupportsRoleClaims
        name: SupportsRoleClaims
        nameWithType: RoleManager<TRole>.SupportsRoleClaims
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.SupportsRoleClaims
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.SupportsRoleClaims
        name: SupportsRoleClaims
        nameWithType: RoleManager(Of TRole).SupportsRoleClaims
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).SupportsRoleClaims
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager`1.SupportsRoleClaims
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.SupportsRoleClaims:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.SupportsRoleClaims
        name: SupportsRoleClaims
        nameWithType: RoleManager<TRole>.SupportsRoleClaims
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.SupportsRoleClaims
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.SupportsRoleClaims
        name: SupportsRoleClaims
        nameWithType: RoleManager(Of TRole).SupportsRoleClaims
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).SupportsRoleClaims
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.SupportsRoleClaims
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: P:Microsoft.AspNetCore.Identity.RoleManager{`1}.SupportsRoleClaims
  System.IDisposable:
    name:
      CSharp:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
      VB:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.IDisposable
  Microsoft.AspNetCore.Identity.IRoleStore`1:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IRoleStore`1
        name: IRoleStore
        nameWithType: IRoleStore
        qualifiedName: Microsoft.AspNetCore.Identity.IRoleStore
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IRoleStore`1
        name: IRoleStore
        nameWithType: IRoleStore
        qualifiedName: Microsoft.AspNetCore.Identity.IRoleStore
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNetCore.Identity.IRoleStore`1
  Microsoft.AspNetCore.Identity.IRoleStore{{TRole}}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IRoleStore`1
        name: IRoleStore
        nameWithType: IRoleStore
        qualifiedName: Microsoft.AspNetCore.Identity.IRoleStore
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IRoleStore`1
        name: IRoleStore
        nameWithType: IRoleStore
        qualifiedName: Microsoft.AspNetCore.Identity.IRoleStore
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IRoleStore`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.IRoleStore{`1}
  System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IRoleValidator{{TRole}}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Identity.IRoleValidator`1
        name: IRoleValidator
        nameWithType: IRoleValidator
        qualifiedName: Microsoft.AspNetCore.Identity.IRoleValidator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Identity.IRoleValidator`1
        name: IRoleValidator
        nameWithType: IRoleValidator
        qualifiedName: Microsoft.AspNetCore.Identity.IRoleValidator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IRoleValidator{`1}}
  Microsoft.AspNetCore.Identity.ILookupNormalizer:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.ILookupNormalizer
        name: ILookupNormalizer
        nameWithType: ILookupNormalizer
        qualifiedName: Microsoft.AspNetCore.Identity.ILookupNormalizer
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.ILookupNormalizer
        name: ILookupNormalizer
        nameWithType: ILookupNormalizer
        qualifiedName: Microsoft.AspNetCore.Identity.ILookupNormalizer
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.ILookupNormalizer
  Microsoft.AspNetCore.Identity.IdentityErrorDescriber:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
        name: IdentityErrorDescriber
        nameWithType: IdentityErrorDescriber
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
        name: IdentityErrorDescriber
        nameWithType: IdentityErrorDescriber
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  Microsoft.Extensions.Logging.ILogger`1:
    name:
      CSharp:
      - id: Microsoft.Extensions.Logging.ILogger`1
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Extensions.Logging.ILogger
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TCategoryName
        nameWithType: TCategoryName
        qualifiedName: TCategoryName
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.Extensions.Logging.ILogger`1
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Extensions.Logging.ILogger
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TCategoryName
        nameWithType: TCategoryName
        qualifiedName: TCategoryName
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.Extensions.Logging.ILogger`1
  Microsoft.Extensions.Logging:
    name:
      CSharp:
      - name: Microsoft.Extensions.Logging
        nameWithType: Microsoft.Extensions.Logging
        qualifiedName: Microsoft.Extensions.Logging
        isExternal: true
      VB:
      - name: Microsoft.Extensions.Logging
        nameWithType: Microsoft.Extensions.Logging
        qualifiedName: Microsoft.Extensions.Logging
    isDefinition: true
    commentId: N:Microsoft.Extensions.Logging
  Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.RoleManager{{TRole}}}:
    name:
      CSharp:
      - id: Microsoft.Extensions.Logging.ILogger`1
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Extensions.Logging.ILogger
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Identity.RoleManager`1
        name: RoleManager
        nameWithType: RoleManager
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.Extensions.Logging.ILogger`1
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Extensions.Logging.ILogger
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Identity.RoleManager`1
        name: RoleManager
        nameWithType: RoleManager
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Extensions.Logging.ILogger`1
    parent: Microsoft.Extensions.Logging
    commentId: T:Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.RoleManager{`1}}
  es.efor.Auth.Managers.IdentityRoleManager`2.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.#ctor*
        name: IdentityRoleManager
        nameWithType: IdentityRoleManager<TRoleId, TRole>.IdentityRoleManager
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.IdentityRoleManager
      VB:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.#ctor*
        name: IdentityRoleManager
        nameWithType: IdentityRoleManager(Of TRoleId, TRole).IdentityRoleManager
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).IdentityRoleManager
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityRoleManager`2.#ctor
  System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TRole}}}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}
  System.Collections.Generic.IEnumerable{{TRoleId}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TRoleId
        nameWithType: TRoleId
        qualifiedName: TRoleId
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TRoleId
        nameWithType: TRoleId
        qualifiedName: TRoleId
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{`0}
  es.efor.Auth.Managers.IdentityRoleManager`2.FindByIdAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.FindByIdAsync*
        name: FindByIdAsync
        nameWithType: IdentityRoleManager<TRoleId, TRole>.FindByIdAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.FindByIdAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.FindByIdAsync*
        name: FindByIdAsync
        nameWithType: IdentityRoleManager(Of TRoleId, TRole).FindByIdAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).FindByIdAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityRoleManager`2.FindByIdAsync
  System.Threading.Tasks.Task{{TRole}}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{`1}
  TRoleId:
    name:
      CSharp:
      - name: TRoleId
        nameWithType: TRoleId
        qualifiedName: TRoleId
      VB:
      - name: TRoleId
        nameWithType: TRoleId
        qualifiedName: TRoleId
    isDefinition: true
  '{TRoleId}':
    name:
      CSharp:
      - name: TRoleId
        nameWithType: TRoleId
        qualifiedName: TRoleId
      VB:
      - name: TRoleId
        nameWithType: TRoleId
        qualifiedName: TRoleId
    isDefinition: false
    definition: TRoleId
    commentId: '!:TRoleId'
  System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{{TRoleId},Microsoft.AspNetCore.Identity.IdentityResult}}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TRoleId
        nameWithType: TRoleId
        qualifiedName: TRoleId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Identity.IdentityResult
        name: IdentityResult
        nameWithType: IdentityResult
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TRoleId
        nameWithType: TRoleId
        qualifiedName: TRoleId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Identity.IdentityResult
        name: IdentityResult
        nameWithType: IdentityResult
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{`0,Microsoft.AspNetCore.Identity.IdentityResult}}
  System.Collections.Generic.IEnumerable{{TRole}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{`1}
  es.efor.Auth.Managers.IdentityRoleManager`2.UpdateAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.UpdateAsync*
        name: UpdateAsync
        nameWithType: IdentityRoleManager<TRoleId, TRole>.UpdateAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.UpdateAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.UpdateAsync*
        name: UpdateAsync
        nameWithType: IdentityRoleManager(Of TRoleId, TRole).UpdateAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).UpdateAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityRoleManager`2.UpdateAsync
  System.Threading.Tasks.Task{System.Collections.Generic.IList{System.Security.Claims.Claim}}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{System.Security.Claims.Claim}}
  es.efor.Auth.Managers.IdentityRoleManager`2.GetClaimsAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.GetClaimsAsync*
        name: GetClaimsAsync
        nameWithType: IdentityRoleManager<TRoleId, TRole>.GetClaimsAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.GetClaimsAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.GetClaimsAsync*
        name: GetClaimsAsync
        nameWithType: IdentityRoleManager(Of TRoleId, TRole).GetClaimsAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).GetClaimsAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityRoleManager`2.GetClaimsAsync
  System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Identity.IdentityResult
        name: IdentityResult
        nameWithType: IdentityResult
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Identity.IdentityResult
        name: IdentityResult
        nameWithType: IdentityResult
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
  TRole:
    name:
      CSharp:
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      VB:
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
    isDefinition: true
  '{TRole}':
    name:
      CSharp:
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      VB:
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
    isDefinition: false
    definition: TRole
    commentId: '!:TRole'
  Microsoft.AspNetCore.Identity.RoleManager`1.CreateAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.CreateAsync(`0)
        name: CreateAsync
        nameWithType: RoleManager<TRole>.CreateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.CreateAsync(`0)
        name: CreateAsync
        nameWithType: RoleManager(Of TRole).CreateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.CreateAsync(`0)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.CreateAsync({TRole}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.CreateAsync(`0)
        name: CreateAsync
        nameWithType: RoleManager<TRole>.CreateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.CreateAsync(`0)
        name: CreateAsync
        nameWithType: RoleManager(Of TRole).CreateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.CreateAsync(`0)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.CreateAsync(`1)
  es.efor.Auth.Managers.IdentityRoleManager`2.CreateAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.CreateAsync*
        name: CreateAsync
        nameWithType: IdentityRoleManager<TRoleId, TRole>.CreateAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.CreateAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.CreateAsync*
        name: CreateAsync
        nameWithType: IdentityRoleManager(Of TRoleId, TRole).CreateAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).CreateAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityRoleManager`2.CreateAsync
  Microsoft.AspNetCore.Identity.RoleManager`1.UpdateAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateAsync(`0)
        name: UpdateAsync
        nameWithType: RoleManager<TRole>.UpdateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.UpdateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateAsync(`0)
        name: UpdateAsync
        nameWithType: RoleManager(Of TRole).UpdateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).UpdateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.UpdateAsync(`0)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.UpdateAsync({TRole}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateAsync(`0)
        name: UpdateAsync
        nameWithType: RoleManager<TRole>.UpdateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.UpdateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateAsync(`0)
        name: UpdateAsync
        nameWithType: RoleManager(Of TRole).UpdateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).UpdateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateAsync(`0)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.UpdateAsync(`1)
  System.Threading.Tasks.Task:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      VB:
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
    isDefinition: true
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task
  Microsoft.AspNetCore.Identity.RoleManager`1.UpdateNormalizedRoleNameAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateNormalizedRoleNameAsync(`0)
        name: UpdateNormalizedRoleNameAsync
        nameWithType: RoleManager<TRole>.UpdateNormalizedRoleNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.UpdateNormalizedRoleNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateNormalizedRoleNameAsync(`0)
        name: UpdateNormalizedRoleNameAsync
        nameWithType: RoleManager(Of TRole).UpdateNormalizedRoleNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).UpdateNormalizedRoleNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.UpdateNormalizedRoleNameAsync(`0)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.UpdateNormalizedRoleNameAsync({TRole}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateNormalizedRoleNameAsync(`0)
        name: UpdateNormalizedRoleNameAsync
        nameWithType: RoleManager<TRole>.UpdateNormalizedRoleNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.UpdateNormalizedRoleNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateNormalizedRoleNameAsync(`0)
        name: UpdateNormalizedRoleNameAsync
        nameWithType: RoleManager(Of TRole).UpdateNormalizedRoleNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).UpdateNormalizedRoleNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.UpdateNormalizedRoleNameAsync(`0)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.UpdateNormalizedRoleNameAsync(`1)
  es.efor.Auth.Managers.IdentityRoleManager`2.UpdateNormalizedRoleNameAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.UpdateNormalizedRoleNameAsync*
        name: UpdateNormalizedRoleNameAsync
        nameWithType: IdentityRoleManager<TRoleId, TRole>.UpdateNormalizedRoleNameAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.UpdateNormalizedRoleNameAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.UpdateNormalizedRoleNameAsync*
        name: UpdateNormalizedRoleNameAsync
        nameWithType: IdentityRoleManager(Of TRoleId, TRole).UpdateNormalizedRoleNameAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).UpdateNormalizedRoleNameAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityRoleManager`2.UpdateNormalizedRoleNameAsync
  System.Security.Claims:
    name:
      CSharp:
      - name: System.Security.Claims
        nameWithType: System.Security.Claims
        qualifiedName: System.Security.Claims
        isExternal: true
      VB:
      - name: System.Security.Claims
        nameWithType: System.Security.Claims
        qualifiedName: System.Security.Claims
    isDefinition: true
    commentId: N:System.Security.Claims
  Microsoft.AspNetCore.Identity.RoleManager`1.AddClaimAsync(`0,System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
        name: AddClaimAsync
        nameWithType: RoleManager<TRole>.AddClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.AddClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
        name: AddClaimAsync
        nameWithType: RoleManager(Of TRole).AddClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).AddClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.AddClaimAsync({TRole},System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
        name: AddClaimAsync
        nameWithType: RoleManager<TRole>.AddClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.AddClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
        name: AddClaimAsync
        nameWithType: RoleManager(Of TRole).AddClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).AddClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.AddClaimAsync(`1,System.Security.Claims.Claim)
  es.efor.Auth.Managers.IdentityRoleManager`2.AddClaimAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.AddClaimAsync*
        name: AddClaimAsync
        nameWithType: IdentityRoleManager<TRoleId, TRole>.AddClaimAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.AddClaimAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.AddClaimAsync*
        name: AddClaimAsync
        nameWithType: IdentityRoleManager(Of TRoleId, TRole).AddClaimAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).AddClaimAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityRoleManager`2.AddClaimAsync
  Microsoft.AspNetCore.Identity.RoleManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
        name: RemoveClaimAsync
        nameWithType: RoleManager<TRole>.RemoveClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.RemoveClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
        name: RemoveClaimAsync
        nameWithType: RoleManager(Of TRole).RemoveClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).RemoveClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.RemoveClaimAsync({TRole},System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
        name: RemoveClaimAsync
        nameWithType: RoleManager<TRole>.RemoveClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.RemoveClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
        name: RemoveClaimAsync
        nameWithType: RoleManager(Of TRole).RemoveClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).RemoveClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.RemoveClaimAsync(`1,System.Security.Claims.Claim)
  es.efor.Auth.Managers.IdentityRoleManager`2.RemoveClaimAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.RemoveClaimAsync*
        name: RemoveClaimAsync
        nameWithType: IdentityRoleManager<TRoleId, TRole>.RemoveClaimAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.RemoveClaimAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.RemoveClaimAsync*
        name: RemoveClaimAsync
        nameWithType: IdentityRoleManager(Of TRoleId, TRole).RemoveClaimAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).RemoveClaimAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityRoleManager`2.RemoveClaimAsync
  Microsoft.AspNetCore.Identity.RoleManager`1.SetRoleNameAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.SetRoleNameAsync(`0,System.String)
        name: SetRoleNameAsync
        nameWithType: RoleManager<TRole>.SetRoleNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.SetRoleNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.SetRoleNameAsync(`0,System.String)
        name: SetRoleNameAsync
        nameWithType: RoleManager(Of TRole).SetRoleNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).SetRoleNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.SetRoleNameAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.SetRoleNameAsync({TRole},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.SetRoleNameAsync(`0,System.String)
        name: SetRoleNameAsync
        nameWithType: RoleManager<TRole>.SetRoleNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.SetRoleNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.SetRoleNameAsync(`0,System.String)
        name: SetRoleNameAsync
        nameWithType: RoleManager(Of TRole).SetRoleNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).SetRoleNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.SetRoleNameAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.SetRoleNameAsync(`1,System.String)
  es.efor.Auth.Managers.IdentityRoleManager`2.SetRoleNameAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.SetRoleNameAsync*
        name: SetRoleNameAsync
        nameWithType: IdentityRoleManager<TRoleId, TRole>.SetRoleNameAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.SetRoleNameAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.SetRoleNameAsync*
        name: SetRoleNameAsync
        nameWithType: IdentityRoleManager(Of TRoleId, TRole).SetRoleNameAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).SetRoleNameAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityRoleManager`2.SetRoleNameAsync
  Microsoft.AspNetCore.Identity.RoleManager`1.DeleteAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.DeleteAsync(`0)
        name: DeleteAsync
        nameWithType: RoleManager<TRole>.DeleteAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.DeleteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.DeleteAsync(`0)
        name: DeleteAsync
        nameWithType: RoleManager(Of TRole).DeleteAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).DeleteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager`1.DeleteAsync(`0)
  Microsoft.AspNetCore.Identity.RoleManager{{TRole}}.DeleteAsync({TRole}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.DeleteAsync(`0)
        name: DeleteAsync
        nameWithType: RoleManager<TRole>.DeleteAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager<TRole>.DeleteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.RoleManager`1.DeleteAsync(`0)
        name: DeleteAsync
        nameWithType: RoleManager(Of TRole).DeleteAsync
        qualifiedName: Microsoft.AspNetCore.Identity.RoleManager(Of TRole).DeleteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.RoleManager`1.DeleteAsync(`0)
    parent: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
    commentId: M:Microsoft.AspNetCore.Identity.RoleManager{`1}.DeleteAsync(`1)
  es.efor.Auth.Managers.IdentityRoleManager`2.DeleteAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.DeleteAsync*
        name: DeleteAsync
        nameWithType: IdentityRoleManager<TRoleId, TRole>.DeleteAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager<TRoleId, TRole>.DeleteAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2.DeleteAsync*
        name: DeleteAsync
        nameWithType: IdentityRoleManager(Of TRoleId, TRole).DeleteAsync
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager(Of TRoleId, TRole).DeleteAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityRoleManager`2.DeleteAsync
  es.efor.Auth.Managers.IdentityRoleManager`2:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2
        name: IdentityRoleManager
        nameWithType: IdentityRoleManager
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TRoleId
        nameWithType: TRoleId
        qualifiedName: TRoleId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Auth.Managers.IdentityRoleManager`2
        name: IdentityRoleManager
        nameWithType: IdentityRoleManager
        qualifiedName: es.efor.Auth.Managers.IdentityRoleManager
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TRoleId
        nameWithType: TRoleId
        qualifiedName: TRoleId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:es.efor.Auth.Managers.IdentityRoleManager`2
  Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
        name: CanSignInAsync
        nameWithType: SignInManager<TUser>.CanSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CanSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
        name: CanSignInAsync
        nameWithType: SignInManager(Of TUser).CanSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CanSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.CanSignInAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
        name: CanSignInAsync
        nameWithType: SignInManager<TUser>.CanSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CanSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
        name: CanSignInAsync
        nameWithType: SignInManager(Of TUser).CanSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CanSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.CanSignInAsync(`1)
  Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
        name: CheckPasswordSignInAsync
        nameWithType: SignInManager<TUser>.CheckPasswordSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CheckPasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
        name: CheckPasswordSignInAsync
        nameWithType: SignInManager(Of TUser).CheckPasswordSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CheckPasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.CheckPasswordSignInAsync({TUser},System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
        name: CheckPasswordSignInAsync
        nameWithType: SignInManager<TUser>.CheckPasswordSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CheckPasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
        name: CheckPasswordSignInAsync
        nameWithType: SignInManager(Of TUser).CheckPasswordSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CheckPasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.CheckPasswordSignInAsync(`1,System.String,System.Boolean)
  ? Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
        name: ConfigureExternalAuthenticationProperties
        nameWithType: SignInManager<TUser>.ConfigureExternalAuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ConfigureExternalAuthenticationProperties
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
        name: ConfigureExternalAuthenticationProperties
        nameWithType: SignInManager(Of TUser).ConfigureExternalAuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ConfigureExternalAuthenticationProperties
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
  ? Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
        name: ConfigureExternalAuthenticationProperties
        nameWithType: SignInManager<TUser>.ConfigureExternalAuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ConfigureExternalAuthenticationProperties
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
        name: ConfigureExternalAuthenticationProperties
        nameWithType: SignInManager(Of TUser).ConfigureExternalAuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ConfigureExternalAuthenticationProperties
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
  Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
        name: CreateUserPrincipalAsync
        nameWithType: SignInManager<TUser>.CreateUserPrincipalAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CreateUserPrincipalAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
        name: CreateUserPrincipalAsync
        nameWithType: SignInManager(Of TUser).CreateUserPrincipalAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CreateUserPrincipalAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.CreateUserPrincipalAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
        name: CreateUserPrincipalAsync
        nameWithType: SignInManager<TUser>.CreateUserPrincipalAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CreateUserPrincipalAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
        name: CreateUserPrincipalAsync
        nameWithType: SignInManager(Of TUser).CreateUserPrincipalAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CreateUserPrincipalAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.CreateUserPrincipalAsync(`1)
  Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
        name: ExternalLoginSignInAsync
        nameWithType: SignInManager<TUser>.ExternalLoginSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
        name: ExternalLoginSignInAsync
        nameWithType: SignInManager(Of TUser).ExternalLoginSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ExternalLoginSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ExternalLoginSignInAsync(System.String,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
        name: ExternalLoginSignInAsync
        nameWithType: SignInManager<TUser>.ExternalLoginSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
        name: ExternalLoginSignInAsync
        nameWithType: SignInManager(Of TUser).ExternalLoginSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ExternalLoginSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
  ? Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: ExternalLoginSignInAsync
        nameWithType: SignInManager<TUser>.ExternalLoginSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: ExternalLoginSignInAsync
        nameWithType: SignInManager(Of TUser).ExternalLoginSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ExternalLoginSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  ? Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: ExternalLoginSignInAsync
        nameWithType: SignInManager<TUser>.ExternalLoginSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: ExternalLoginSignInAsync
        nameWithType: SignInManager(Of TUser).ExternalLoginSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ExternalLoginSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
        name: ForgetTwoFactorClientAsync
        nameWithType: SignInManager<TUser>.ForgetTwoFactorClientAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ForgetTwoFactorClientAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
        name: ForgetTwoFactorClientAsync
        nameWithType: SignInManager(Of TUser).ForgetTwoFactorClientAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ForgetTwoFactorClientAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ForgetTwoFactorClientAsync:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
        name: ForgetTwoFactorClientAsync
        nameWithType: SignInManager<TUser>.ForgetTwoFactorClientAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ForgetTwoFactorClientAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
        name: ForgetTwoFactorClientAsync
        nameWithType: SignInManager(Of TUser).ForgetTwoFactorClientAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ForgetTwoFactorClientAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ForgetTwoFactorClientAsync
  Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
        name: GetExternalAuthenticationSchemesAsync
        nameWithType: SignInManager<TUser>.GetExternalAuthenticationSchemesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetExternalAuthenticationSchemesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
        name: GetExternalAuthenticationSchemesAsync
        nameWithType: SignInManager(Of TUser).GetExternalAuthenticationSchemesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetExternalAuthenticationSchemesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.GetExternalAuthenticationSchemesAsync:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
        name: GetExternalAuthenticationSchemesAsync
        nameWithType: SignInManager<TUser>.GetExternalAuthenticationSchemesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetExternalAuthenticationSchemesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
        name: GetExternalAuthenticationSchemesAsync
        nameWithType: SignInManager(Of TUser).GetExternalAuthenticationSchemesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetExternalAuthenticationSchemesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.GetExternalAuthenticationSchemesAsync
  Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
        name: GetExternalLoginInfoAsync
        nameWithType: SignInManager<TUser>.GetExternalLoginInfoAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetExternalLoginInfoAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
        name: GetExternalLoginInfoAsync
        nameWithType: SignInManager(Of TUser).GetExternalLoginInfoAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetExternalLoginInfoAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.GetExternalLoginInfoAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
        name: GetExternalLoginInfoAsync
        nameWithType: SignInManager<TUser>.GetExternalLoginInfoAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetExternalLoginInfoAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
        name: GetExternalLoginInfoAsync
        nameWithType: SignInManager(Of TUser).GetExternalLoginInfoAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetExternalLoginInfoAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.GetExternalLoginInfoAsync(System.String)
  Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
        name: GetTwoFactorAuthenticationUserAsync
        nameWithType: SignInManager<TUser>.GetTwoFactorAuthenticationUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetTwoFactorAuthenticationUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
        name: GetTwoFactorAuthenticationUserAsync
        nameWithType: SignInManager(Of TUser).GetTwoFactorAuthenticationUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetTwoFactorAuthenticationUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.GetTwoFactorAuthenticationUserAsync:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
        name: GetTwoFactorAuthenticationUserAsync
        nameWithType: SignInManager<TUser>.GetTwoFactorAuthenticationUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetTwoFactorAuthenticationUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
        name: GetTwoFactorAuthenticationUserAsync
        nameWithType: SignInManager(Of TUser).GetTwoFactorAuthenticationUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetTwoFactorAuthenticationUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.GetTwoFactorAuthenticationUserAsync
  Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
        name: IsLockedOut
        nameWithType: SignInManager<TUser>.IsLockedOut
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsLockedOut
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
        name: IsLockedOut
        nameWithType: SignInManager(Of TUser).IsLockedOut
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsLockedOut
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.IsLockedOut({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
        name: IsLockedOut
        nameWithType: SignInManager<TUser>.IsLockedOut
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsLockedOut
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
        name: IsLockedOut
        nameWithType: SignInManager(Of TUser).IsLockedOut
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsLockedOut
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.IsLockedOut(`1)
  Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
        name: IsSignedIn
        nameWithType: SignInManager<TUser>.IsSignedIn
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsSignedIn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
        name: IsSignedIn
        nameWithType: SignInManager(Of TUser).IsSignedIn
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsSignedIn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.IsSignedIn(System.Security.Claims.ClaimsPrincipal):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
        name: IsSignedIn
        nameWithType: SignInManager<TUser>.IsSignedIn
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsSignedIn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
        name: IsSignedIn
        nameWithType: SignInManager(Of TUser).IsSignedIn
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsSignedIn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
  Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
        name: IsTwoFactorClientRememberedAsync
        nameWithType: SignInManager<TUser>.IsTwoFactorClientRememberedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsTwoFactorClientRememberedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
        name: IsTwoFactorClientRememberedAsync
        nameWithType: SignInManager(Of TUser).IsTwoFactorClientRememberedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsTwoFactorClientRememberedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.IsTwoFactorClientRememberedAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
        name: IsTwoFactorClientRememberedAsync
        nameWithType: SignInManager<TUser>.IsTwoFactorClientRememberedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsTwoFactorClientRememberedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
        name: IsTwoFactorClientRememberedAsync
        nameWithType: SignInManager(Of TUser).IsTwoFactorClientRememberedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsTwoFactorClientRememberedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.IsTwoFactorClientRememberedAsync(`1)
  Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
        name: LockedOut
        nameWithType: SignInManager<TUser>.LockedOut
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.LockedOut
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
        name: LockedOut
        nameWithType: SignInManager(Of TUser).LockedOut
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).LockedOut
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.LockedOut({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
        name: LockedOut
        nameWithType: SignInManager<TUser>.LockedOut
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.LockedOut
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
        name: LockedOut
        nameWithType: SignInManager(Of TUser).LockedOut
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).LockedOut
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.LockedOut(`1)
  Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: PasswordSignInAsync
        nameWithType: SignInManager<TUser>.PasswordSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: PasswordSignInAsync
        nameWithType: SignInManager(Of TUser).PasswordSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  ? Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: PasswordSignInAsync
        nameWithType: SignInManager<TUser>.PasswordSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: PasswordSignInAsync
        nameWithType: SignInManager(Of TUser).PasswordSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
        name: PasswordSignInAsync
        nameWithType: SignInManager<TUser>.PasswordSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
        name: PasswordSignInAsync
        nameWithType: SignInManager(Of TUser).PasswordSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.PasswordSignInAsync({TUser},System.String,System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
        name: PasswordSignInAsync
        nameWithType: SignInManager<TUser>.PasswordSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
        name: PasswordSignInAsync
        nameWithType: SignInManager(Of TUser).PasswordSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.PasswordSignInAsync(`1,System.String,System.Boolean,System.Boolean)
  Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
        name: PreSignInCheck
        nameWithType: SignInManager<TUser>.PreSignInCheck
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PreSignInCheck
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
        name: PreSignInCheck
        nameWithType: SignInManager(Of TUser).PreSignInCheck
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PreSignInCheck
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.PreSignInCheck({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
        name: PreSignInCheck
        nameWithType: SignInManager<TUser>.PreSignInCheck
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PreSignInCheck
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
        name: PreSignInCheck
        nameWithType: SignInManager(Of TUser).PreSignInCheck
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PreSignInCheck
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.PreSignInCheck(`1)
  Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
        name: RefreshSignInAsync
        nameWithType: SignInManager<TUser>.RefreshSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.RefreshSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
        name: RefreshSignInAsync
        nameWithType: SignInManager(Of TUser).RefreshSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).RefreshSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.RefreshSignInAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
        name: RefreshSignInAsync
        nameWithType: SignInManager<TUser>.RefreshSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.RefreshSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
        name: RefreshSignInAsync
        nameWithType: SignInManager(Of TUser).RefreshSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).RefreshSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.RefreshSignInAsync(`1)
  Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
        name: RememberTwoFactorClientAsync
        nameWithType: SignInManager<TUser>.RememberTwoFactorClientAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.RememberTwoFactorClientAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
        name: RememberTwoFactorClientAsync
        nameWithType: SignInManager(Of TUser).RememberTwoFactorClientAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).RememberTwoFactorClientAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.RememberTwoFactorClientAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
        name: RememberTwoFactorClientAsync
        nameWithType: SignInManager<TUser>.RememberTwoFactorClientAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.RememberTwoFactorClientAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
        name: RememberTwoFactorClientAsync
        nameWithType: SignInManager(Of TUser).RememberTwoFactorClientAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).RememberTwoFactorClientAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.RememberTwoFactorClientAsync(`1)
  Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
        name: ResetLockout
        nameWithType: SignInManager<TUser>.ResetLockout
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ResetLockout
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
        name: ResetLockout
        nameWithType: SignInManager(Of TUser).ResetLockout
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ResetLockout
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ResetLockout({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
        name: ResetLockout
        nameWithType: SignInManager<TUser>.ResetLockout
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ResetLockout
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
        name: ResetLockout
        nameWithType: SignInManager(Of TUser).ResetLockout
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ResetLockout
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ResetLockout(`1)
  ? Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
        name: SignInAsync
        nameWithType: SignInManager<TUser>.SignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
        name: SignInAsync
        nameWithType: SignInManager(Of TUser).SignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  ? Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInAsync({TUser},Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
        name: SignInAsync
        nameWithType: SignInManager<TUser>.SignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
        name: SignInAsync
        nameWithType: SignInManager(Of TUser).SignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.SignInAsync(`1,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
        name: SignInAsync
        nameWithType: SignInManager<TUser>.SignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
        name: SignInAsync
        nameWithType: SignInManager(Of TUser).SignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInAsync({TUser},System.Boolean,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
        name: SignInAsync
        nameWithType: SignInManager<TUser>.SignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
        name: SignInAsync
        nameWithType: SignInManager(Of TUser).SignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.SignInAsync(`1,System.Boolean,System.String)
  Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
        name: SignInOrTwoFactorAsync
        nameWithType: SignInManager<TUser>.SignInOrTwoFactorAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInOrTwoFactorAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
        name: SignInOrTwoFactorAsync
        nameWithType: SignInManager(Of TUser).SignInOrTwoFactorAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInOrTwoFactorAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInOrTwoFactorAsync({TUser},System.Boolean,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
        name: SignInOrTwoFactorAsync
        nameWithType: SignInManager<TUser>.SignInOrTwoFactorAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInOrTwoFactorAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
        name: SignInOrTwoFactorAsync
        nameWithType: SignInManager(Of TUser).SignInOrTwoFactorAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInOrTwoFactorAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.SignInOrTwoFactorAsync(`1,System.Boolean,System.String,System.Boolean)
  ? Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: SignInWithClaimsAsync
        nameWithType: SignInManager<TUser>.SignInWithClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInWithClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: SignInWithClaimsAsync
        nameWithType: SignInManager(Of TUser).SignInWithClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInWithClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  ? Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInWithClaimsAsync({TUser},Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: SignInWithClaimsAsync
        nameWithType: SignInManager<TUser>.SignInWithClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInWithClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: SignInWithClaimsAsync
        nameWithType: SignInManager(Of TUser).SignInWithClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInWithClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.SignInWithClaimsAsync(`1,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  ? Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: SignInWithClaimsAsync
        nameWithType: SignInManager<TUser>.SignInWithClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInWithClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: SignInWithClaimsAsync
        nameWithType: SignInManager(Of TUser).SignInWithClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInWithClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  ? Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInWithClaimsAsync({TUser},System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: SignInWithClaimsAsync
        nameWithType: SignInManager<TUser>.SignInWithClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInWithClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: SignInWithClaimsAsync
        nameWithType: SignInManager(Of TUser).SignInWithClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInWithClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.SignInWithClaimsAsync(`1,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
        name: SignOutAsync
        nameWithType: SignInManager<TUser>.SignOutAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignOutAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
        name: SignOutAsync
        nameWithType: SignInManager(Of TUser).SignOutAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignOutAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignOutAsync:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
        name: SignOutAsync
        nameWithType: SignInManager<TUser>.SignOutAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignOutAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
        name: SignOutAsync
        nameWithType: SignInManager(Of TUser).SignOutAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignOutAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.SignOutAsync
  Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
        name: TwoFactorAuthenticatorSignInAsync
        nameWithType: SignInManager<TUser>.TwoFactorAuthenticatorSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorAuthenticatorSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
        name: TwoFactorAuthenticatorSignInAsync
        nameWithType: SignInManager(Of TUser).TwoFactorAuthenticatorSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorAuthenticatorSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
  ? Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
        name: TwoFactorAuthenticatorSignInAsync
        nameWithType: SignInManager<TUser>.TwoFactorAuthenticatorSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorAuthenticatorSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
        name: TwoFactorAuthenticatorSignInAsync
        nameWithType: SignInManager(Of TUser).TwoFactorAuthenticatorSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorAuthenticatorSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
  Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
        name: TwoFactorRecoveryCodeSignInAsync
        nameWithType: SignInManager<TUser>.TwoFactorRecoveryCodeSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorRecoveryCodeSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
        name: TwoFactorRecoveryCodeSignInAsync
        nameWithType: SignInManager(Of TUser).TwoFactorRecoveryCodeSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorRecoveryCodeSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.TwoFactorRecoveryCodeSignInAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
        name: TwoFactorRecoveryCodeSignInAsync
        nameWithType: SignInManager<TUser>.TwoFactorRecoveryCodeSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorRecoveryCodeSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
        name: TwoFactorRecoveryCodeSignInAsync
        nameWithType: SignInManager(Of TUser).TwoFactorRecoveryCodeSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorRecoveryCodeSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.TwoFactorRecoveryCodeSignInAsync(System.String)
  Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: TwoFactorSignInAsync
        nameWithType: SignInManager<TUser>.TwoFactorSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: TwoFactorSignInAsync
        nameWithType: SignInManager(Of TUser).TwoFactorSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  ? Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: TwoFactorSignInAsync
        nameWithType: SignInManager<TUser>.TwoFactorSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: TwoFactorSignInAsync
        nameWithType: SignInManager(Of TUser).TwoFactorSignInAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  ? Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
        name: UpdateExternalAuthenticationTokensAsync
        nameWithType: SignInManager<TUser>.UpdateExternalAuthenticationTokensAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.UpdateExternalAuthenticationTokensAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Identity.ExternalLoginInfo
        name: ExternalLoginInfo
        nameWithType: ExternalLoginInfo
        qualifiedName: Microsoft.AspNetCore.Identity.ExternalLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
        name: UpdateExternalAuthenticationTokensAsync
        nameWithType: SignInManager(Of TUser).UpdateExternalAuthenticationTokensAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).UpdateExternalAuthenticationTokensAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Identity.ExternalLoginInfo
        name: ExternalLoginInfo
        nameWithType: ExternalLoginInfo
        qualifiedName: Microsoft.AspNetCore.Identity.ExternalLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  ? Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
        name: UpdateExternalAuthenticationTokensAsync
        nameWithType: SignInManager<TUser>.UpdateExternalAuthenticationTokensAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.UpdateExternalAuthenticationTokensAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Identity.ExternalLoginInfo
        name: ExternalLoginInfo
        nameWithType: ExternalLoginInfo
        qualifiedName: Microsoft.AspNetCore.Identity.ExternalLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
        name: UpdateExternalAuthenticationTokensAsync
        nameWithType: SignInManager(Of TUser).UpdateExternalAuthenticationTokensAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).UpdateExternalAuthenticationTokensAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Identity.ExternalLoginInfo
        name: ExternalLoginInfo
        nameWithType: ExternalLoginInfo
        qualifiedName: Microsoft.AspNetCore.Identity.ExternalLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
        name: ValidateSecurityStampAsync
        nameWithType: SignInManager<TUser>.ValidateSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
        name: ValidateSecurityStampAsync
        nameWithType: SignInManager(Of TUser).ValidateSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
        name: ValidateSecurityStampAsync
        nameWithType: SignInManager<TUser>.ValidateSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
        name: ValidateSecurityStampAsync
        nameWithType: SignInManager(Of TUser).ValidateSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
        name: ValidateSecurityStampAsync
        nameWithType: SignInManager<TUser>.ValidateSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
        name: ValidateSecurityStampAsync
        nameWithType: SignInManager(Of TUser).ValidateSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ValidateSecurityStampAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
        name: ValidateSecurityStampAsync
        nameWithType: SignInManager<TUser>.ValidateSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
        name: ValidateSecurityStampAsync
        nameWithType: SignInManager(Of TUser).ValidateSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ValidateSecurityStampAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
        name: ValidateTwoFactorSecurityStampAsync
        nameWithType: SignInManager<TUser>.ValidateTwoFactorSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateTwoFactorSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
        name: ValidateTwoFactorSecurityStampAsync
        nameWithType: SignInManager(Of TUser).ValidateTwoFactorSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateTwoFactorSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
        name: ValidateTwoFactorSecurityStampAsync
        nameWithType: SignInManager<TUser>.ValidateTwoFactorSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateTwoFactorSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
        name: ValidateTwoFactorSecurityStampAsync
        nameWithType: SignInManager(Of TUser).ValidateTwoFactorSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateTwoFactorSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  Microsoft.AspNetCore.Identity.SignInManager`1.ClaimsFactory:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ClaimsFactory
        name: ClaimsFactory
        nameWithType: SignInManager<TUser>.ClaimsFactory
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ClaimsFactory
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ClaimsFactory
        name: ClaimsFactory
        nameWithType: SignInManager(Of TUser).ClaimsFactory
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ClaimsFactory
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.SignInManager`1.ClaimsFactory
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ClaimsFactory:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ClaimsFactory
        name: ClaimsFactory
        nameWithType: SignInManager<TUser>.ClaimsFactory
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ClaimsFactory
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.ClaimsFactory
        name: ClaimsFactory
        nameWithType: SignInManager(Of TUser).ClaimsFactory
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ClaimsFactory
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.ClaimsFactory
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.SignInManager{`1}.ClaimsFactory
  Microsoft.AspNetCore.Identity.SignInManager`1.Context:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.Context
        name: Context
        nameWithType: SignInManager<TUser>.Context
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.Context
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.Context
        name: Context
        nameWithType: SignInManager(Of TUser).Context
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).Context
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.SignInManager`1.Context
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.Context:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.Context
        name: Context
        nameWithType: SignInManager<TUser>.Context
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.Context
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.Context
        name: Context
        nameWithType: SignInManager(Of TUser).Context
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).Context
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.Context
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.SignInManager{`1}.Context
  Microsoft.AspNetCore.Identity.SignInManager`1.Logger:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.Logger
        name: Logger
        nameWithType: SignInManager<TUser>.Logger
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.Logger
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.Logger
        name: Logger
        nameWithType: SignInManager(Of TUser).Logger
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).Logger
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.SignInManager`1.Logger
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.Logger:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.Logger
        name: Logger
        nameWithType: SignInManager<TUser>.Logger
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.Logger
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.Logger
        name: Logger
        nameWithType: SignInManager(Of TUser).Logger
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).Logger
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.Logger
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.SignInManager{`1}.Logger
  Microsoft.AspNetCore.Identity.SignInManager`1.Options:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.Options
        name: Options
        nameWithType: SignInManager<TUser>.Options
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.Options
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.Options
        name: Options
        nameWithType: SignInManager(Of TUser).Options
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).Options
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.SignInManager`1.Options
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.Options:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.Options
        name: Options
        nameWithType: SignInManager<TUser>.Options
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.Options
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.Options
        name: Options
        nameWithType: SignInManager(Of TUser).Options
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).Options
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.Options
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.SignInManager{`1}.Options
  Microsoft.AspNetCore.Identity.SignInManager`1.UserManager:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.UserManager
        name: UserManager
        nameWithType: SignInManager<TUser>.UserManager
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.UserManager
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.UserManager
        name: UserManager
        nameWithType: SignInManager(Of TUser).UserManager
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).UserManager
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.SignInManager`1.UserManager
  Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.UserManager:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.UserManager
        name: UserManager
        nameWithType: SignInManager<TUser>.UserManager
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.UserManager
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.SignInManager`1.UserManager
        name: UserManager
        nameWithType: SignInManager(Of TUser).UserManager
        qualifiedName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).UserManager
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.SignInManager`1.UserManager
    parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.SignInManager{`1}.UserManager
  es.efor.Auth.Managers.IdentityUserManager`2:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityUserManager`2
        name: IdentityUserManager
        nameWithType: IdentityUserManager
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Auth.Managers.IdentityUserManager`2
        name: IdentityUserManager
        nameWithType: IdentityUserManager
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:es.efor.Auth.Managers.IdentityUserManager`2
  es.efor.Auth.Managers:
    name:
      CSharp:
      - name: es.efor.Auth.Managers
        nameWithType: es.efor.Auth.Managers
        qualifiedName: es.efor.Auth.Managers
      VB:
      - name: es.efor.Auth.Managers
        nameWithType: es.efor.Auth.Managers
        qualifiedName: es.efor.Auth.Managers
    isDefinition: true
    commentId: N:es.efor.Auth.Managers
  es.efor.Auth.Managers.IdentityUserManager{{TUserId},{TUser}}:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityUserManager`2
        name: IdentityUserManager
        nameWithType: IdentityUserManager
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Auth.Managers.IdentityUserManager`2
        name: IdentityUserManager
        nameWithType: IdentityUserManager
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: es.efor.Auth.Managers.IdentityUserManager`2
    parent: es.efor.Auth.Managers
    commentId: T:es.efor.Auth.Managers.IdentityUserManager{`0,`1}
  Microsoft.AspNetCore.Http:
    name:
      CSharp:
      - name: Microsoft.AspNetCore.Http
        nameWithType: Microsoft.AspNetCore.Http
        qualifiedName: Microsoft.AspNetCore.Http
        isExternal: true
      VB:
      - name: Microsoft.AspNetCore.Http
        nameWithType: Microsoft.AspNetCore.Http
        qualifiedName: Microsoft.AspNetCore.Http
    isDefinition: true
    commentId: N:Microsoft.AspNetCore.Http
  Microsoft.AspNetCore.Http.IHttpContextAccessor:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Http.IHttpContextAccessor
        name: IHttpContextAccessor
        nameWithType: IHttpContextAccessor
        qualifiedName: Microsoft.AspNetCore.Http.IHttpContextAccessor
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Http.IHttpContextAccessor
        name: IHttpContextAccessor
        nameWithType: IHttpContextAccessor
        qualifiedName: Microsoft.AspNetCore.Http.IHttpContextAccessor
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Http
    commentId: T:Microsoft.AspNetCore.Http.IHttpContextAccessor
  Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
        name: IUserClaimsPrincipalFactory
        nameWithType: IUserClaimsPrincipalFactory
        qualifiedName: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
        name: IUserClaimsPrincipalFactory
        nameWithType: IUserClaimsPrincipalFactory
        qualifiedName: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
  Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{{TUser}}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
        name: IUserClaimsPrincipalFactory
        nameWithType: IUserClaimsPrincipalFactory
        qualifiedName: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
        name: IUserClaimsPrincipalFactory
        nameWithType: IUserClaimsPrincipalFactory
        qualifiedName: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{`1}
  Microsoft.Extensions.Options.IOptions`1:
    name:
      CSharp:
      - id: Microsoft.Extensions.Options.IOptions`1
        name: IOptions
        nameWithType: IOptions
        qualifiedName: Microsoft.Extensions.Options.IOptions
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TOptions
        nameWithType: TOptions
        qualifiedName: TOptions
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.Extensions.Options.IOptions`1
        name: IOptions
        nameWithType: IOptions
        qualifiedName: Microsoft.Extensions.Options.IOptions
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TOptions
        nameWithType: TOptions
        qualifiedName: TOptions
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.Extensions.Options.IOptions`1
  Microsoft.Extensions.Options:
    name:
      CSharp:
      - name: Microsoft.Extensions.Options
        nameWithType: Microsoft.Extensions.Options
        qualifiedName: Microsoft.Extensions.Options
        isExternal: true
      VB:
      - name: Microsoft.Extensions.Options
        nameWithType: Microsoft.Extensions.Options
        qualifiedName: Microsoft.Extensions.Options
    isDefinition: true
    commentId: N:Microsoft.Extensions.Options
  Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}:
    name:
      CSharp:
      - id: Microsoft.Extensions.Options.IOptions`1
        name: IOptions
        nameWithType: IOptions
        qualifiedName: Microsoft.Extensions.Options.IOptions
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Identity.IdentityOptions
        name: IdentityOptions
        nameWithType: IdentityOptions
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityOptions
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.Extensions.Options.IOptions`1
        name: IOptions
        nameWithType: IOptions
        qualifiedName: Microsoft.Extensions.Options.IOptions
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Identity.IdentityOptions
        name: IdentityOptions
        nameWithType: IdentityOptions
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Extensions.Options.IOptions`1
    parent: Microsoft.Extensions.Options
    commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}
  Microsoft.Extensions.Logging.ILogger{es.efor.Auth.Managers.IdentitySignInManager`2}:
    name:
      CSharp:
      - id: Microsoft.Extensions.Logging.ILogger`1
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Extensions.Logging.ILogger
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: es.efor.Auth.Managers.IdentitySignInManager`2
        name: IdentitySignInManager
        nameWithType: IdentitySignInManager
        qualifiedName: es.efor.Auth.Managers.IdentitySignInManager
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.Extensions.Logging.ILogger`1
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Extensions.Logging.ILogger
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: es.efor.Auth.Managers.IdentitySignInManager`2
        name: IdentitySignInManager
        nameWithType: IdentitySignInManager
        qualifiedName: es.efor.Auth.Managers.IdentitySignInManager
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Extensions.Logging.ILogger`1
    parent: Microsoft.Extensions.Logging
    commentId: T:Microsoft.Extensions.Logging.ILogger{es.efor.Auth.Managers.IdentitySignInManager`2}
  Microsoft.AspNetCore.Authentication:
    name:
      CSharp:
      - name: Microsoft.AspNetCore.Authentication
        nameWithType: Microsoft.AspNetCore.Authentication
        qualifiedName: Microsoft.AspNetCore.Authentication
        isExternal: true
      VB:
      - name: Microsoft.AspNetCore.Authentication
        nameWithType: Microsoft.AspNetCore.Authentication
        qualifiedName: Microsoft.AspNetCore.Authentication
    isDefinition: true
    commentId: N:Microsoft.AspNetCore.Authentication
  Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider
        name: IAuthenticationSchemeProvider
        nameWithType: IAuthenticationSchemeProvider
        qualifiedName: Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider
        name: IAuthenticationSchemeProvider
        nameWithType: IAuthenticationSchemeProvider
        qualifiedName: Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Authentication
    commentId: T:Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider
  Microsoft.AspNetCore.Identity.IUserConfirmation`1:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IUserConfirmation`1
        name: IUserConfirmation
        nameWithType: IUserConfirmation
        qualifiedName: Microsoft.AspNetCore.Identity.IUserConfirmation
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IUserConfirmation`1
        name: IUserConfirmation
        nameWithType: IUserConfirmation
        qualifiedName: Microsoft.AspNetCore.Identity.IUserConfirmation
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNetCore.Identity.IUserConfirmation`1
  Microsoft.AspNetCore.Identity.IUserConfirmation{{TUser}}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IUserConfirmation`1
        name: IUserConfirmation
        nameWithType: IUserConfirmation
        qualifiedName: Microsoft.AspNetCore.Identity.IUserConfirmation
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IUserConfirmation`1
        name: IUserConfirmation
        nameWithType: IUserConfirmation
        qualifiedName: Microsoft.AspNetCore.Identity.IUserConfirmation
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IUserConfirmation`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.IUserConfirmation{`1}
  es.efor.Auth.Managers.IdentitySignInManager`2.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentitySignInManager`2.#ctor*
        name: IdentitySignInManager
        nameWithType: IdentitySignInManager<TUserId, TUser>.IdentitySignInManager
        qualifiedName: es.efor.Auth.Managers.IdentitySignInManager<TUserId, TUser>.IdentitySignInManager
      VB:
      - id: es.efor.Auth.Managers.IdentitySignInManager`2.#ctor*
        name: IdentitySignInManager
        nameWithType: IdentitySignInManager(Of TUserId, TUser).IdentitySignInManager
        qualifiedName: es.efor.Auth.Managers.IdentitySignInManager(Of TUserId, TUser).IdentitySignInManager
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentitySignInManager`2.#ctor
  es.efor.Auth.Managers.IdentitySignInManager`2:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentitySignInManager`2
        name: IdentitySignInManager
        nameWithType: IdentitySignInManager
        qualifiedName: es.efor.Auth.Managers.IdentitySignInManager
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Auth.Managers.IdentitySignInManager`2
        name: IdentitySignInManager
        nameWithType: IdentitySignInManager
        qualifiedName: es.efor.Auth.Managers.IdentitySignInManager
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:es.efor.Auth.Managers.IdentitySignInManager`2
  Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose
        name: ResetPasswordTokenPurpose
        nameWithType: UserManager<TUser>.ResetPasswordTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordTokenPurpose
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose
        name: ResetPasswordTokenPurpose
        nameWithType: UserManager(Of TUser).ResetPasswordTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordTokenPurpose
        isExternal: true
    isDefinition: true
    commentId: F:Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetPasswordTokenPurpose:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose
        name: ResetPasswordTokenPurpose
        nameWithType: UserManager<TUser>.ResetPasswordTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordTokenPurpose
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose
        name: ResetPasswordTokenPurpose
        nameWithType: UserManager(Of TUser).ResetPasswordTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordTokenPurpose
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: F:Microsoft.AspNetCore.Identity.UserManager{`1}.ResetPasswordTokenPurpose
  Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberTokenPurpose:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberTokenPurpose
        name: ChangePhoneNumberTokenPurpose
        nameWithType: UserManager<TUser>.ChangePhoneNumberTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePhoneNumberTokenPurpose
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberTokenPurpose
        name: ChangePhoneNumberTokenPurpose
        nameWithType: UserManager(Of TUser).ChangePhoneNumberTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePhoneNumberTokenPurpose
        isExternal: true
    isDefinition: true
    commentId: F:Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberTokenPurpose
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangePhoneNumberTokenPurpose:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberTokenPurpose
        name: ChangePhoneNumberTokenPurpose
        nameWithType: UserManager<TUser>.ChangePhoneNumberTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePhoneNumberTokenPurpose
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberTokenPurpose
        name: ChangePhoneNumberTokenPurpose
        nameWithType: UserManager(Of TUser).ChangePhoneNumberTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePhoneNumberTokenPurpose
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberTokenPurpose
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: F:Microsoft.AspNetCore.Identity.UserManager{`1}.ChangePhoneNumberTokenPurpose
  Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose
        name: ConfirmEmailTokenPurpose
        nameWithType: UserManager<TUser>.ConfirmEmailTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailTokenPurpose
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose
        name: ConfirmEmailTokenPurpose
        nameWithType: UserManager(Of TUser).ConfirmEmailTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailTokenPurpose
        isExternal: true
    isDefinition: true
    commentId: F:Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ConfirmEmailTokenPurpose:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose
        name: ConfirmEmailTokenPurpose
        nameWithType: UserManager<TUser>.ConfirmEmailTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailTokenPurpose
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose
        name: ConfirmEmailTokenPurpose
        nameWithType: UserManager(Of TUser).ConfirmEmailTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailTokenPurpose
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: F:Microsoft.AspNetCore.Identity.UserManager{`1}.ConfirmEmailTokenPurpose
  Microsoft.AspNetCore.Identity.UserManager`1.Dispose:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
        name: Dispose
        nameWithType: UserManager<TUser>.Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
        name: Dispose
        nameWithType: UserManager(Of TUser).Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.Dispose
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Dispose:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
        name: Dispose
        nameWithType: UserManager<TUser>.Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
        name: Dispose
        nameWithType: UserManager(Of TUser).Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.Dispose
  Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
        name: GetUserName
        nameWithType: UserManager<TUser>.GetUserName
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserName
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
        name: GetUserName
        nameWithType: UserManager(Of TUser).GetUserName
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserName
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserName(System.Security.Claims.ClaimsPrincipal):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
        name: GetUserName
        nameWithType: UserManager<TUser>.GetUserName
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserName
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
        name: GetUserName
        nameWithType: UserManager(Of TUser).GetUserName
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserName
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUserName(System.Security.Claims.ClaimsPrincipal)
  Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
        name: GetUserId
        nameWithType: UserManager<TUser>.GetUserId
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserId
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
        name: GetUserId
        nameWithType: UserManager(Of TUser).GetUserId
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserId
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserId(System.Security.Claims.ClaimsPrincipal):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
        name: GetUserId
        nameWithType: UserManager<TUser>.GetUserId
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserId
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
        name: GetUserId
        nameWithType: UserManager(Of TUser).GetUserId
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserId
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUserId(System.Security.Claims.ClaimsPrincipal)
  Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
        name: GetUserAsync
        nameWithType: UserManager<TUser>.GetUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
        name: GetUserAsync
        nameWithType: UserManager(Of TUser).GetUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserAsync(System.Security.Claims.ClaimsPrincipal):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
        name: GetUserAsync
        nameWithType: UserManager<TUser>.GetUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
        name: GetUserAsync
        nameWithType: UserManager(Of TUser).GetUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
        name: GenerateConcurrencyStampAsync
        nameWithType: UserManager<TUser>.GenerateConcurrencyStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateConcurrencyStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
        name: GenerateConcurrencyStampAsync
        nameWithType: UserManager(Of TUser).GenerateConcurrencyStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateConcurrencyStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateConcurrencyStampAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
        name: GenerateConcurrencyStampAsync
        nameWithType: UserManager<TUser>.GenerateConcurrencyStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateConcurrencyStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
        name: GenerateConcurrencyStampAsync
        nameWithType: UserManager(Of TUser).GenerateConcurrencyStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateConcurrencyStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateConcurrencyStampAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
        name: CreateAsync
        nameWithType: UserManager<TUser>.CreateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
        name: CreateAsync
        nameWithType: UserManager(Of TUser).CreateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
        name: CreateAsync
        nameWithType: UserManager<TUser>.CreateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
        name: CreateAsync
        nameWithType: UserManager(Of TUser).CreateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.CreateAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
        name: UpdateAsync
        nameWithType: UserManager<TUser>.UpdateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
        name: UpdateAsync
        nameWithType: UserManager(Of TUser).UpdateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
        name: UpdateAsync
        nameWithType: UserManager<TUser>.UpdateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
        name: UpdateAsync
        nameWithType: UserManager(Of TUser).UpdateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.UpdateAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
        name: DeleteAsync
        nameWithType: UserManager<TUser>.DeleteAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.DeleteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
        name: DeleteAsync
        nameWithType: UserManager(Of TUser).DeleteAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).DeleteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.DeleteAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
        name: DeleteAsync
        nameWithType: UserManager<TUser>.DeleteAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.DeleteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
        name: DeleteAsync
        nameWithType: UserManager(Of TUser).DeleteAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).DeleteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.DeleteAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
        name: FindByIdAsync
        nameWithType: UserManager<TUser>.FindByIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
        name: FindByIdAsync
        nameWithType: UserManager(Of TUser).FindByIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByIdAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
        name: FindByIdAsync
        nameWithType: UserManager<TUser>.FindByIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
        name: FindByIdAsync
        nameWithType: UserManager(Of TUser).FindByIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.FindByIdAsync(System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
        name: FindByNameAsync
        nameWithType: UserManager<TUser>.FindByNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
        name: FindByNameAsync
        nameWithType: UserManager(Of TUser).FindByNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByNameAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
        name: FindByNameAsync
        nameWithType: UserManager<TUser>.FindByNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
        name: FindByNameAsync
        nameWithType: UserManager(Of TUser).FindByNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.FindByNameAsync(System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
        name: CreateAsync
        nameWithType: UserManager<TUser>.CreateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
        name: CreateAsync
        nameWithType: UserManager(Of TUser).CreateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
        name: CreateAsync
        nameWithType: UserManager<TUser>.CreateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
        name: CreateAsync
        nameWithType: UserManager(Of TUser).CreateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.CreateAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
        name: NormalizeName
        nameWithType: UserManager<TUser>.NormalizeName
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeName
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
        name: NormalizeName
        nameWithType: UserManager(Of TUser).NormalizeName
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeName
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.NormalizeName(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
        name: NormalizeName
        nameWithType: UserManager<TUser>.NormalizeName
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeName
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
        name: NormalizeName
        nameWithType: UserManager(Of TUser).NormalizeName
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeName
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeName(System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.NormalizeName(System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
        name: NormalizeEmail
        nameWithType: UserManager<TUser>.NormalizeEmail
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeEmail
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
        name: NormalizeEmail
        nameWithType: UserManager(Of TUser).NormalizeEmail
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeEmail
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.NormalizeEmail(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
        name: NormalizeEmail
        nameWithType: UserManager<TUser>.NormalizeEmail
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeEmail
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
        name: NormalizeEmail
        nameWithType: UserManager(Of TUser).NormalizeEmail
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeEmail
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeEmail(System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.NormalizeEmail(System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
        name: UpdateNormalizedUserNameAsync
        nameWithType: UserManager<TUser>.UpdateNormalizedUserNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedUserNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
        name: UpdateNormalizedUserNameAsync
        nameWithType: UserManager(Of TUser).UpdateNormalizedUserNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedUserNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateNormalizedUserNameAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
        name: UpdateNormalizedUserNameAsync
        nameWithType: UserManager<TUser>.UpdateNormalizedUserNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedUserNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
        name: UpdateNormalizedUserNameAsync
        nameWithType: UserManager(Of TUser).UpdateNormalizedUserNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedUserNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.UpdateNormalizedUserNameAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
        name: GetUserNameAsync
        nameWithType: UserManager<TUser>.GetUserNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
        name: GetUserNameAsync
        nameWithType: UserManager(Of TUser).GetUserNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserNameAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
        name: GetUserNameAsync
        nameWithType: UserManager<TUser>.GetUserNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
        name: GetUserNameAsync
        nameWithType: UserManager(Of TUser).GetUserNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUserNameAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
        name: SetUserNameAsync
        nameWithType: UserManager<TUser>.SetUserNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetUserNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
        name: SetUserNameAsync
        nameWithType: UserManager(Of TUser).SetUserNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetUserNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetUserNameAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
        name: SetUserNameAsync
        nameWithType: UserManager<TUser>.SetUserNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetUserNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
        name: SetUserNameAsync
        nameWithType: UserManager(Of TUser).SetUserNameAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetUserNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetUserNameAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
        name: GetUserIdAsync
        nameWithType: UserManager<TUser>.GetUserIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
        name: GetUserIdAsync
        nameWithType: UserManager(Of TUser).GetUserIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUserIdAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
        name: GetUserIdAsync
        nameWithType: UserManager<TUser>.GetUserIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
        name: GetUserIdAsync
        nameWithType: UserManager(Of TUser).GetUserIdAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUserIdAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
        name: CheckPasswordAsync
        nameWithType: UserManager<TUser>.CheckPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CheckPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
        name: CheckPasswordAsync
        nameWithType: UserManager(Of TUser).CheckPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CheckPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CheckPasswordAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
        name: CheckPasswordAsync
        nameWithType: UserManager<TUser>.CheckPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CheckPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
        name: CheckPasswordAsync
        nameWithType: UserManager(Of TUser).CheckPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CheckPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.CheckPasswordAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
        name: HasPasswordAsync
        nameWithType: UserManager<TUser>.HasPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.HasPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
        name: HasPasswordAsync
        nameWithType: UserManager(Of TUser).HasPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).HasPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.HasPasswordAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
        name: HasPasswordAsync
        nameWithType: UserManager<TUser>.HasPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.HasPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
        name: HasPasswordAsync
        nameWithType: UserManager(Of TUser).HasPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).HasPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.HasPasswordAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
        name: AddPasswordAsync
        nameWithType: UserManager<TUser>.AddPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
        name: AddPasswordAsync
        nameWithType: UserManager(Of TUser).AddPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddPasswordAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
        name: AddPasswordAsync
        nameWithType: UserManager<TUser>.AddPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
        name: AddPasswordAsync
        nameWithType: UserManager(Of TUser).AddPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AddPasswordAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
        name: ChangePasswordAsync
        nameWithType: UserManager<TUser>.ChangePasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
        name: ChangePasswordAsync
        nameWithType: UserManager(Of TUser).ChangePasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangePasswordAsync({TUser},System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
        name: ChangePasswordAsync
        nameWithType: UserManager<TUser>.ChangePasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
        name: ChangePasswordAsync
        nameWithType: UserManager(Of TUser).ChangePasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ChangePasswordAsync(`1,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
        name: RemovePasswordAsync
        nameWithType: UserManager<TUser>.RemovePasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemovePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
        name: RemovePasswordAsync
        nameWithType: UserManager(Of TUser).RemovePasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemovePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemovePasswordAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
        name: RemovePasswordAsync
        nameWithType: UserManager<TUser>.RemovePasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemovePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
        name: RemovePasswordAsync
        nameWithType: UserManager(Of TUser).RemovePasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemovePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemovePasswordAsync(`1)
  ? Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
        name: VerifyPasswordAsync
        nameWithType: UserManager<TUser>.VerifyPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
        name: IUserPasswordStore
        nameWithType: IUserPasswordStore
        qualifiedName: Microsoft.AspNetCore.Identity.IUserPasswordStore
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
        name: VerifyPasswordAsync
        nameWithType: UserManager(Of TUser).VerifyPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
        name: IUserPasswordStore
        nameWithType: IUserPasswordStore
        qualifiedName: Microsoft.AspNetCore.Identity.IUserPasswordStore
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
  ? Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{{TUser}},{TUser},System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
        name: VerifyPasswordAsync
        nameWithType: UserManager<TUser>.VerifyPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
        name: IUserPasswordStore
        nameWithType: IUserPasswordStore
        qualifiedName: Microsoft.AspNetCore.Identity.IUserPasswordStore
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
        name: VerifyPasswordAsync
        nameWithType: UserManager(Of TUser).VerifyPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
        name: IUserPasswordStore
        nameWithType: IUserPasswordStore
        qualifiedName: Microsoft.AspNetCore.Identity.IUserPasswordStore
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`1},`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
        name: GetSecurityStampAsync
        nameWithType: UserManager<TUser>.GetSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
        name: GetSecurityStampAsync
        nameWithType: UserManager(Of TUser).GetSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetSecurityStampAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
        name: GetSecurityStampAsync
        nameWithType: UserManager<TUser>.GetSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
        name: GetSecurityStampAsync
        nameWithType: UserManager(Of TUser).GetSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetSecurityStampAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
        name: UpdateSecurityStampAsync
        nameWithType: UserManager<TUser>.UpdateSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
        name: UpdateSecurityStampAsync
        nameWithType: UserManager(Of TUser).UpdateSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateSecurityStampAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
        name: UpdateSecurityStampAsync
        nameWithType: UserManager<TUser>.UpdateSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
        name: UpdateSecurityStampAsync
        nameWithType: UserManager(Of TUser).UpdateSecurityStampAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.UpdateSecurityStampAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
        name: GeneratePasswordResetTokenAsync
        nameWithType: UserManager<TUser>.GeneratePasswordResetTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GeneratePasswordResetTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
        name: GeneratePasswordResetTokenAsync
        nameWithType: UserManager(Of TUser).GeneratePasswordResetTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GeneratePasswordResetTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GeneratePasswordResetTokenAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
        name: GeneratePasswordResetTokenAsync
        nameWithType: UserManager<TUser>.GeneratePasswordResetTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GeneratePasswordResetTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
        name: GeneratePasswordResetTokenAsync
        nameWithType: UserManager(Of TUser).GeneratePasswordResetTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GeneratePasswordResetTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GeneratePasswordResetTokenAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
        name: ResetPasswordAsync
        nameWithType: UserManager<TUser>.ResetPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
        name: ResetPasswordAsync
        nameWithType: UserManager(Of TUser).ResetPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetPasswordAsync({TUser},System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
        name: ResetPasswordAsync
        nameWithType: UserManager<TUser>.ResetPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
        name: ResetPasswordAsync
        nameWithType: UserManager(Of TUser).ResetPasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ResetPasswordAsync(`1,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
        name: FindByLoginAsync
        nameWithType: UserManager<TUser>.FindByLoginAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
        name: FindByLoginAsync
        nameWithType: UserManager(Of TUser).FindByLoginAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByLoginAsync(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
        name: FindByLoginAsync
        nameWithType: UserManager<TUser>.FindByLoginAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
        name: FindByLoginAsync
        nameWithType: UserManager(Of TUser).FindByLoginAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.FindByLoginAsync(System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
        name: RemoveLoginAsync
        nameWithType: UserManager<TUser>.RemoveLoginAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
        name: RemoveLoginAsync
        nameWithType: UserManager(Of TUser).RemoveLoginAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveLoginAsync({TUser},System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
        name: RemoveLoginAsync
        nameWithType: UserManager<TUser>.RemoveLoginAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
        name: RemoveLoginAsync
        nameWithType: UserManager(Of TUser).RemoveLoginAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemoveLoginAsync(`1,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
        name: AddLoginAsync
        nameWithType: UserManager<TUser>.AddLoginAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNetCore.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
        name: AddLoginAsync
        nameWithType: UserManager(Of TUser).AddLoginAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNetCore.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddLoginAsync({TUser},Microsoft.AspNetCore.Identity.UserLoginInfo):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
        name: AddLoginAsync
        nameWithType: UserManager<TUser>.AddLoginAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNetCore.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
        name: AddLoginAsync
        nameWithType: UserManager(Of TUser).AddLoginAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNetCore.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AddLoginAsync(`1,Microsoft.AspNetCore.Identity.UserLoginInfo)
  Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
        name: GetLoginsAsync
        nameWithType: UserManager<TUser>.GetLoginsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLoginsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
        name: GetLoginsAsync
        nameWithType: UserManager(Of TUser).GetLoginsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLoginsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetLoginsAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
        name: GetLoginsAsync
        nameWithType: UserManager<TUser>.GetLoginsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLoginsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
        name: GetLoginsAsync
        nameWithType: UserManager(Of TUser).GetLoginsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLoginsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetLoginsAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
        name: AddClaimAsync
        nameWithType: UserManager<TUser>.AddClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
        name: AddClaimAsync
        nameWithType: UserManager(Of TUser).AddClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddClaimAsync({TUser},System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
        name: AddClaimAsync
        nameWithType: UserManager<TUser>.AddClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
        name: AddClaimAsync
        nameWithType: UserManager(Of TUser).AddClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AddClaimAsync(`1,System.Security.Claims.Claim)
  ? Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: AddClaimsAsync
        nameWithType: UserManager<TUser>.AddClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: AddClaimsAsync
        nameWithType: UserManager(Of TUser).AddClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  ? Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddClaimsAsync({TUser},System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: AddClaimsAsync
        nameWithType: UserManager<TUser>.AddClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: AddClaimsAsync
        nameWithType: UserManager(Of TUser).AddClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AddClaimsAsync(`1,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
        name: ReplaceClaimAsync
        nameWithType: UserManager<TUser>.ReplaceClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ReplaceClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
        name: ReplaceClaimAsync
        nameWithType: UserManager(Of TUser).ReplaceClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ReplaceClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
  ? Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ReplaceClaimAsync({TUser},System.Security.Claims.Claim,System.Security.Claims.Claim)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
        name: ReplaceClaimAsync
        nameWithType: UserManager<TUser>.ReplaceClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ReplaceClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
        name: ReplaceClaimAsync
        nameWithType: UserManager(Of TUser).ReplaceClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ReplaceClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ReplaceClaimAsync(`1,System.Security.Claims.Claim,System.Security.Claims.Claim)
  Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
        name: RemoveClaimAsync
        nameWithType: UserManager<TUser>.RemoveClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
        name: RemoveClaimAsync
        nameWithType: UserManager(Of TUser).RemoveClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveClaimAsync({TUser},System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
        name: RemoveClaimAsync
        nameWithType: UserManager<TUser>.RemoveClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
        name: RemoveClaimAsync
        nameWithType: UserManager(Of TUser).RemoveClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemoveClaimAsync(`1,System.Security.Claims.Claim)
  ? Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: RemoveClaimsAsync
        nameWithType: UserManager<TUser>.RemoveClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: RemoveClaimsAsync
        nameWithType: UserManager(Of TUser).RemoveClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  ? Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveClaimsAsync({TUser},System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: RemoveClaimsAsync
        nameWithType: UserManager<TUser>.RemoveClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
        name: RemoveClaimsAsync
        nameWithType: UserManager(Of TUser).RemoveClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemoveClaimsAsync(`1,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
        name: GetClaimsAsync
        nameWithType: UserManager<TUser>.GetClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
        name: GetClaimsAsync
        nameWithType: UserManager(Of TUser).GetClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetClaimsAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
        name: GetClaimsAsync
        nameWithType: UserManager<TUser>.GetClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
        name: GetClaimsAsync
        nameWithType: UserManager(Of TUser).GetClaimsAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetClaimsAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
        name: AddToRoleAsync
        nameWithType: UserManager<TUser>.AddToRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
        name: AddToRoleAsync
        nameWithType: UserManager(Of TUser).AddToRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddToRoleAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
        name: AddToRoleAsync
        nameWithType: UserManager<TUser>.AddToRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
        name: AddToRoleAsync
        nameWithType: UserManager(Of TUser).AddToRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AddToRoleAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
        name: AddToRolesAsync
        nameWithType: UserManager<TUser>.AddToRolesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
        name: AddToRolesAsync
        nameWithType: UserManager(Of TUser).AddToRolesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  ? Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AddToRolesAsync({TUser},System.Collections.Generic.IEnumerable{System.String})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
        name: AddToRolesAsync
        nameWithType: UserManager<TUser>.AddToRolesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
        name: AddToRolesAsync
        nameWithType: UserManager(Of TUser).AddToRolesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AddToRolesAsync(`1,System.Collections.Generic.IEnumerable{System.String})
  Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
        name: RemoveFromRoleAsync
        nameWithType: UserManager<TUser>.RemoveFromRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
        name: RemoveFromRoleAsync
        nameWithType: UserManager(Of TUser).RemoveFromRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveFromRoleAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
        name: RemoveFromRoleAsync
        nameWithType: UserManager<TUser>.RemoveFromRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
        name: RemoveFromRoleAsync
        nameWithType: UserManager(Of TUser).RemoveFromRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemoveFromRoleAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
        name: RemoveFromRolesAsync
        nameWithType: UserManager<TUser>.RemoveFromRolesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
        name: RemoveFromRolesAsync
        nameWithType: UserManager(Of TUser).RemoveFromRolesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  ? Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveFromRolesAsync({TUser},System.Collections.Generic.IEnumerable{System.String})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
        name: RemoveFromRolesAsync
        nameWithType: UserManager<TUser>.RemoveFromRolesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
        name: RemoveFromRolesAsync
        nameWithType: UserManager(Of TUser).RemoveFromRolesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemoveFromRolesAsync(`1,System.Collections.Generic.IEnumerable{System.String})
  Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
        name: GetRolesAsync
        nameWithType: UserManager<TUser>.GetRolesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
        name: GetRolesAsync
        nameWithType: UserManager(Of TUser).GetRolesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetRolesAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
        name: GetRolesAsync
        nameWithType: UserManager<TUser>.GetRolesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
        name: GetRolesAsync
        nameWithType: UserManager(Of TUser).GetRolesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetRolesAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
        name: IsInRoleAsync
        nameWithType: UserManager<TUser>.IsInRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsInRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
        name: IsInRoleAsync
        nameWithType: UserManager(Of TUser).IsInRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsInRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsInRoleAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
        name: IsInRoleAsync
        nameWithType: UserManager<TUser>.IsInRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsInRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
        name: IsInRoleAsync
        nameWithType: UserManager(Of TUser).IsInRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsInRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.IsInRoleAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
        name: GetEmailAsync
        nameWithType: UserManager<TUser>.GetEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
        name: GetEmailAsync
        nameWithType: UserManager(Of TUser).GetEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetEmailAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
        name: GetEmailAsync
        nameWithType: UserManager<TUser>.GetEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
        name: GetEmailAsync
        nameWithType: UserManager(Of TUser).GetEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetEmailAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
        name: SetEmailAsync
        nameWithType: UserManager<TUser>.SetEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
        name: SetEmailAsync
        nameWithType: UserManager(Of TUser).SetEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetEmailAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
        name: SetEmailAsync
        nameWithType: UserManager<TUser>.SetEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
        name: SetEmailAsync
        nameWithType: UserManager(Of TUser).SetEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetEmailAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
        name: FindByEmailAsync
        nameWithType: UserManager<TUser>.FindByEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
        name: FindByEmailAsync
        nameWithType: UserManager(Of TUser).FindByEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.FindByEmailAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
        name: FindByEmailAsync
        nameWithType: UserManager<TUser>.FindByEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
        name: FindByEmailAsync
        nameWithType: UserManager(Of TUser).FindByEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.FindByEmailAsync(System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
        name: UpdateNormalizedEmailAsync
        nameWithType: UserManager<TUser>.UpdateNormalizedEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
        name: UpdateNormalizedEmailAsync
        nameWithType: UserManager(Of TUser).UpdateNormalizedEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateNormalizedEmailAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
        name: UpdateNormalizedEmailAsync
        nameWithType: UserManager<TUser>.UpdateNormalizedEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
        name: UpdateNormalizedEmailAsync
        nameWithType: UserManager(Of TUser).UpdateNormalizedEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.UpdateNormalizedEmailAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
        name: GenerateEmailConfirmationTokenAsync
        nameWithType: UserManager<TUser>.GenerateEmailConfirmationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateEmailConfirmationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
        name: GenerateEmailConfirmationTokenAsync
        nameWithType: UserManager(Of TUser).GenerateEmailConfirmationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateEmailConfirmationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateEmailConfirmationTokenAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
        name: GenerateEmailConfirmationTokenAsync
        nameWithType: UserManager<TUser>.GenerateEmailConfirmationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateEmailConfirmationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
        name: GenerateEmailConfirmationTokenAsync
        nameWithType: UserManager(Of TUser).GenerateEmailConfirmationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateEmailConfirmationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateEmailConfirmationTokenAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
        name: ConfirmEmailAsync
        nameWithType: UserManager<TUser>.ConfirmEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
        name: ConfirmEmailAsync
        nameWithType: UserManager(Of TUser).ConfirmEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ConfirmEmailAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
        name: ConfirmEmailAsync
        nameWithType: UserManager<TUser>.ConfirmEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
        name: ConfirmEmailAsync
        nameWithType: UserManager(Of TUser).ConfirmEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ConfirmEmailAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
        name: IsEmailConfirmedAsync
        nameWithType: UserManager<TUser>.IsEmailConfirmedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsEmailConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
        name: IsEmailConfirmedAsync
        nameWithType: UserManager(Of TUser).IsEmailConfirmedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsEmailConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsEmailConfirmedAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
        name: IsEmailConfirmedAsync
        nameWithType: UserManager<TUser>.IsEmailConfirmedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsEmailConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
        name: IsEmailConfirmedAsync
        nameWithType: UserManager(Of TUser).IsEmailConfirmedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsEmailConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.IsEmailConfirmedAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
        name: GenerateChangeEmailTokenAsync
        nameWithType: UserManager<TUser>.GenerateChangeEmailTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangeEmailTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
        name: GenerateChangeEmailTokenAsync
        nameWithType: UserManager(Of TUser).GenerateChangeEmailTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangeEmailTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateChangeEmailTokenAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
        name: GenerateChangeEmailTokenAsync
        nameWithType: UserManager<TUser>.GenerateChangeEmailTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangeEmailTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
        name: GenerateChangeEmailTokenAsync
        nameWithType: UserManager(Of TUser).GenerateChangeEmailTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangeEmailTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateChangeEmailTokenAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
        name: ChangeEmailAsync
        nameWithType: UserManager<TUser>.ChangeEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangeEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
        name: ChangeEmailAsync
        nameWithType: UserManager(Of TUser).ChangeEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangeEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangeEmailAsync({TUser},System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
        name: ChangeEmailAsync
        nameWithType: UserManager<TUser>.ChangeEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangeEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
        name: ChangeEmailAsync
        nameWithType: UserManager(Of TUser).ChangeEmailAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangeEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ChangeEmailAsync(`1,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
        name: GetPhoneNumberAsync
        nameWithType: UserManager<TUser>.GetPhoneNumberAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
        name: GetPhoneNumberAsync
        nameWithType: UserManager(Of TUser).GetPhoneNumberAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetPhoneNumberAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
        name: GetPhoneNumberAsync
        nameWithType: UserManager<TUser>.GetPhoneNumberAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
        name: GetPhoneNumberAsync
        nameWithType: UserManager(Of TUser).GetPhoneNumberAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetPhoneNumberAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
        name: SetPhoneNumberAsync
        nameWithType: UserManager<TUser>.SetPhoneNumberAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
        name: SetPhoneNumberAsync
        nameWithType: UserManager(Of TUser).SetPhoneNumberAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetPhoneNumberAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
        name: SetPhoneNumberAsync
        nameWithType: UserManager<TUser>.SetPhoneNumberAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
        name: SetPhoneNumberAsync
        nameWithType: UserManager(Of TUser).SetPhoneNumberAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetPhoneNumberAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
        name: ChangePhoneNumberAsync
        nameWithType: UserManager<TUser>.ChangePhoneNumberAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
        name: ChangePhoneNumberAsync
        nameWithType: UserManager(Of TUser).ChangePhoneNumberAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ChangePhoneNumberAsync({TUser},System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
        name: ChangePhoneNumberAsync
        nameWithType: UserManager<TUser>.ChangePhoneNumberAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
        name: ChangePhoneNumberAsync
        nameWithType: UserManager(Of TUser).ChangePhoneNumberAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ChangePhoneNumberAsync(`1,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
        name: IsPhoneNumberConfirmedAsync
        nameWithType: UserManager<TUser>.IsPhoneNumberConfirmedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsPhoneNumberConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
        name: IsPhoneNumberConfirmedAsync
        nameWithType: UserManager(Of TUser).IsPhoneNumberConfirmedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsPhoneNumberConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsPhoneNumberConfirmedAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
        name: IsPhoneNumberConfirmedAsync
        nameWithType: UserManager<TUser>.IsPhoneNumberConfirmedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsPhoneNumberConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
        name: IsPhoneNumberConfirmedAsync
        nameWithType: UserManager(Of TUser).IsPhoneNumberConfirmedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsPhoneNumberConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.IsPhoneNumberConfirmedAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
        name: GenerateChangePhoneNumberTokenAsync
        nameWithType: UserManager<TUser>.GenerateChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
        name: GenerateChangePhoneNumberTokenAsync
        nameWithType: UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateChangePhoneNumberTokenAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
        name: GenerateChangePhoneNumberTokenAsync
        nameWithType: UserManager<TUser>.GenerateChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
        name: GenerateChangePhoneNumberTokenAsync
        nameWithType: UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateChangePhoneNumberTokenAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
        name: VerifyChangePhoneNumberTokenAsync
        nameWithType: UserManager<TUser>.VerifyChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
        name: VerifyChangePhoneNumberTokenAsync
        nameWithType: UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyChangePhoneNumberTokenAsync({TUser},System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
        name: VerifyChangePhoneNumberTokenAsync
        nameWithType: UserManager<TUser>.VerifyChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
        name: VerifyChangePhoneNumberTokenAsync
        nameWithType: UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
        name: VerifyUserTokenAsync
        nameWithType: UserManager<TUser>.VerifyUserTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
        name: VerifyUserTokenAsync
        nameWithType: UserManager(Of TUser).VerifyUserTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyUserTokenAsync({TUser},System.String,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
        name: VerifyUserTokenAsync
        nameWithType: UserManager<TUser>.VerifyUserTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
        name: VerifyUserTokenAsync
        nameWithType: UserManager(Of TUser).VerifyUserTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.VerifyUserTokenAsync(`1,System.String,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
        name: GenerateUserTokenAsync
        nameWithType: UserManager<TUser>.GenerateUserTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
        name: GenerateUserTokenAsync
        nameWithType: UserManager(Of TUser).GenerateUserTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateUserTokenAsync({TUser},System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
        name: GenerateUserTokenAsync
        nameWithType: UserManager<TUser>.GenerateUserTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
        name: GenerateUserTokenAsync
        nameWithType: UserManager(Of TUser).GenerateUserTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateUserTokenAsync(`1,System.String,System.String)
  ? Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
        name: RegisterTokenProvider
        nameWithType: UserManager<TUser>.RegisterTokenProvider
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RegisterTokenProvider
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1
        name: IUserTwoFactorTokenProvider
        nameWithType: IUserTwoFactorTokenProvider
        qualifiedName: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
        name: RegisterTokenProvider
        nameWithType: UserManager(Of TUser).RegisterTokenProvider
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RegisterTokenProvider
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1
        name: IUserTwoFactorTokenProvider
        nameWithType: IUserTwoFactorTokenProvider
        qualifiedName: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
  ? Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{{TUser}})
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
        name: RegisterTokenProvider
        nameWithType: UserManager<TUser>.RegisterTokenProvider
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RegisterTokenProvider
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1
        name: IUserTwoFactorTokenProvider
        nameWithType: IUserTwoFactorTokenProvider
        qualifiedName: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
        name: RegisterTokenProvider
        nameWithType: UserManager(Of TUser).RegisterTokenProvider
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RegisterTokenProvider
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1
        name: IUserTwoFactorTokenProvider
        nameWithType: IUserTwoFactorTokenProvider
        qualifiedName: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`1})
  Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
        name: GetValidTwoFactorProvidersAsync
        nameWithType: UserManager<TUser>.GetValidTwoFactorProvidersAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetValidTwoFactorProvidersAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
        name: GetValidTwoFactorProvidersAsync
        nameWithType: UserManager(Of TUser).GetValidTwoFactorProvidersAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetValidTwoFactorProvidersAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetValidTwoFactorProvidersAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
        name: GetValidTwoFactorProvidersAsync
        nameWithType: UserManager<TUser>.GetValidTwoFactorProvidersAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetValidTwoFactorProvidersAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
        name: GetValidTwoFactorProvidersAsync
        nameWithType: UserManager(Of TUser).GetValidTwoFactorProvidersAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetValidTwoFactorProvidersAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetValidTwoFactorProvidersAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
        name: VerifyTwoFactorTokenAsync
        nameWithType: UserManager<TUser>.VerifyTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
        name: VerifyTwoFactorTokenAsync
        nameWithType: UserManager(Of TUser).VerifyTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.VerifyTwoFactorTokenAsync({TUser},System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
        name: VerifyTwoFactorTokenAsync
        nameWithType: UserManager<TUser>.VerifyTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
        name: VerifyTwoFactorTokenAsync
        nameWithType: UserManager(Of TUser).VerifyTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
        name: GenerateTwoFactorTokenAsync
        nameWithType: UserManager<TUser>.GenerateTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
        name: GenerateTwoFactorTokenAsync
        nameWithType: UserManager(Of TUser).GenerateTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateTwoFactorTokenAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
        name: GenerateTwoFactorTokenAsync
        nameWithType: UserManager<TUser>.GenerateTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
        name: GenerateTwoFactorTokenAsync
        nameWithType: UserManager(Of TUser).GenerateTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateTwoFactorTokenAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
        name: GetTwoFactorEnabledAsync
        nameWithType: UserManager<TUser>.GetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
        name: GetTwoFactorEnabledAsync
        nameWithType: UserManager(Of TUser).GetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetTwoFactorEnabledAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
        name: GetTwoFactorEnabledAsync
        nameWithType: UserManager<TUser>.GetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
        name: GetTwoFactorEnabledAsync
        nameWithType: UserManager(Of TUser).GetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetTwoFactorEnabledAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
        name: SetTwoFactorEnabledAsync
        nameWithType: UserManager<TUser>.SetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
        name: SetTwoFactorEnabledAsync
        nameWithType: UserManager(Of TUser).SetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetTwoFactorEnabledAsync({TUser},System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
        name: SetTwoFactorEnabledAsync
        nameWithType: UserManager<TUser>.SetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
        name: SetTwoFactorEnabledAsync
        nameWithType: UserManager(Of TUser).SetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetTwoFactorEnabledAsync(`1,System.Boolean)
  Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
        name: IsLockedOutAsync
        nameWithType: UserManager<TUser>.IsLockedOutAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsLockedOutAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
        name: IsLockedOutAsync
        nameWithType: UserManager(Of TUser).IsLockedOutAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsLockedOutAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.IsLockedOutAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
        name: IsLockedOutAsync
        nameWithType: UserManager<TUser>.IsLockedOutAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsLockedOutAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
        name: IsLockedOutAsync
        nameWithType: UserManager(Of TUser).IsLockedOutAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsLockedOutAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.IsLockedOutAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
        name: SetLockoutEnabledAsync
        nameWithType: UserManager<TUser>.SetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
        name: SetLockoutEnabledAsync
        nameWithType: UserManager(Of TUser).SetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetLockoutEnabledAsync({TUser},System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
        name: SetLockoutEnabledAsync
        nameWithType: UserManager<TUser>.SetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
        name: SetLockoutEnabledAsync
        nameWithType: UserManager(Of TUser).SetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetLockoutEnabledAsync(`1,System.Boolean)
  Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
        name: GetLockoutEnabledAsync
        nameWithType: UserManager<TUser>.GetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
        name: GetLockoutEnabledAsync
        nameWithType: UserManager(Of TUser).GetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetLockoutEnabledAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
        name: GetLockoutEnabledAsync
        nameWithType: UserManager<TUser>.GetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
        name: GetLockoutEnabledAsync
        nameWithType: UserManager(Of TUser).GetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetLockoutEnabledAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
        name: GetLockoutEndDateAsync
        nameWithType: UserManager<TUser>.GetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
        name: GetLockoutEndDateAsync
        nameWithType: UserManager(Of TUser).GetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetLockoutEndDateAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
        name: GetLockoutEndDateAsync
        nameWithType: UserManager<TUser>.GetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
        name: GetLockoutEndDateAsync
        nameWithType: UserManager(Of TUser).GetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetLockoutEndDateAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
        name: SetLockoutEndDateAsync
        nameWithType: UserManager<TUser>.SetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
        name: SetLockoutEndDateAsync
        nameWithType: UserManager(Of TUser).SetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetLockoutEndDateAsync({TUser},System.Nullable{System.DateTimeOffset}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
        name: SetLockoutEndDateAsync
        nameWithType: UserManager<TUser>.SetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
        name: SetLockoutEndDateAsync
        nameWithType: UserManager(Of TUser).SetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetLockoutEndDateAsync(`1,System.Nullable{System.DateTimeOffset})
  Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
        name: AccessFailedAsync
        nameWithType: UserManager<TUser>.AccessFailedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AccessFailedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
        name: AccessFailedAsync
        nameWithType: UserManager(Of TUser).AccessFailedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AccessFailedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.AccessFailedAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
        name: AccessFailedAsync
        nameWithType: UserManager<TUser>.AccessFailedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AccessFailedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
        name: AccessFailedAsync
        nameWithType: UserManager(Of TUser).AccessFailedAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AccessFailedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.AccessFailedAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
        name: ResetAccessFailedCountAsync
        nameWithType: UserManager<TUser>.ResetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
        name: ResetAccessFailedCountAsync
        nameWithType: UserManager(Of TUser).ResetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetAccessFailedCountAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
        name: ResetAccessFailedCountAsync
        nameWithType: UserManager<TUser>.ResetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
        name: ResetAccessFailedCountAsync
        nameWithType: UserManager(Of TUser).ResetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ResetAccessFailedCountAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
        name: GetAccessFailedCountAsync
        nameWithType: UserManager<TUser>.GetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
        name: GetAccessFailedCountAsync
        nameWithType: UserManager(Of TUser).GetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetAccessFailedCountAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
        name: GetAccessFailedCountAsync
        nameWithType: UserManager<TUser>.GetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
        name: GetAccessFailedCountAsync
        nameWithType: UserManager(Of TUser).GetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetAccessFailedCountAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
        name: GetUsersForClaimAsync
        nameWithType: UserManager<TUser>.GetUsersForClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersForClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
        name: GetUsersForClaimAsync
        nameWithType: UserManager(Of TUser).GetUsersForClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersForClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUsersForClaimAsync(System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
        name: GetUsersForClaimAsync
        nameWithType: UserManager<TUser>.GetUsersForClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersForClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
        name: GetUsersForClaimAsync
        nameWithType: UserManager(Of TUser).GetUsersForClaimAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersForClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUsersForClaimAsync(System.Security.Claims.Claim)
  Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
        name: GetUsersInRoleAsync
        nameWithType: UserManager<TUser>.GetUsersInRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersInRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
        name: GetUsersInRoleAsync
        nameWithType: UserManager(Of TUser).GetUsersInRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersInRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetUsersInRoleAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
        name: GetUsersInRoleAsync
        nameWithType: UserManager<TUser>.GetUsersInRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersInRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
        name: GetUsersInRoleAsync
        nameWithType: UserManager(Of TUser).GetUsersInRoleAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersInRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetUsersInRoleAsync(System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
        name: GetAuthenticationTokenAsync
        nameWithType: UserManager<TUser>.GetAuthenticationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
        name: GetAuthenticationTokenAsync
        nameWithType: UserManager(Of TUser).GetAuthenticationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetAuthenticationTokenAsync({TUser},System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
        name: GetAuthenticationTokenAsync
        nameWithType: UserManager<TUser>.GetAuthenticationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
        name: GetAuthenticationTokenAsync
        nameWithType: UserManager(Of TUser).GetAuthenticationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetAuthenticationTokenAsync(`1,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
        name: SetAuthenticationTokenAsync
        nameWithType: UserManager<TUser>.SetAuthenticationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetAuthenticationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
        name: SetAuthenticationTokenAsync
        nameWithType: UserManager(Of TUser).SetAuthenticationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetAuthenticationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
  ? Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SetAuthenticationTokenAsync({TUser},System.String,System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
        name: SetAuthenticationTokenAsync
        nameWithType: UserManager<TUser>.SetAuthenticationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetAuthenticationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
        name: SetAuthenticationTokenAsync
        nameWithType: UserManager(Of TUser).SetAuthenticationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetAuthenticationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.SetAuthenticationTokenAsync(`1,System.String,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
        name: RemoveAuthenticationTokenAsync
        nameWithType: UserManager<TUser>.RemoveAuthenticationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveAuthenticationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
        name: RemoveAuthenticationTokenAsync
        nameWithType: UserManager(Of TUser).RemoveAuthenticationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveAuthenticationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RemoveAuthenticationTokenAsync({TUser},System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
        name: RemoveAuthenticationTokenAsync
        nameWithType: UserManager<TUser>.RemoveAuthenticationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveAuthenticationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
        name: RemoveAuthenticationTokenAsync
        nameWithType: UserManager(Of TUser).RemoveAuthenticationTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveAuthenticationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RemoveAuthenticationTokenAsync(`1,System.String,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
        name: GetAuthenticatorKeyAsync
        nameWithType: UserManager<TUser>.GetAuthenticatorKeyAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticatorKeyAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
        name: GetAuthenticatorKeyAsync
        nameWithType: UserManager(Of TUser).GetAuthenticatorKeyAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticatorKeyAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetAuthenticatorKeyAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
        name: GetAuthenticatorKeyAsync
        nameWithType: UserManager<TUser>.GetAuthenticatorKeyAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticatorKeyAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
        name: GetAuthenticatorKeyAsync
        nameWithType: UserManager(Of TUser).GetAuthenticatorKeyAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticatorKeyAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetAuthenticatorKeyAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
        name: ResetAuthenticatorKeyAsync
        nameWithType: UserManager<TUser>.ResetAuthenticatorKeyAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAuthenticatorKeyAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
        name: ResetAuthenticatorKeyAsync
        nameWithType: UserManager(Of TUser).ResetAuthenticatorKeyAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAuthenticatorKeyAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ResetAuthenticatorKeyAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
        name: ResetAuthenticatorKeyAsync
        nameWithType: UserManager<TUser>.ResetAuthenticatorKeyAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAuthenticatorKeyAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
        name: ResetAuthenticatorKeyAsync
        nameWithType: UserManager(Of TUser).ResetAuthenticatorKeyAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAuthenticatorKeyAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ResetAuthenticatorKeyAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
        name: GenerateNewAuthenticatorKey
        nameWithType: UserManager<TUser>.GenerateNewAuthenticatorKey
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateNewAuthenticatorKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
        name: GenerateNewAuthenticatorKey
        nameWithType: UserManager(Of TUser).GenerateNewAuthenticatorKey
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateNewAuthenticatorKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateNewAuthenticatorKey:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
        name: GenerateNewAuthenticatorKey
        nameWithType: UserManager<TUser>.GenerateNewAuthenticatorKey
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateNewAuthenticatorKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
        name: GenerateNewAuthenticatorKey
        nameWithType: UserManager(Of TUser).GenerateNewAuthenticatorKey
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateNewAuthenticatorKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewAuthenticatorKey
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateNewAuthenticatorKey
  Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
        name: GenerateNewTwoFactorRecoveryCodesAsync
        nameWithType: UserManager<TUser>.GenerateNewTwoFactorRecoveryCodesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateNewTwoFactorRecoveryCodesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
        name: GenerateNewTwoFactorRecoveryCodesAsync
        nameWithType: UserManager(Of TUser).GenerateNewTwoFactorRecoveryCodesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateNewTwoFactorRecoveryCodesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GenerateNewTwoFactorRecoveryCodesAsync({TUser},System.Int32):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
        name: GenerateNewTwoFactorRecoveryCodesAsync
        nameWithType: UserManager<TUser>.GenerateNewTwoFactorRecoveryCodesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateNewTwoFactorRecoveryCodesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
        name: GenerateNewTwoFactorRecoveryCodesAsync
        nameWithType: UserManager(Of TUser).GenerateNewTwoFactorRecoveryCodesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateNewTwoFactorRecoveryCodesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GenerateNewTwoFactorRecoveryCodesAsync(`1,System.Int32)
  Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
        name: CreateTwoFactorRecoveryCode
        nameWithType: UserManager<TUser>.CreateTwoFactorRecoveryCode
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateTwoFactorRecoveryCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
        name: CreateTwoFactorRecoveryCode
        nameWithType: UserManager(Of TUser).CreateTwoFactorRecoveryCode
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateTwoFactorRecoveryCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateTwoFactorRecoveryCode:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
        name: CreateTwoFactorRecoveryCode
        nameWithType: UserManager<TUser>.CreateTwoFactorRecoveryCode
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateTwoFactorRecoveryCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
        name: CreateTwoFactorRecoveryCode
        nameWithType: UserManager(Of TUser).CreateTwoFactorRecoveryCode
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateTwoFactorRecoveryCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.CreateTwoFactorRecoveryCode
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.CreateTwoFactorRecoveryCode
  Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
        name: RedeemTwoFactorRecoveryCodeAsync
        nameWithType: UserManager<TUser>.RedeemTwoFactorRecoveryCodeAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RedeemTwoFactorRecoveryCodeAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
        name: RedeemTwoFactorRecoveryCodeAsync
        nameWithType: UserManager(Of TUser).RedeemTwoFactorRecoveryCodeAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RedeemTwoFactorRecoveryCodeAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.RedeemTwoFactorRecoveryCodeAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
        name: RedeemTwoFactorRecoveryCodeAsync
        nameWithType: UserManager<TUser>.RedeemTwoFactorRecoveryCodeAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RedeemTwoFactorRecoveryCodeAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
        name: RedeemTwoFactorRecoveryCodeAsync
        nameWithType: UserManager(Of TUser).RedeemTwoFactorRecoveryCodeAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RedeemTwoFactorRecoveryCodeAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.RedeemTwoFactorRecoveryCodeAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
        name: CountRecoveryCodesAsync
        nameWithType: UserManager<TUser>.CountRecoveryCodesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CountRecoveryCodesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
        name: CountRecoveryCodesAsync
        nameWithType: UserManager(Of TUser).CountRecoveryCodesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CountRecoveryCodesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CountRecoveryCodesAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
        name: CountRecoveryCodesAsync
        nameWithType: UserManager<TUser>.CountRecoveryCodesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CountRecoveryCodesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
        name: CountRecoveryCodesAsync
        nameWithType: UserManager(Of TUser).CountRecoveryCodesAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CountRecoveryCodesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.CountRecoveryCodesAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
        name: Dispose
        nameWithType: UserManager<TUser>.Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
        name: Dispose
        nameWithType: UserManager(Of TUser).Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Dispose(System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
        name: Dispose
        nameWithType: UserManager<TUser>.Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
        name: Dispose
        nameWithType: UserManager(Of TUser).Dispose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.Dispose(System.Boolean)
  Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
        name: CreateSecurityTokenAsync
        nameWithType: UserManager<TUser>.CreateSecurityTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateSecurityTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
        name: CreateSecurityTokenAsync
        nameWithType: UserManager(Of TUser).CreateSecurityTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateSecurityTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CreateSecurityTokenAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
        name: CreateSecurityTokenAsync
        nameWithType: UserManager<TUser>.CreateSecurityTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateSecurityTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
        name: CreateSecurityTokenAsync
        nameWithType: UserManager(Of TUser).CreateSecurityTokenAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateSecurityTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.CreateSecurityTokenAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
        name: UpdatePasswordHash
        nameWithType: UserManager<TUser>.UpdatePasswordHash
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdatePasswordHash
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
        name: UpdatePasswordHash
        nameWithType: UserManager(Of TUser).UpdatePasswordHash
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdatePasswordHash
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdatePasswordHash({TUser},System.String,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
        name: UpdatePasswordHash
        nameWithType: UserManager<TUser>.UpdatePasswordHash
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdatePasswordHash
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
        name: UpdatePasswordHash
        nameWithType: UserManager(Of TUser).UpdatePasswordHash
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdatePasswordHash
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdatePasswordHash(`0,System.String,System.Boolean)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.UpdatePasswordHash(`1,System.String,System.Boolean)
  Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
        name: GetChangeEmailTokenPurpose
        nameWithType: UserManager<TUser>.GetChangeEmailTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetChangeEmailTokenPurpose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
        name: GetChangeEmailTokenPurpose
        nameWithType: UserManager(Of TUser).GetChangeEmailTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetChangeEmailTokenPurpose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.GetChangeEmailTokenPurpose(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
        name: GetChangeEmailTokenPurpose
        nameWithType: UserManager<TUser>.GetChangeEmailTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetChangeEmailTokenPurpose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
        name: GetChangeEmailTokenPurpose
        nameWithType: UserManager(Of TUser).GetChangeEmailTokenPurpose
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetChangeEmailTokenPurpose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.GetChangeEmailTokenPurpose(System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
        name: ValidateUserAsync
        nameWithType: UserManager<TUser>.ValidateUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ValidateUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
        name: ValidateUserAsync
        nameWithType: UserManager(Of TUser).ValidateUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ValidateUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ValidateUserAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
        name: ValidateUserAsync
        nameWithType: UserManager<TUser>.ValidateUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ValidateUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
        name: ValidateUserAsync
        nameWithType: UserManager(Of TUser).ValidateUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ValidateUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ValidateUserAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
        name: ValidatePasswordAsync
        nameWithType: UserManager<TUser>.ValidatePasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ValidatePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
        name: ValidatePasswordAsync
        nameWithType: UserManager(Of TUser).ValidatePasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ValidatePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ValidatePasswordAsync({TUser},System.String):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
        name: ValidatePasswordAsync
        nameWithType: UserManager<TUser>.ValidatePasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ValidatePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
        name: ValidatePasswordAsync
        nameWithType: UserManager(Of TUser).ValidatePasswordAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ValidatePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ValidatePasswordAsync(`0,System.String)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ValidatePasswordAsync(`1,System.String)
  Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
        name: UpdateUserAsync
        nameWithType: UserManager<TUser>.UpdateUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
        name: UpdateUserAsync
        nameWithType: UserManager(Of TUser).UpdateUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UpdateUserAsync({TUser}):
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
        name: UpdateUserAsync
        nameWithType: UserManager<TUser>.UpdateUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
        name: UpdateUserAsync
        nameWithType: UserManager(Of TUser).UpdateUserAsync
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateUserAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(`0)
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.UpdateUserAsync(`1)
  Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
        name: ThrowIfDisposed
        nameWithType: UserManager<TUser>.ThrowIfDisposed
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ThrowIfDisposed
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
        name: ThrowIfDisposed
        nameWithType: UserManager(Of TUser).ThrowIfDisposed
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ThrowIfDisposed
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ThrowIfDisposed:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
        name: ThrowIfDisposed
        nameWithType: UserManager<TUser>.ThrowIfDisposed
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ThrowIfDisposed
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
        name: ThrowIfDisposed
        nameWithType: UserManager(Of TUser).ThrowIfDisposed
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ThrowIfDisposed
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: M:Microsoft.AspNetCore.Identity.UserManager{`1}.ThrowIfDisposed
  Microsoft.AspNetCore.Identity.UserManager`1.CancellationToken:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CancellationToken
        name: CancellationToken
        nameWithType: UserManager<TUser>.CancellationToken
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CancellationToken
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CancellationToken
        name: CancellationToken
        nameWithType: UserManager(Of TUser).CancellationToken
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CancellationToken
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.CancellationToken
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.CancellationToken:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CancellationToken
        name: CancellationToken
        nameWithType: UserManager<TUser>.CancellationToken
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CancellationToken
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.CancellationToken
        name: CancellationToken
        nameWithType: UserManager(Of TUser).CancellationToken
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CancellationToken
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.CancellationToken
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.CancellationToken
  Microsoft.AspNetCore.Identity.UserManager`1.Store:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Store
        name: Store
        nameWithType: UserManager<TUser>.Store
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Store
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Store
        name: Store
        nameWithType: UserManager(Of TUser).Store
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Store
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.Store
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Store:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Store
        name: Store
        nameWithType: UserManager<TUser>.Store
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Store
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Store
        name: Store
        nameWithType: UserManager(Of TUser).Store
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Store
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.Store
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.Store
  Microsoft.AspNetCore.Identity.UserManager`1.Logger:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Logger
        name: Logger
        nameWithType: UserManager<TUser>.Logger
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Logger
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Logger
        name: Logger
        nameWithType: UserManager(Of TUser).Logger
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Logger
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.Logger
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Logger:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Logger
        name: Logger
        nameWithType: UserManager<TUser>.Logger
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Logger
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Logger
        name: Logger
        nameWithType: UserManager(Of TUser).Logger
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Logger
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.Logger
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.Logger
  Microsoft.AspNetCore.Identity.UserManager`1.PasswordHasher:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.PasswordHasher
        name: PasswordHasher
        nameWithType: UserManager<TUser>.PasswordHasher
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.PasswordHasher
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.PasswordHasher
        name: PasswordHasher
        nameWithType: UserManager(Of TUser).PasswordHasher
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).PasswordHasher
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.PasswordHasher
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.PasswordHasher:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.PasswordHasher
        name: PasswordHasher
        nameWithType: UserManager<TUser>.PasswordHasher
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.PasswordHasher
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.PasswordHasher
        name: PasswordHasher
        nameWithType: UserManager(Of TUser).PasswordHasher
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).PasswordHasher
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.PasswordHasher
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.PasswordHasher
  Microsoft.AspNetCore.Identity.UserManager`1.UserValidators:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UserValidators
        name: UserValidators
        nameWithType: UserManager<TUser>.UserValidators
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UserValidators
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UserValidators
        name: UserValidators
        nameWithType: UserManager(Of TUser).UserValidators
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UserValidators
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.UserValidators
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.UserValidators:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UserValidators
        name: UserValidators
        nameWithType: UserManager<TUser>.UserValidators
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UserValidators
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.UserValidators
        name: UserValidators
        nameWithType: UserManager(Of TUser).UserValidators
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UserValidators
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.UserValidators
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.UserValidators
  Microsoft.AspNetCore.Identity.UserManager`1.PasswordValidators:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.PasswordValidators
        name: PasswordValidators
        nameWithType: UserManager<TUser>.PasswordValidators
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.PasswordValidators
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.PasswordValidators
        name: PasswordValidators
        nameWithType: UserManager(Of TUser).PasswordValidators
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).PasswordValidators
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.PasswordValidators
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.PasswordValidators:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.PasswordValidators
        name: PasswordValidators
        nameWithType: UserManager<TUser>.PasswordValidators
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.PasswordValidators
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.PasswordValidators
        name: PasswordValidators
        nameWithType: UserManager(Of TUser).PasswordValidators
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).PasswordValidators
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.PasswordValidators
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.PasswordValidators
  Microsoft.AspNetCore.Identity.UserManager`1.KeyNormalizer:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.KeyNormalizer
        name: KeyNormalizer
        nameWithType: UserManager<TUser>.KeyNormalizer
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.KeyNormalizer
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.KeyNormalizer
        name: KeyNormalizer
        nameWithType: UserManager(Of TUser).KeyNormalizer
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).KeyNormalizer
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.KeyNormalizer
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.KeyNormalizer:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.KeyNormalizer
        name: KeyNormalizer
        nameWithType: UserManager<TUser>.KeyNormalizer
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.KeyNormalizer
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.KeyNormalizer
        name: KeyNormalizer
        nameWithType: UserManager(Of TUser).KeyNormalizer
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).KeyNormalizer
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.KeyNormalizer
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.KeyNormalizer
  Microsoft.AspNetCore.Identity.UserManager`1.ErrorDescriber:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ErrorDescriber
        name: ErrorDescriber
        nameWithType: UserManager<TUser>.ErrorDescriber
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ErrorDescriber
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ErrorDescriber
        name: ErrorDescriber
        nameWithType: UserManager(Of TUser).ErrorDescriber
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ErrorDescriber
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.ErrorDescriber
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.ErrorDescriber:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ErrorDescriber
        name: ErrorDescriber
        nameWithType: UserManager<TUser>.ErrorDescriber
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ErrorDescriber
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.ErrorDescriber
        name: ErrorDescriber
        nameWithType: UserManager(Of TUser).ErrorDescriber
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ErrorDescriber
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.ErrorDescriber
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.ErrorDescriber
  Microsoft.AspNetCore.Identity.UserManager`1.Options:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Options
        name: Options
        nameWithType: UserManager<TUser>.Options
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Options
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Options
        name: Options
        nameWithType: UserManager(Of TUser).Options
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Options
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.Options
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Options:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Options
        name: Options
        nameWithType: UserManager<TUser>.Options
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Options
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Options
        name: Options
        nameWithType: UserManager(Of TUser).Options
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Options
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.Options
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.Options
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens
        name: SupportsUserAuthenticationTokens
        nameWithType: UserManager<TUser>.SupportsUserAuthenticationTokens
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserAuthenticationTokens
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens
        name: SupportsUserAuthenticationTokens
        nameWithType: UserManager(Of TUser).SupportsUserAuthenticationTokens
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserAuthenticationTokens
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserAuthenticationTokens:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens
        name: SupportsUserAuthenticationTokens
        nameWithType: UserManager<TUser>.SupportsUserAuthenticationTokens
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserAuthenticationTokens
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens
        name: SupportsUserAuthenticationTokens
        nameWithType: UserManager(Of TUser).SupportsUserAuthenticationTokens
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserAuthenticationTokens
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserAuthenticationTokens
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticatorKey:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticatorKey
        name: SupportsUserAuthenticatorKey
        nameWithType: UserManager<TUser>.SupportsUserAuthenticatorKey
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserAuthenticatorKey
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticatorKey
        name: SupportsUserAuthenticatorKey
        nameWithType: UserManager(Of TUser).SupportsUserAuthenticatorKey
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserAuthenticatorKey
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticatorKey
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserAuthenticatorKey:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticatorKey
        name: SupportsUserAuthenticatorKey
        nameWithType: UserManager<TUser>.SupportsUserAuthenticatorKey
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserAuthenticatorKey
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticatorKey
        name: SupportsUserAuthenticatorKey
        nameWithType: UserManager(Of TUser).SupportsUserAuthenticatorKey
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserAuthenticatorKey
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticatorKey
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserAuthenticatorKey
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactorRecoveryCodes:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactorRecoveryCodes
        name: SupportsUserTwoFactorRecoveryCodes
        nameWithType: UserManager<TUser>.SupportsUserTwoFactorRecoveryCodes
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserTwoFactorRecoveryCodes
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactorRecoveryCodes
        name: SupportsUserTwoFactorRecoveryCodes
        nameWithType: UserManager(Of TUser).SupportsUserTwoFactorRecoveryCodes
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserTwoFactorRecoveryCodes
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactorRecoveryCodes
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserTwoFactorRecoveryCodes:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactorRecoveryCodes
        name: SupportsUserTwoFactorRecoveryCodes
        nameWithType: UserManager<TUser>.SupportsUserTwoFactorRecoveryCodes
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserTwoFactorRecoveryCodes
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactorRecoveryCodes
        name: SupportsUserTwoFactorRecoveryCodes
        nameWithType: UserManager(Of TUser).SupportsUserTwoFactorRecoveryCodes
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserTwoFactorRecoveryCodes
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactorRecoveryCodes
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserTwoFactorRecoveryCodes
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor
        name: SupportsUserTwoFactor
        nameWithType: UserManager<TUser>.SupportsUserTwoFactor
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserTwoFactor
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor
        name: SupportsUserTwoFactor
        nameWithType: UserManager(Of TUser).SupportsUserTwoFactor
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserTwoFactor
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserTwoFactor:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor
        name: SupportsUserTwoFactor
        nameWithType: UserManager<TUser>.SupportsUserTwoFactor
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserTwoFactor
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor
        name: SupportsUserTwoFactor
        nameWithType: UserManager(Of TUser).SupportsUserTwoFactor
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserTwoFactor
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserTwoFactor
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword
        name: SupportsUserPassword
        nameWithType: UserManager<TUser>.SupportsUserPassword
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserPassword
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword
        name: SupportsUserPassword
        nameWithType: UserManager(Of TUser).SupportsUserPassword
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserPassword
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserPassword:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword
        name: SupportsUserPassword
        nameWithType: UserManager<TUser>.SupportsUserPassword
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserPassword
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword
        name: SupportsUserPassword
        nameWithType: UserManager(Of TUser).SupportsUserPassword
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserPassword
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserPassword
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp
        name: SupportsUserSecurityStamp
        nameWithType: UserManager<TUser>.SupportsUserSecurityStamp
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserSecurityStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp
        name: SupportsUserSecurityStamp
        nameWithType: UserManager(Of TUser).SupportsUserSecurityStamp
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserSecurityStamp
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserSecurityStamp:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp
        name: SupportsUserSecurityStamp
        nameWithType: UserManager<TUser>.SupportsUserSecurityStamp
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserSecurityStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp
        name: SupportsUserSecurityStamp
        nameWithType: UserManager(Of TUser).SupportsUserSecurityStamp
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserSecurityStamp
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserSecurityStamp
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole
        name: SupportsUserRole
        nameWithType: UserManager<TUser>.SupportsUserRole
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserRole
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole
        name: SupportsUserRole
        nameWithType: UserManager(Of TUser).SupportsUserRole
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserRole
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserRole:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole
        name: SupportsUserRole
        nameWithType: UserManager<TUser>.SupportsUserRole
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserRole
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole
        name: SupportsUserRole
        nameWithType: UserManager(Of TUser).SupportsUserRole
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserRole
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserRole
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin
        name: SupportsUserLogin
        nameWithType: UserManager<TUser>.SupportsUserLogin
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserLogin
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin
        name: SupportsUserLogin
        nameWithType: UserManager(Of TUser).SupportsUserLogin
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserLogin
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserLogin:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin
        name: SupportsUserLogin
        nameWithType: UserManager<TUser>.SupportsUserLogin
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserLogin
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin
        name: SupportsUserLogin
        nameWithType: UserManager(Of TUser).SupportsUserLogin
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserLogin
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserLogin
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail
        name: SupportsUserEmail
        nameWithType: UserManager<TUser>.SupportsUserEmail
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserEmail
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail
        name: SupportsUserEmail
        nameWithType: UserManager(Of TUser).SupportsUserEmail
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserEmail
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserEmail:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail
        name: SupportsUserEmail
        nameWithType: UserManager<TUser>.SupportsUserEmail
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserEmail
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail
        name: SupportsUserEmail
        nameWithType: UserManager(Of TUser).SupportsUserEmail
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserEmail
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserEmail
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber
        name: SupportsUserPhoneNumber
        nameWithType: UserManager<TUser>.SupportsUserPhoneNumber
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserPhoneNumber
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber
        name: SupportsUserPhoneNumber
        nameWithType: UserManager(Of TUser).SupportsUserPhoneNumber
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserPhoneNumber
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserPhoneNumber:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber
        name: SupportsUserPhoneNumber
        nameWithType: UserManager<TUser>.SupportsUserPhoneNumber
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserPhoneNumber
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber
        name: SupportsUserPhoneNumber
        nameWithType: UserManager(Of TUser).SupportsUserPhoneNumber
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserPhoneNumber
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserPhoneNumber
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim
        name: SupportsUserClaim
        nameWithType: UserManager<TUser>.SupportsUserClaim
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserClaim
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim
        name: SupportsUserClaim
        nameWithType: UserManager(Of TUser).SupportsUserClaim
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserClaim
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserClaim:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim
        name: SupportsUserClaim
        nameWithType: UserManager<TUser>.SupportsUserClaim
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserClaim
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim
        name: SupportsUserClaim
        nameWithType: UserManager(Of TUser).SupportsUserClaim
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserClaim
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserClaim
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout
        name: SupportsUserLockout
        nameWithType: UserManager<TUser>.SupportsUserLockout
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserLockout
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout
        name: SupportsUserLockout
        nameWithType: UserManager(Of TUser).SupportsUserLockout
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserLockout
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsUserLockout:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout
        name: SupportsUserLockout
        nameWithType: UserManager<TUser>.SupportsUserLockout
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserLockout
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout
        name: SupportsUserLockout
        nameWithType: UserManager(Of TUser).SupportsUserLockout
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserLockout
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsUserLockout
  Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers
        name: SupportsQueryableUsers
        nameWithType: UserManager<TUser>.SupportsQueryableUsers
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsQueryableUsers
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers
        name: SupportsQueryableUsers
        nameWithType: UserManager(Of TUser).SupportsQueryableUsers
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsQueryableUsers
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.SupportsQueryableUsers:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers
        name: SupportsQueryableUsers
        nameWithType: UserManager<TUser>.SupportsQueryableUsers
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsQueryableUsers
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers
        name: SupportsQueryableUsers
        nameWithType: UserManager(Of TUser).SupportsQueryableUsers
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsQueryableUsers
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.SupportsQueryableUsers
  Microsoft.AspNetCore.Identity.UserManager`1.Users:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Users
        name: Users
        nameWithType: UserManager<TUser>.Users
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Users
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Users
        name: Users
        nameWithType: UserManager(Of TUser).Users
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Users
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.Users
  Microsoft.AspNetCore.Identity.UserManager{{TUser}}.Users:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Users
        name: Users
        nameWithType: UserManager<TUser>.Users
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Users
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1.Users
        name: Users
        nameWithType: UserManager(Of TUser).Users
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Users
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1.Users
    parent: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    commentId: P:Microsoft.AspNetCore.Identity.UserManager{`1}.Users
  Microsoft.AspNetCore.Identity.IUserStore`1:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IUserStore`1
        name: IUserStore
        nameWithType: IUserStore
        qualifiedName: Microsoft.AspNetCore.Identity.IUserStore
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IUserStore`1
        name: IUserStore
        nameWithType: IUserStore
        qualifiedName: Microsoft.AspNetCore.Identity.IUserStore
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNetCore.Identity.IUserStore`1
  Microsoft.AspNetCore.Identity.IUserStore{{TUser}}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IUserStore`1
        name: IUserStore
        nameWithType: IUserStore
        qualifiedName: Microsoft.AspNetCore.Identity.IUserStore
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IUserStore`1
        name: IUserStore
        nameWithType: IUserStore
        qualifiedName: Microsoft.AspNetCore.Identity.IUserStore
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IUserStore`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.IUserStore{`1}
  Microsoft.AspNetCore.Identity.IPasswordHasher`1:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IPasswordHasher`1
        name: IPasswordHasher
        nameWithType: IPasswordHasher
        qualifiedName: Microsoft.AspNetCore.Identity.IPasswordHasher
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IPasswordHasher`1
        name: IPasswordHasher
        nameWithType: IPasswordHasher
        qualifiedName: Microsoft.AspNetCore.Identity.IPasswordHasher
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNetCore.Identity.IPasswordHasher`1
  Microsoft.AspNetCore.Identity.IPasswordHasher{{TUser}}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IPasswordHasher`1
        name: IPasswordHasher
        nameWithType: IPasswordHasher
        qualifiedName: Microsoft.AspNetCore.Identity.IPasswordHasher
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IPasswordHasher`1
        name: IPasswordHasher
        nameWithType: IPasswordHasher
        qualifiedName: Microsoft.AspNetCore.Identity.IPasswordHasher
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.IPasswordHasher{`1}
  System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{{TUser}}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Identity.IUserValidator`1
        name: IUserValidator
        nameWithType: IUserValidator
        qualifiedName: Microsoft.AspNetCore.Identity.IUserValidator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Identity.IUserValidator`1
        name: IUserValidator
        nameWithType: IUserValidator
        qualifiedName: Microsoft.AspNetCore.Identity.IUserValidator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{`1}}
  System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{{TUser}}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Identity.IPasswordValidator`1
        name: IPasswordValidator
        nameWithType: IPasswordValidator
        qualifiedName: Microsoft.AspNetCore.Identity.IPasswordValidator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Identity.IPasswordValidator`1
        name: IPasswordValidator
        nameWithType: IPasswordValidator
        qualifiedName: Microsoft.AspNetCore.Identity.IPasswordValidator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{`1}}
  System.IServiceProvider:
    name:
      CSharp:
      - id: System.IServiceProvider
        name: IServiceProvider
        nameWithType: IServiceProvider
        qualifiedName: System.IServiceProvider
        isExternal: true
      VB:
      - id: System.IServiceProvider
        name: IServiceProvider
        nameWithType: IServiceProvider
        qualifiedName: System.IServiceProvider
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.IServiceProvider
  Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{{TUser}}}:
    name:
      CSharp:
      - id: Microsoft.Extensions.Logging.ILogger`1
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Extensions.Logging.ILogger
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Identity.UserManager`1
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.Extensions.Logging.ILogger`1
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Extensions.Logging.ILogger
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Identity.UserManager`1
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Extensions.Logging.ILogger`1
    parent: Microsoft.Extensions.Logging
    commentId: T:Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{`1}}
  es.efor.Auth.Managers.IdentityUserManager`2.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityUserManager`2.#ctor*
        name: IdentityUserManager
        nameWithType: IdentityUserManager<TUserId, TUser>.IdentityUserManager
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.IdentityUserManager
      VB:
      - id: es.efor.Auth.Managers.IdentityUserManager`2.#ctor*
        name: IdentityUserManager
        nameWithType: IdentityUserManager(Of TUserId, TUser).IdentityUserManager
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).IdentityUserManager
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityUserManager`2.#ctor
  System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TUser}}}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}
  System.Collections.Generic.IEnumerable{{TUserId}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{`0}
  es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync*
        name: FindByIdAsync
        nameWithType: IdentityUserManager<TUserId, TUser>.FindByIdAsync
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.FindByIdAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync*
        name: FindByIdAsync
        nameWithType: IdentityUserManager(Of TUserId, TUser).FindByIdAsync
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).FindByIdAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityUserManager`2.FindByIdAsync
  System.Threading.Tasks.Task{{TUser}}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{`1}
  TUserId:
    name:
      CSharp:
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      VB:
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
    isDefinition: true
    commentId: '!:TUserId'
  '{TUserId}':
    name:
      CSharp:
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      VB:
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
    isDefinition: false
    definition: TUserId
    commentId: '!:TUserId'
  System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{{TUserId},Microsoft.AspNetCore.Identity.IdentityResult}}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Identity.IdentityResult
        name: IdentityResult
        nameWithType: IdentityResult
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUserId
        nameWithType: TUserId
        qualifiedName: TUserId
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNetCore.Identity.IdentityResult
        name: IdentityResult
        nameWithType: IdentityResult
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{`0,Microsoft.AspNetCore.Identity.IdentityResult}}
  System.Collections.Generic.IEnumerable{{TUser}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{`1}
  es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync*
        name: UpdateAsync
        nameWithType: IdentityUserManager<TUserId, TUser>.UpdateAsync
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.UpdateAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync*
        name: UpdateAsync
        nameWithType: IdentityUserManager(Of TUserId, TUser).UpdateAsync
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).UpdateAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityUserManager`2.UpdateAsync
  System.Threading.Tasks.Task{System.Boolean}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Boolean}
  TUser:
    name:
      CSharp:
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      VB:
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
    isDefinition: true
  '{TUser}':
    name:
      CSharp:
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      VB:
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
    isDefinition: false
    definition: TUser
    commentId: '!:TUser'
  es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync*
        name: IsInAllRolesAsync
        nameWithType: IdentityUserManager<TUserId, TUser>.IsInAllRolesAsync
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.IsInAllRolesAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync*
        name: IsInAllRolesAsync
        nameWithType: IdentityUserManager(Of TUserId, TUser).IsInAllRolesAsync
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).IsInAllRolesAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityUserManager`2.IsInAllRolesAsync
  es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync*:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync*
        name: IsInAnyRoleAsync
        nameWithType: IdentityUserManager<TUserId, TUser>.IsInAnyRoleAsync
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>.IsInAnyRoleAsync
      VB:
      - id: es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync*
        name: IsInAnyRoleAsync
        nameWithType: IdentityUserManager(Of TUserId, TUser).IsInAnyRoleAsync
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser).IsInAnyRoleAsync
    isDefinition: true
    commentId: Overload:es.efor.Auth.Managers.IdentityUserManager`2.IsInAnyRoleAsync
  Microsoft.AspNetCore.Http.RequestDelegate:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Http.RequestDelegate
        name: RequestDelegate
        nameWithType: RequestDelegate
        qualifiedName: Microsoft.AspNetCore.Http.RequestDelegate
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Http.RequestDelegate
        name: RequestDelegate
        nameWithType: RequestDelegate
        qualifiedName: Microsoft.AspNetCore.Http.RequestDelegate
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Http
    commentId: T:Microsoft.AspNetCore.Http.RequestDelegate
  es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.#ctor*
        name: ClaimRefreshMiddleware
        nameWithType: ClaimRefreshMiddleware<TKey, TUser, TSignInManager, TUserManager, TRole>.ClaimRefreshMiddleware
        qualifiedName: es.efor.Auth.Middlewares.ClaimRefreshMiddleware<TKey, TUser, TSignInManager, TUserManager, TRole>.ClaimRefreshMiddleware
      VB:
      - id: es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.#ctor*
        name: ClaimRefreshMiddleware
        nameWithType: ClaimRefreshMiddleware(Of TKey, TUser, TSignInManager, TUserManager, TRole).ClaimRefreshMiddleware
        qualifiedName: es.efor.Auth.Middlewares.ClaimRefreshMiddleware(Of TKey, TUser, TSignInManager, TUserManager, TRole).ClaimRefreshMiddleware
    isDefinition: true
    commentId: Overload:es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.#ctor
  Microsoft.AspNetCore.Http.HttpContext:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Http.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: Microsoft.AspNetCore.Http.HttpContext
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Http.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: Microsoft.AspNetCore.Http.HttpContext
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Http
    commentId: T:Microsoft.AspNetCore.Http.HttpContext
  TSignInManager:
    name:
      CSharp:
      - name: TSignInManager
        nameWithType: TSignInManager
        qualifiedName: TSignInManager
      VB:
      - name: TSignInManager
        nameWithType: TSignInManager
        qualifiedName: TSignInManager
    isDefinition: true
    commentId: '!:TSignInManager'
  '{TSignInManager}':
    name:
      CSharp:
      - name: TSignInManager
        nameWithType: TSignInManager
        qualifiedName: TSignInManager
      VB:
      - name: TSignInManager
        nameWithType: TSignInManager
        qualifiedName: TSignInManager
    isDefinition: false
    definition: TSignInManager
    commentId: '!:TSignInManager'
  TUserManager:
    name:
      CSharp:
      - name: TUserManager
        nameWithType: TUserManager
        qualifiedName: TUserManager
      VB:
      - name: TUserManager
        nameWithType: TUserManager
        qualifiedName: TUserManager
    isDefinition: true
  '{TUserManager}':
    name:
      CSharp:
      - name: TUserManager
        nameWithType: TUserManager
        qualifiedName: TUserManager
      VB:
      - name: TUserManager
        nameWithType: TUserManager
        qualifiedName: TUserManager
    isDefinition: false
    definition: TUserManager
    commentId: '!:TUserManager'
  es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.Invoke*:
    name:
      CSharp:
      - id: es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.Invoke*
        name: Invoke
        nameWithType: ClaimRefreshMiddleware<TKey, TUser, TSignInManager, TUserManager, TRole>.Invoke
        qualifiedName: es.efor.Auth.Middlewares.ClaimRefreshMiddleware<TKey, TUser, TSignInManager, TUserManager, TRole>.Invoke
      VB:
      - id: es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.Invoke*
        name: Invoke
        nameWithType: ClaimRefreshMiddleware(Of TKey, TUser, TSignInManager, TUserManager, TRole).Invoke
        qualifiedName: es.efor.Auth.Middlewares.ClaimRefreshMiddleware(Of TKey, TUser, TSignInManager, TUserManager, TRole).Invoke
    isDefinition: true
    commentId: Overload:es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5.Invoke
  es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5:
    name:
      CSharp:
      - id: es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5
        name: ClaimRefreshMiddleware
        nameWithType: ClaimRefreshMiddleware
        qualifiedName: es.efor.Auth.Middlewares.ClaimRefreshMiddleware
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TSignInManager
        nameWithType: TSignInManager
        qualifiedName: TSignInManager
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUserManager
        nameWithType: TUserManager
        qualifiedName: TUserManager
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5
        name: ClaimRefreshMiddleware
        nameWithType: ClaimRefreshMiddleware
        qualifiedName: es.efor.Auth.Middlewares.ClaimRefreshMiddleware
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TSignInManager
        nameWithType: TSignInManager
        qualifiedName: TSignInManager
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUserManager
        nameWithType: TUserManager
        qualifiedName: TUserManager
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:es.efor.Auth.Middlewares.ClaimRefreshMiddleware`5
  es.efor.Auth.Middlewares:
    name:
      CSharp:
      - name: es.efor.Auth.Middlewares
        nameWithType: es.efor.Auth.Middlewares
        qualifiedName: es.efor.Auth.Middlewares
      VB:
      - name: es.efor.Auth.Middlewares
        nameWithType: es.efor.Auth.Middlewares
        qualifiedName: es.efor.Auth.Middlewares
    isDefinition: true
    commentId: N:es.efor.Auth.Middlewares
  System.DateTimeOffset:
    name:
      CSharp:
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      VB:
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.DateTimeOffset
  es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidTo*:
    name:
      CSharp:
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidTo*
        name: ValidTo
        nameWithType: JsonWebTokenResponse.ValidTo
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidTo
      VB:
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidTo*
        name: ValidTo
        nameWithType: JsonWebTokenResponse.ValidTo
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidTo
    isDefinition: true
    commentId: Overload:es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidTo
  es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidFrom*:
    name:
      CSharp:
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidFrom*
        name: ValidFrom
        nameWithType: JsonWebTokenResponse.ValidFrom
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidFrom
      VB:
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidFrom*
        name: ValidFrom
        nameWithType: JsonWebTokenResponse.ValidFrom
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidFrom
    isDefinition: true
    commentId: Overload:es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.ValidFrom
  es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.AccessToken*:
    name:
      CSharp:
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.AccessToken*
        name: AccessToken
        nameWithType: JsonWebTokenResponse.AccessToken
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.AccessToken
      VB:
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.AccessToken*
        name: AccessToken
        nameWithType: JsonWebTokenResponse.AccessToken
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.AccessToken
    isDefinition: true
    commentId: Overload:es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.AccessToken
  System.IdentityModel.Tokens.Jwt:
    name:
      CSharp:
      - name: System.IdentityModel.Tokens.Jwt
        nameWithType: System.IdentityModel.Tokens.Jwt
        qualifiedName: System.IdentityModel.Tokens.Jwt
        isExternal: true
      VB:
      - name: System.IdentityModel.Tokens.Jwt
        nameWithType: System.IdentityModel.Tokens.Jwt
        qualifiedName: System.IdentityModel.Tokens.Jwt
    isDefinition: true
    commentId: N:System.IdentityModel.Tokens.Jwt
  System.IdentityModel.Tokens.Jwt.JwtSecurityToken:
    name:
      CSharp:
      - id: System.IdentityModel.Tokens.Jwt.JwtSecurityToken
        name: JwtSecurityToken
        nameWithType: JwtSecurityToken
        qualifiedName: System.IdentityModel.Tokens.Jwt.JwtSecurityToken
        isExternal: true
      VB:
      - id: System.IdentityModel.Tokens.Jwt.JwtSecurityToken
        name: JwtSecurityToken
        nameWithType: JwtSecurityToken
        qualifiedName: System.IdentityModel.Tokens.Jwt.JwtSecurityToken
        isExternal: true
    isDefinition: true
    parent: System.IdentityModel.Tokens.Jwt
    commentId: T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken
  es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.#ctor*
        name: JsonWebTokenResponse
        nameWithType: JsonWebTokenResponse.JsonWebTokenResponse
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.JsonWebTokenResponse
      VB:
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.#ctor*
        name: JsonWebTokenResponse
        nameWithType: JsonWebTokenResponse.JsonWebTokenResponse
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.JsonWebTokenResponse
    isDefinition: true
    commentId: Overload:es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.#ctor
  es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.FromToken*:
    name:
      CSharp:
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.FromToken*
        name: FromToken
        nameWithType: JsonWebTokenResponse.FromToken
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.FromToken
      VB:
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.FromToken*
        name: FromToken
        nameWithType: JsonWebTokenResponse.FromToken
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.FromToken
    isDefinition: true
    commentId: Overload:es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse.FromToken
  Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults.AuthenticationScheme:
    commentId: F:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults.AuthenticationScheme
  es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Scheme*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Scheme*
        name: Scheme
        nameWithType: CookieIdentityConfiguration.Scheme
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Scheme
      VB:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Scheme*
        name: Scheme
        nameWithType: CookieIdentityConfiguration.Scheme
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Scheme
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Scheme
  es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogin*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogin*
        name: PathAuthLogin
        nameWithType: CookieIdentityConfiguration.PathAuthLogin
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogin
      VB:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogin*
        name: PathAuthLogin
        nameWithType: CookieIdentityConfiguration.PathAuthLogin
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogin
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogin
  es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogout*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogout*
        name: PathAuthLogout
        nameWithType: CookieIdentityConfiguration.PathAuthLogout
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogout
      VB:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogout*
        name: PathAuthLogout
        nameWithType: CookieIdentityConfiguration.PathAuthLogout
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogout
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthLogout
  es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthAccessDenied*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthAccessDenied*
        name: PathAuthAccessDenied
        nameWithType: CookieIdentityConfiguration.PathAuthAccessDenied
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthAccessDenied
      VB:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthAccessDenied*
        name: PathAuthAccessDenied
        nameWithType: CookieIdentityConfiguration.PathAuthAccessDenied
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthAccessDenied
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.PathAuthAccessDenied
  System.Action`1:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Action`1
  System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions
        name: CookieAuthenticationOptions
        nameWithType: CookieAuthenticationOptions
        qualifiedName: Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions
        name: CookieAuthenticationOptions
        nameWithType: CookieAuthenticationOptions
        qualifiedName: Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions}
  es.efor.Auth.Models.Configs.CookieIdentityConfiguration.OptionModifier*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.OptionModifier*
        name: OptionModifier
        nameWithType: CookieIdentityConfiguration.OptionModifier
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.OptionModifier
      VB:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.OptionModifier*
        name: OptionModifier
        nameWithType: CookieIdentityConfiguration.OptionModifier
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.OptionModifier
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.OptionModifier
  es.efor.Auth.Models.Configs.CookieIdentityConfiguration.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.#ctor*
        name: CookieIdentityConfiguration
        nameWithType: CookieIdentityConfiguration.CookieIdentityConfiguration
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.CookieIdentityConfiguration
      VB:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.#ctor*
        name: CookieIdentityConfiguration
        nameWithType: CookieIdentityConfiguration.CookieIdentityConfiguration
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.CookieIdentityConfiguration
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.#ctor
  es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Validate*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Validate*
        name: Validate
        nameWithType: CookieIdentityConfiguration.Validate
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Validate
      VB:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Validate*
        name: Validate
        nameWithType: CookieIdentityConfiguration.Validate
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Validate
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.CookieIdentityConfiguration.Validate
  es.efor.Auth.Models.Configs.CookieIdentityConfiguration:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration
        name: CookieIdentityConfiguration
        nameWithType: CookieIdentityConfiguration
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration
      VB:
      - id: es.efor.Auth.Models.Configs.CookieIdentityConfiguration
        name: CookieIdentityConfiguration
        nameWithType: CookieIdentityConfiguration
        qualifiedName: es.efor.Auth.Models.Configs.CookieIdentityConfiguration
    isDefinition: true
    parent: es.efor.Auth.Models.Configs
    commentId: T:es.efor.Auth.Models.Configs.CookieIdentityConfiguration
  es.efor.Auth.Models.Configs.IdentityConfiguration.Cookie*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.IdentityConfiguration.Cookie*
        name: Cookie
        nameWithType: IdentityConfiguration.Cookie
        qualifiedName: es.efor.Auth.Models.Configs.IdentityConfiguration.Cookie
      VB:
      - id: es.efor.Auth.Models.Configs.IdentityConfiguration.Cookie*
        name: Cookie
        nameWithType: IdentityConfiguration.Cookie
        qualifiedName: es.efor.Auth.Models.Configs.IdentityConfiguration.Cookie
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.IdentityConfiguration.Cookie
  es.efor.Auth.Models.Configs.JwtIdentityConfiguration:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration
        name: JwtIdentityConfiguration
        nameWithType: JwtIdentityConfiguration
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration
      VB:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration
        name: JwtIdentityConfiguration
        nameWithType: JwtIdentityConfiguration
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration
    isDefinition: true
    parent: es.efor.Auth.Models.Configs
    commentId: T:es.efor.Auth.Models.Configs.JwtIdentityConfiguration
  es.efor.Auth.Models.Configs.IdentityConfiguration.JsonWebToken*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.IdentityConfiguration.JsonWebToken*
        name: JsonWebToken
        nameWithType: IdentityConfiguration.JsonWebToken
        qualifiedName: es.efor.Auth.Models.Configs.IdentityConfiguration.JsonWebToken
      VB:
      - id: es.efor.Auth.Models.Configs.IdentityConfiguration.JsonWebToken*
        name: JsonWebToken
        nameWithType: IdentityConfiguration.JsonWebToken
        qualifiedName: es.efor.Auth.Models.Configs.IdentityConfiguration.JsonWebToken
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.IdentityConfiguration.JsonWebToken
  es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies*
        name: UseCookies
        nameWithType: IdentityConfiguration.UseCookies
        qualifiedName: es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies
      VB:
      - id: es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies*
        name: UseCookies
        nameWithType: IdentityConfiguration.UseCookies
        qualifiedName: es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.IdentityConfiguration.UseCookies
  es.efor.Auth.Models.Configs.IdentityConfiguration.UseJsonWebTokens*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.IdentityConfiguration.UseJsonWebTokens*
        name: UseJsonWebTokens
        nameWithType: IdentityConfiguration.UseJsonWebTokens
        qualifiedName: es.efor.Auth.Models.Configs.IdentityConfiguration.UseJsonWebTokens
      VB:
      - id: es.efor.Auth.Models.Configs.IdentityConfiguration.UseJsonWebTokens*
        name: UseJsonWebTokens
        nameWithType: IdentityConfiguration.UseJsonWebTokens
        qualifiedName: es.efor.Auth.Models.Configs.IdentityConfiguration.UseJsonWebTokens
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.IdentityConfiguration.UseJsonWebTokens
  es.efor.Auth.Models.Configs.IdentityConfiguration.Validate*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.IdentityConfiguration.Validate*
        name: Validate
        nameWithType: IdentityConfiguration.Validate
        qualifiedName: es.efor.Auth.Models.Configs.IdentityConfiguration.Validate
      VB:
      - id: es.efor.Auth.Models.Configs.IdentityConfiguration.Validate*
        name: Validate
        nameWithType: IdentityConfiguration.Validate
        qualifiedName: es.efor.Auth.Models.Configs.IdentityConfiguration.Validate
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.IdentityConfiguration.Validate
  es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Scheme*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Scheme*
        name: Scheme
        nameWithType: JwtIdentityConfiguration.Scheme
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Scheme
      VB:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Scheme*
        name: Scheme
        nameWithType: JwtIdentityConfiguration.Scheme
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Scheme
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Scheme
  es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Audience*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Audience*
        name: Audience
        nameWithType: JwtIdentityConfiguration.Audience
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Audience
      VB:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Audience*
        name: Audience
        nameWithType: JwtIdentityConfiguration.Audience
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Audience
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Audience
  es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Issuer*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Issuer*
        name: Issuer
        nameWithType: JwtIdentityConfiguration.Issuer
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Issuer
      VB:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Issuer*
        name: Issuer
        nameWithType: JwtIdentityConfiguration.Issuer
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Issuer
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Issuer
  System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions
        name: JwtBearerOptions
        nameWithType: JwtBearerOptions
        qualifiedName: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions
        name: JwtBearerOptions
        nameWithType: JwtBearerOptions
        qualifiedName: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions}
  es.efor.Auth.Models.Configs.JwtIdentityConfiguration.OptionModifier*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.OptionModifier*
        name: OptionModifier
        nameWithType: JwtIdentityConfiguration.OptionModifier
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.OptionModifier
      VB:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.OptionModifier*
        name: OptionModifier
        nameWithType: JwtIdentityConfiguration.OptionModifier
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.OptionModifier
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.JwtIdentityConfiguration.OptionModifier
  es.efor.Auth.Models.Configs.JwtIdentityConfiguration.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.#ctor*
        name: JwtIdentityConfiguration
        nameWithType: JwtIdentityConfiguration.JwtIdentityConfiguration
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.JwtIdentityConfiguration
      VB:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.#ctor*
        name: JwtIdentityConfiguration
        nameWithType: JwtIdentityConfiguration.JwtIdentityConfiguration
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.JwtIdentityConfiguration
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.JwtIdentityConfiguration.#ctor
  es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Validate*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Validate*
        name: Validate
        nameWithType: JwtIdentityConfiguration.Validate
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Validate
      VB:
      - id: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Validate*
        name: Validate
        nameWithType: JwtIdentityConfiguration.Validate
        qualifiedName: es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Validate
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Configs.JwtIdentityConfiguration.Validate
  es.efor.Auth.Models.Entities.Role`1:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Entities.Role`1
        name: Role
        nameWithType: Role
        qualifiedName: es.efor.Auth.Models.Entities.Role
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TId
        nameWithType: TId
        qualifiedName: TId
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Auth.Models.Entities.Role`1
        name: Role
        nameWithType: Role
        qualifiedName: es.efor.Auth.Models.Entities.Role
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TId
        nameWithType: TId
        qualifiedName: TId
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:es.efor.Auth.Models.Entities.Role`1
  es.efor.Auth.Models.Entities:
    name:
      CSharp:
      - name: es.efor.Auth.Models.Entities
        nameWithType: es.efor.Auth.Models.Entities
        qualifiedName: es.efor.Auth.Models.Entities
      VB:
      - name: es.efor.Auth.Models.Entities
        nameWithType: es.efor.Auth.Models.Entities
        qualifiedName: es.efor.Auth.Models.Entities
    isDefinition: true
    commentId: N:es.efor.Auth.Models.Entities
  es.efor.Auth.Models.Entities.Role{System.Guid}:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Entities.Role`1
        name: Role
        nameWithType: Role
        qualifiedName: es.efor.Auth.Models.Entities.Role
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Auth.Models.Entities.Role`1
        name: Role
        nameWithType: Role
        qualifiedName: es.efor.Auth.Models.Entities.Role
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: es.efor.Auth.Models.Entities.Role`1
    parent: es.efor.Auth.Models.Entities
    commentId: T:es.efor.Auth.Models.Entities.Role{System.Guid}
  Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1
        name: IdentityRole
        nameWithType: IdentityRole
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1
        name: IdentityRole
        nameWithType: IdentityRole
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityRole`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}
  Microsoft.AspNetCore.Identity.IdentityRole`1.ToString:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
        name: ToString
        nameWithType: IdentityRole<TKey>.ToString
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<TKey>.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
        name: ToString
        nameWithType: IdentityRole(Of TKey).ToString
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of TKey).ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
  Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.ToString:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
        name: ToString
        nameWithType: IdentityRole<Guid>.ToString
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
        name: ToString
        nameWithType: IdentityRole(Of Guid).ToString
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of System.Guid).ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
    parent: Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}
    commentId: M:Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.ToString
  Microsoft.AspNetCore.Identity.IdentityRole`1.Id:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.Id
        name: Id
        nameWithType: IdentityRole<TKey>.Id
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<TKey>.Id
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.Id
        name: Id
        nameWithType: IdentityRole(Of TKey).Id
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of TKey).Id
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityRole`1.Id
  Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.Id:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.Id
        name: Id
        nameWithType: IdentityRole<Guid>.Id
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>.Id
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.Id
        name: Id
        nameWithType: IdentityRole(Of Guid).Id
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of System.Guid).Id
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityRole`1.Id
    parent: Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.Id
  Microsoft.AspNetCore.Identity.IdentityRole`1.Name:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.Name
        name: Name
        nameWithType: IdentityRole<TKey>.Name
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<TKey>.Name
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.Name
        name: Name
        nameWithType: IdentityRole(Of TKey).Name
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of TKey).Name
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityRole`1.Name
  Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.Name:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.Name
        name: Name
        nameWithType: IdentityRole<Guid>.Name
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>.Name
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.Name
        name: Name
        nameWithType: IdentityRole(Of Guid).Name
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of System.Guid).Name
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityRole`1.Name
    parent: Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.Name
  Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName
        name: NormalizedName
        nameWithType: IdentityRole<TKey>.NormalizedName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<TKey>.NormalizedName
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName
        name: NormalizedName
        nameWithType: IdentityRole(Of TKey).NormalizedName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of TKey).NormalizedName
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName
  Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.NormalizedName:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName
        name: NormalizedName
        nameWithType: IdentityRole<Guid>.NormalizedName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>.NormalizedName
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName
        name: NormalizedName
        nameWithType: IdentityRole(Of Guid).NormalizedName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of System.Guid).NormalizedName
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName
    parent: Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.NormalizedName
  Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp
        name: ConcurrencyStamp
        nameWithType: IdentityRole<TKey>.ConcurrencyStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<TKey>.ConcurrencyStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp
        name: ConcurrencyStamp
        nameWithType: IdentityRole(Of TKey).ConcurrencyStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of TKey).ConcurrencyStamp
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp
  Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.ConcurrencyStamp:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp
        name: ConcurrencyStamp
        nameWithType: IdentityRole<Guid>.ConcurrencyStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>.ConcurrencyStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp
        name: ConcurrencyStamp
        nameWithType: IdentityRole(Of Guid).ConcurrencyStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of System.Guid).ConcurrencyStamp
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp
    parent: Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityRole{System.Guid}.ConcurrencyStamp
  es.efor.Auth.Models.Entities.Role.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Entities.Role.#ctor*
        name: Role
        nameWithType: Role.Role
        qualifiedName: es.efor.Auth.Models.Entities.Role.Role
      VB:
      - id: es.efor.Auth.Models.Entities.Role.#ctor*
        name: Role
        nameWithType: Role.Role
        qualifiedName: es.efor.Auth.Models.Entities.Role.Role
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Entities.Role.#ctor
  es.efor.Auth.Models.Entities.Role:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Entities.Role
        name: Role
        nameWithType: Role
        qualifiedName: es.efor.Auth.Models.Entities.Role
      VB:
      - id: es.efor.Auth.Models.Entities.Role
        name: Role
        nameWithType: Role
        qualifiedName: es.efor.Auth.Models.Entities.Role
    isDefinition: true
    commentId: T:es.efor.Auth.Models.Entities.Role
  Microsoft.AspNetCore.Identity.IdentityRole{{TId}}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1
        name: IdentityRole
        nameWithType: IdentityRole
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TId
        nameWithType: TId
        qualifiedName: TId
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1
        name: IdentityRole
        nameWithType: IdentityRole
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TId
        nameWithType: TId
        qualifiedName: TId
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityRole`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.IdentityRole{`0}
  Microsoft.AspNetCore.Identity.IdentityRole{{TId}}.ToString:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
        name: ToString
        nameWithType: IdentityRole<TId>.ToString
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<TId>.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
        name: ToString
        nameWithType: IdentityRole(Of TId).ToString
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of TId).ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityRole`1.ToString
    parent: Microsoft.AspNetCore.Identity.IdentityRole{{TId}}
    commentId: M:Microsoft.AspNetCore.Identity.IdentityRole{`0}.ToString
  Microsoft.AspNetCore.Identity.IdentityRole{{TId}}.Id:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.Id
        name: Id
        nameWithType: IdentityRole<TId>.Id
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<TId>.Id
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.Id
        name: Id
        nameWithType: IdentityRole(Of TId).Id
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of TId).Id
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityRole`1.Id
    parent: Microsoft.AspNetCore.Identity.IdentityRole{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityRole{`0}.Id
  Microsoft.AspNetCore.Identity.IdentityRole{{TId}}.Name:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.Name
        name: Name
        nameWithType: IdentityRole<TId>.Name
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<TId>.Name
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.Name
        name: Name
        nameWithType: IdentityRole(Of TId).Name
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of TId).Name
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityRole`1.Name
    parent: Microsoft.AspNetCore.Identity.IdentityRole{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityRole{`0}.Name
  Microsoft.AspNetCore.Identity.IdentityRole{{TId}}.NormalizedName:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName
        name: NormalizedName
        nameWithType: IdentityRole<TId>.NormalizedName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<TId>.NormalizedName
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName
        name: NormalizedName
        nameWithType: IdentityRole(Of TId).NormalizedName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of TId).NormalizedName
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityRole`1.NormalizedName
    parent: Microsoft.AspNetCore.Identity.IdentityRole{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityRole{`0}.NormalizedName
  Microsoft.AspNetCore.Identity.IdentityRole{{TId}}.ConcurrencyStamp:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp
        name: ConcurrencyStamp
        nameWithType: IdentityRole<TId>.ConcurrencyStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole<TId>.ConcurrencyStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp
        name: ConcurrencyStamp
        nameWithType: IdentityRole(Of TId).ConcurrencyStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityRole(Of TId).ConcurrencyStamp
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityRole`1.ConcurrencyStamp
    parent: Microsoft.AspNetCore.Identity.IdentityRole{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityRole{`0}.ConcurrencyStamp
  es.efor.Auth.Models.Entities.Role`1.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Entities.Role`1.#ctor*
        name: Role
        nameWithType: Role<TId>.Role
        qualifiedName: es.efor.Auth.Models.Entities.Role<TId>.Role
      VB:
      - id: es.efor.Auth.Models.Entities.Role`1.#ctor*
        name: Role
        nameWithType: Role(Of TId).Role
        qualifiedName: es.efor.Auth.Models.Entities.Role(Of TId).Role
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Entities.Role`1.#ctor
  es.efor.Auth.Models.Entities.User`1:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Entities.User`1
        name: User
        nameWithType: User
        qualifiedName: es.efor.Auth.Models.Entities.User
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TId
        nameWithType: TId
        qualifiedName: TId
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Auth.Models.Entities.User`1
        name: User
        nameWithType: User
        qualifiedName: es.efor.Auth.Models.Entities.User
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TId
        nameWithType: TId
        qualifiedName: TId
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:es.efor.Auth.Models.Entities.User`1
  es.efor.Auth.Models.Entities.User{System.Guid}:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Entities.User`1
        name: User
        nameWithType: User
        qualifiedName: es.efor.Auth.Models.Entities.User
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Auth.Models.Entities.User`1
        name: User
        nameWithType: User
        qualifiedName: es.efor.Auth.Models.Entities.User
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: es.efor.Auth.Models.Entities.User`1
    parent: es.efor.Auth.Models.Entities
    commentId: T:es.efor.Auth.Models.Entities.User{System.Guid}
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
  Microsoft.AspNetCore.Identity.IdentityUser`1.ToString:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.ToString
        name: ToString
        nameWithType: IdentityUser<TKey>.ToString
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.ToString
        name: ToString
        nameWithType: IdentityUser(Of TKey).ToString
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNetCore.Identity.IdentityUser`1.ToString
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.ToString:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.ToString
        name: ToString
        nameWithType: IdentityUser<Guid>.ToString
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.ToString
        name: ToString
        nameWithType: IdentityUser(Of Guid).ToString
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.ToString
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: M:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.ToString
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.Id:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.Id
        name: Id
        nameWithType: IdentityUser<Guid>.Id
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.Id
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.Id
        name: Id
        nameWithType: IdentityUser(Of Guid).Id
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).Id
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.Id
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.Id
  Microsoft.AspNetCore.Identity.IdentityUser`1.UserName:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.UserName
        name: UserName
        nameWithType: IdentityUser<TKey>.UserName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.UserName
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.UserName
        name: UserName
        nameWithType: IdentityUser(Of TKey).UserName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).UserName
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.UserName
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.UserName:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.UserName
        name: UserName
        nameWithType: IdentityUser<Guid>.UserName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.UserName
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.UserName
        name: UserName
        nameWithType: IdentityUser(Of Guid).UserName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).UserName
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.UserName
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.UserName
  Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedUserName:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedUserName
        name: NormalizedUserName
        nameWithType: IdentityUser<TKey>.NormalizedUserName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.NormalizedUserName
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedUserName
        name: NormalizedUserName
        nameWithType: IdentityUser(Of TKey).NormalizedUserName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).NormalizedUserName
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedUserName
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.NormalizedUserName:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedUserName
        name: NormalizedUserName
        nameWithType: IdentityUser<Guid>.NormalizedUserName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.NormalizedUserName
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedUserName
        name: NormalizedUserName
        nameWithType: IdentityUser(Of Guid).NormalizedUserName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).NormalizedUserName
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedUserName
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.NormalizedUserName
  Microsoft.AspNetCore.Identity.IdentityUser`1.Email:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.Email
        name: Email
        nameWithType: IdentityUser<TKey>.Email
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.Email
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.Email
        name: Email
        nameWithType: IdentityUser(Of TKey).Email
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).Email
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.Email
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.Email:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.Email
        name: Email
        nameWithType: IdentityUser<Guid>.Email
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.Email
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.Email
        name: Email
        nameWithType: IdentityUser(Of Guid).Email
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).Email
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.Email
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.Email
  Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedEmail:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedEmail
        name: NormalizedEmail
        nameWithType: IdentityUser<TKey>.NormalizedEmail
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.NormalizedEmail
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedEmail
        name: NormalizedEmail
        nameWithType: IdentityUser(Of TKey).NormalizedEmail
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).NormalizedEmail
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedEmail
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.NormalizedEmail:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedEmail
        name: NormalizedEmail
        nameWithType: IdentityUser<Guid>.NormalizedEmail
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.NormalizedEmail
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedEmail
        name: NormalizedEmail
        nameWithType: IdentityUser(Of Guid).NormalizedEmail
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).NormalizedEmail
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedEmail
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.NormalizedEmail
  Microsoft.AspNetCore.Identity.IdentityUser`1.EmailConfirmed:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.EmailConfirmed
        name: EmailConfirmed
        nameWithType: IdentityUser<TKey>.EmailConfirmed
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.EmailConfirmed
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.EmailConfirmed
        name: EmailConfirmed
        nameWithType: IdentityUser(Of TKey).EmailConfirmed
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).EmailConfirmed
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.EmailConfirmed
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.EmailConfirmed:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.EmailConfirmed
        name: EmailConfirmed
        nameWithType: IdentityUser<Guid>.EmailConfirmed
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.EmailConfirmed
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.EmailConfirmed
        name: EmailConfirmed
        nameWithType: IdentityUser(Of Guid).EmailConfirmed
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).EmailConfirmed
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.EmailConfirmed
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.EmailConfirmed
  Microsoft.AspNetCore.Identity.IdentityUser`1.PasswordHash:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PasswordHash
        name: PasswordHash
        nameWithType: IdentityUser<TKey>.PasswordHash
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.PasswordHash
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PasswordHash
        name: PasswordHash
        nameWithType: IdentityUser(Of TKey).PasswordHash
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).PasswordHash
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.PasswordHash
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.PasswordHash:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PasswordHash
        name: PasswordHash
        nameWithType: IdentityUser<Guid>.PasswordHash
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.PasswordHash
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PasswordHash
        name: PasswordHash
        nameWithType: IdentityUser(Of Guid).PasswordHash
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).PasswordHash
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.PasswordHash
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.PasswordHash
  Microsoft.AspNetCore.Identity.IdentityUser`1.SecurityStamp:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.SecurityStamp
        name: SecurityStamp
        nameWithType: IdentityUser<TKey>.SecurityStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.SecurityStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.SecurityStamp
        name: SecurityStamp
        nameWithType: IdentityUser(Of TKey).SecurityStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).SecurityStamp
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.SecurityStamp
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.SecurityStamp:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.SecurityStamp
        name: SecurityStamp
        nameWithType: IdentityUser<Guid>.SecurityStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.SecurityStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.SecurityStamp
        name: SecurityStamp
        nameWithType: IdentityUser(Of Guid).SecurityStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).SecurityStamp
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.SecurityStamp
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.SecurityStamp
  Microsoft.AspNetCore.Identity.IdentityUser`1.ConcurrencyStamp:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.ConcurrencyStamp
        name: ConcurrencyStamp
        nameWithType: IdentityUser<TKey>.ConcurrencyStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.ConcurrencyStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.ConcurrencyStamp
        name: ConcurrencyStamp
        nameWithType: IdentityUser(Of TKey).ConcurrencyStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).ConcurrencyStamp
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.ConcurrencyStamp
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.ConcurrencyStamp:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.ConcurrencyStamp
        name: ConcurrencyStamp
        nameWithType: IdentityUser<Guid>.ConcurrencyStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.ConcurrencyStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.ConcurrencyStamp
        name: ConcurrencyStamp
        nameWithType: IdentityUser(Of Guid).ConcurrencyStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).ConcurrencyStamp
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.ConcurrencyStamp
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.ConcurrencyStamp
  Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumber:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumber
        name: PhoneNumber
        nameWithType: IdentityUser<TKey>.PhoneNumber
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.PhoneNumber
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumber
        name: PhoneNumber
        nameWithType: IdentityUser(Of TKey).PhoneNumber
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).PhoneNumber
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumber
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.PhoneNumber:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumber
        name: PhoneNumber
        nameWithType: IdentityUser<Guid>.PhoneNumber
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.PhoneNumber
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumber
        name: PhoneNumber
        nameWithType: IdentityUser(Of Guid).PhoneNumber
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).PhoneNumber
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumber
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.PhoneNumber
  Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumberConfirmed:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumberConfirmed
        name: PhoneNumberConfirmed
        nameWithType: IdentityUser<TKey>.PhoneNumberConfirmed
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.PhoneNumberConfirmed
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumberConfirmed
        name: PhoneNumberConfirmed
        nameWithType: IdentityUser(Of TKey).PhoneNumberConfirmed
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).PhoneNumberConfirmed
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumberConfirmed
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.PhoneNumberConfirmed:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumberConfirmed
        name: PhoneNumberConfirmed
        nameWithType: IdentityUser<Guid>.PhoneNumberConfirmed
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.PhoneNumberConfirmed
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumberConfirmed
        name: PhoneNumberConfirmed
        nameWithType: IdentityUser(Of Guid).PhoneNumberConfirmed
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).PhoneNumberConfirmed
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumberConfirmed
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.PhoneNumberConfirmed
  Microsoft.AspNetCore.Identity.IdentityUser`1.TwoFactorEnabled:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.TwoFactorEnabled
        name: TwoFactorEnabled
        nameWithType: IdentityUser<TKey>.TwoFactorEnabled
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.TwoFactorEnabled
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.TwoFactorEnabled
        name: TwoFactorEnabled
        nameWithType: IdentityUser(Of TKey).TwoFactorEnabled
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).TwoFactorEnabled
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.TwoFactorEnabled
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.TwoFactorEnabled:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.TwoFactorEnabled
        name: TwoFactorEnabled
        nameWithType: IdentityUser<Guid>.TwoFactorEnabled
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.TwoFactorEnabled
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.TwoFactorEnabled
        name: TwoFactorEnabled
        nameWithType: IdentityUser(Of Guid).TwoFactorEnabled
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).TwoFactorEnabled
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.TwoFactorEnabled
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.TwoFactorEnabled
  Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnd:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnd
        name: LockoutEnd
        nameWithType: IdentityUser<TKey>.LockoutEnd
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.LockoutEnd
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnd
        name: LockoutEnd
        nameWithType: IdentityUser(Of TKey).LockoutEnd
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).LockoutEnd
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnd
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.LockoutEnd:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnd
        name: LockoutEnd
        nameWithType: IdentityUser<Guid>.LockoutEnd
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.LockoutEnd
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnd
        name: LockoutEnd
        nameWithType: IdentityUser(Of Guid).LockoutEnd
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).LockoutEnd
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnd
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.LockoutEnd
  Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnabled:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnabled
        name: LockoutEnabled
        nameWithType: IdentityUser<TKey>.LockoutEnabled
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.LockoutEnabled
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnabled
        name: LockoutEnabled
        nameWithType: IdentityUser(Of TKey).LockoutEnabled
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).LockoutEnabled
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnabled
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.LockoutEnabled:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnabled
        name: LockoutEnabled
        nameWithType: IdentityUser<Guid>.LockoutEnabled
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.LockoutEnabled
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnabled
        name: LockoutEnabled
        nameWithType: IdentityUser(Of Guid).LockoutEnabled
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).LockoutEnabled
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnabled
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.LockoutEnabled
  Microsoft.AspNetCore.Identity.IdentityUser`1.AccessFailedCount:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.AccessFailedCount
        name: AccessFailedCount
        nameWithType: IdentityUser<TKey>.AccessFailedCount
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TKey>.AccessFailedCount
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.AccessFailedCount
        name: AccessFailedCount
        nameWithType: IdentityUser(Of TKey).AccessFailedCount
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TKey).AccessFailedCount
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser`1.AccessFailedCount
  Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.AccessFailedCount:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.AccessFailedCount
        name: AccessFailedCount
        nameWithType: IdentityUser<Guid>.AccessFailedCount
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<System.Guid>.AccessFailedCount
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.AccessFailedCount
        name: AccessFailedCount
        nameWithType: IdentityUser(Of Guid).AccessFailedCount
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of System.Guid).AccessFailedCount
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.AccessFailedCount
    parent: Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{System.Guid}.AccessFailedCount
  es.efor.Auth.Models.Entities.User.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Entities.User.#ctor*
        name: User
        nameWithType: User.User
        qualifiedName: es.efor.Auth.Models.Entities.User.User
      VB:
      - id: es.efor.Auth.Models.Entities.User.#ctor*
        name: User
        nameWithType: User.User
        qualifiedName: es.efor.Auth.Models.Entities.User.User
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Entities.User.#ctor
  es.efor.Auth.Models.Entities.User:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Entities.User
        name: User
        nameWithType: User
        qualifiedName: es.efor.Auth.Models.Entities.User
      VB:
      - id: es.efor.Auth.Models.Entities.User
        name: User
        nameWithType: User
        qualifiedName: es.efor.Auth.Models.Entities.User
    isDefinition: true
    parent: es.efor.Auth.Models.Entities
    commentId: T:es.efor.Auth.Models.Entities.User
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TId
        nameWithType: TId
        qualifiedName: TId
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TId
        nameWithType: TId
        qualifiedName: TId
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.IdentityUser{`0}
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.ToString:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.ToString
        name: ToString
        nameWithType: IdentityUser<TId>.ToString
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.ToString
        name: ToString
        nameWithType: IdentityUser(Of TId).ToString
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.ToString
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: M:Microsoft.AspNetCore.Identity.IdentityUser{`0}.ToString
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.Id:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.Id
        name: Id
        nameWithType: IdentityUser<TId>.Id
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.Id
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.Id
        name: Id
        nameWithType: IdentityUser(Of TId).Id
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).Id
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.Id
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.Id
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.UserName:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.UserName
        name: UserName
        nameWithType: IdentityUser<TId>.UserName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.UserName
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.UserName
        name: UserName
        nameWithType: IdentityUser(Of TId).UserName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).UserName
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.UserName
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.UserName
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.NormalizedUserName:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedUserName
        name: NormalizedUserName
        nameWithType: IdentityUser<TId>.NormalizedUserName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.NormalizedUserName
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedUserName
        name: NormalizedUserName
        nameWithType: IdentityUser(Of TId).NormalizedUserName
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).NormalizedUserName
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedUserName
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.NormalizedUserName
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.Email:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.Email
        name: Email
        nameWithType: IdentityUser<TId>.Email
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.Email
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.Email
        name: Email
        nameWithType: IdentityUser(Of TId).Email
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).Email
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.Email
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.Email
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.NormalizedEmail:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedEmail
        name: NormalizedEmail
        nameWithType: IdentityUser<TId>.NormalizedEmail
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.NormalizedEmail
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedEmail
        name: NormalizedEmail
        nameWithType: IdentityUser(Of TId).NormalizedEmail
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).NormalizedEmail
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.NormalizedEmail
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.NormalizedEmail
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.EmailConfirmed:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.EmailConfirmed
        name: EmailConfirmed
        nameWithType: IdentityUser<TId>.EmailConfirmed
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.EmailConfirmed
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.EmailConfirmed
        name: EmailConfirmed
        nameWithType: IdentityUser(Of TId).EmailConfirmed
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).EmailConfirmed
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.EmailConfirmed
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.EmailConfirmed
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.PasswordHash:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PasswordHash
        name: PasswordHash
        nameWithType: IdentityUser<TId>.PasswordHash
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.PasswordHash
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PasswordHash
        name: PasswordHash
        nameWithType: IdentityUser(Of TId).PasswordHash
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).PasswordHash
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.PasswordHash
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.PasswordHash
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.SecurityStamp:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.SecurityStamp
        name: SecurityStamp
        nameWithType: IdentityUser<TId>.SecurityStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.SecurityStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.SecurityStamp
        name: SecurityStamp
        nameWithType: IdentityUser(Of TId).SecurityStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).SecurityStamp
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.SecurityStamp
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.SecurityStamp
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.ConcurrencyStamp:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.ConcurrencyStamp
        name: ConcurrencyStamp
        nameWithType: IdentityUser<TId>.ConcurrencyStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.ConcurrencyStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.ConcurrencyStamp
        name: ConcurrencyStamp
        nameWithType: IdentityUser(Of TId).ConcurrencyStamp
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).ConcurrencyStamp
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.ConcurrencyStamp
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.ConcurrencyStamp
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.PhoneNumber:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumber
        name: PhoneNumber
        nameWithType: IdentityUser<TId>.PhoneNumber
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.PhoneNumber
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumber
        name: PhoneNumber
        nameWithType: IdentityUser(Of TId).PhoneNumber
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).PhoneNumber
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumber
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.PhoneNumber
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.PhoneNumberConfirmed:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumberConfirmed
        name: PhoneNumberConfirmed
        nameWithType: IdentityUser<TId>.PhoneNumberConfirmed
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.PhoneNumberConfirmed
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumberConfirmed
        name: PhoneNumberConfirmed
        nameWithType: IdentityUser(Of TId).PhoneNumberConfirmed
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).PhoneNumberConfirmed
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.PhoneNumberConfirmed
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.PhoneNumberConfirmed
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.TwoFactorEnabled:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.TwoFactorEnabled
        name: TwoFactorEnabled
        nameWithType: IdentityUser<TId>.TwoFactorEnabled
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.TwoFactorEnabled
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.TwoFactorEnabled
        name: TwoFactorEnabled
        nameWithType: IdentityUser(Of TId).TwoFactorEnabled
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).TwoFactorEnabled
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.TwoFactorEnabled
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.TwoFactorEnabled
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.LockoutEnd:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnd
        name: LockoutEnd
        nameWithType: IdentityUser<TId>.LockoutEnd
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.LockoutEnd
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnd
        name: LockoutEnd
        nameWithType: IdentityUser(Of TId).LockoutEnd
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).LockoutEnd
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnd
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.LockoutEnd
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.LockoutEnabled:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnabled
        name: LockoutEnabled
        nameWithType: IdentityUser<TId>.LockoutEnabled
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.LockoutEnabled
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnabled
        name: LockoutEnabled
        nameWithType: IdentityUser(Of TId).LockoutEnabled
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).LockoutEnabled
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.LockoutEnabled
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.LockoutEnabled
  Microsoft.AspNetCore.Identity.IdentityUser{{TId}}.AccessFailedCount:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.AccessFailedCount
        name: AccessFailedCount
        nameWithType: IdentityUser<TId>.AccessFailedCount
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser<TId>.AccessFailedCount
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1.AccessFailedCount
        name: AccessFailedCount
        nameWithType: IdentityUser(Of TId).AccessFailedCount
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser(Of TId).AccessFailedCount
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1.AccessFailedCount
    parent: Microsoft.AspNetCore.Identity.IdentityUser{{TId}}
    commentId: P:Microsoft.AspNetCore.Identity.IdentityUser{`0}.AccessFailedCount
  es.efor.Auth.Models.Entities.User`1.#ctor*:
    name:
      CSharp:
      - id: es.efor.Auth.Models.Entities.User`1.#ctor*
        name: User
        nameWithType: User<TId>.User
        qualifiedName: es.efor.Auth.Models.Entities.User<TId>.User
      VB:
      - id: es.efor.Auth.Models.Entities.User`1.#ctor*
        name: User
        nameWithType: User(Of TId).User
        qualifiedName: es.efor.Auth.Models.Entities.User(Of TId).User
    isDefinition: true
    commentId: Overload:es.efor.Auth.Models.Entities.User`1.#ctor
  System.Collections.Generic.IEnumerable{System.Type}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  es.efor.Auth.Utilities.AuthorizationPolicyUtilities.GetAllPolicyEnums*:
    name:
      CSharp:
      - id: es.efor.Auth.Utilities.AuthorizationPolicyUtilities.GetAllPolicyEnums*
        name: GetAllPolicyEnums
        nameWithType: AuthorizationPolicyUtilities.GetAllPolicyEnums
        qualifiedName: es.efor.Auth.Utilities.AuthorizationPolicyUtilities.GetAllPolicyEnums
      VB:
      - id: es.efor.Auth.Utilities.AuthorizationPolicyUtilities.GetAllPolicyEnums*
        name: GetAllPolicyEnums
        nameWithType: AuthorizationPolicyUtilities.GetAllPolicyEnums
        qualifiedName: es.efor.Auth.Utilities.AuthorizationPolicyUtilities.GetAllPolicyEnums
    isDefinition: true
    commentId: Overload:es.efor.Auth.Utilities.AuthorizationPolicyUtilities.GetAllPolicyEnums
  es.efor.Auth.Utilities.AuthorizationPolicyUtilities:
    name:
      CSharp:
      - id: es.efor.Auth.Utilities.AuthorizationPolicyUtilities
        name: AuthorizationPolicyUtilities
        nameWithType: AuthorizationPolicyUtilities
        qualifiedName: es.efor.Auth.Utilities.AuthorizationPolicyUtilities
      VB:
      - id: es.efor.Auth.Utilities.AuthorizationPolicyUtilities
        name: AuthorizationPolicyUtilities
        nameWithType: AuthorizationPolicyUtilities
        qualifiedName: es.efor.Auth.Utilities.AuthorizationPolicyUtilities
    isDefinition: true
    commentId: T:es.efor.Auth.Utilities.AuthorizationPolicyUtilities
  System.Threading.Tasks.Task{es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
        name: JsonWebTokenResponse
        nameWithType: JsonWebTokenResponse
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
        name: JsonWebTokenResponse
        nameWithType: JsonWebTokenResponse
        qualifiedName: es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{es.efor.Auth.Identity.Models.Api.JsonWebTokenResponse}
  System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken*:
    name:
      CSharp:
      - id: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken*
        name: GetAuthBearerToken
        nameWithType: JwtUtilities.GetAuthBearerToken
        qualifiedName: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken
      VB:
      - id: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken*
        name: GetAuthBearerToken
        nameWithType: JwtUtilities.GetAuthBearerToken
        qualifiedName: es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken
    isDefinition: true
    commentId: Overload:es.efor.Auth.Utilities.JwtUtilities.GetAuthBearerToken
  es.efor.Auth.Managers.IdentityUserManager{System.Guid,es.efor.Auth.Models.Entities.User}:
    name:
      CSharp:
      - id: es.efor.Auth.Managers.IdentityUserManager`2
        name: IdentityUserManager
        nameWithType: IdentityUserManager
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: es.efor.Auth.Models.Entities.User
        name: User
        nameWithType: User
        qualifiedName: es.efor.Auth.Models.Entities.User
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Auth.Managers.IdentityUserManager`2
        name: IdentityUserManager
        nameWithType: IdentityUserManager
        qualifiedName: es.efor.Auth.Managers.IdentityUserManager
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: es.efor.Auth.Models.Entities.User
        name: User
        nameWithType: User
        qualifiedName: es.efor.Auth.Models.Entities.User
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: es.efor.Auth.Managers.IdentityUserManager`2
    parent: es.efor.Auth.Managers
    commentId: T:es.efor.Auth.Managers.IdentityUserManager{System.Guid,es.efor.Auth.Models.Entities.User}
  Microsoft.AspNetCore.Identity.IdentityUser{{TKey}}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.IdentityUser`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.IdentityUser{``0}
  Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser{{TKey}}}:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Identity.UserManager`1
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNetCore.Identity.UserManager`1
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNetCore.Identity.UserManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNetCore.Identity.IdentityUser`1
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNetCore.Identity.IdentityUser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNetCore.Identity.UserManager`1
    parent: Microsoft.AspNetCore.Identity
    commentId: T:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser{``0}}
  es.efor.Auth.Utilities.JwtUtilities:
    name:
      CSharp:
      - id: es.efor.Auth.Utilities.JwtUtilities
        name: JwtUtilities
        nameWithType: JwtUtilities
        qualifiedName: es.efor.Auth.Utilities.JwtUtilities
      VB:
      - id: es.efor.Auth.Utilities.JwtUtilities
        name: JwtUtilities
        nameWithType: JwtUtilities
        qualifiedName: es.efor.Auth.Utilities.JwtUtilities
    isDefinition: true
    commentId: T:es.efor.Auth.Utilities.JwtUtilities
  es.efor.Auth.Utilities:
    name:
      CSharp:
      - name: es.efor.Auth.Utilities
        nameWithType: es.efor.Auth.Utilities
        qualifiedName: es.efor.Auth.Utilities
      VB:
      - name: es.efor.Auth.Utilities
        nameWithType: es.efor.Auth.Utilities
        qualifiedName: es.efor.Auth.Utilities
    isDefinition: true
    commentId: N:es.efor.Auth.Utilities
