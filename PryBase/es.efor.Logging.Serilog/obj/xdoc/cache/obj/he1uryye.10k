id: es.efor.Logging.Serilog
language: CSharp
name:
  Default: es.efor.Logging.Serilog
qualifiedName:
  Default: es.efor.Logging.Serilog
type: Assembly
modifiers: {}
items:
- id: es.efor.Logging.Serilog.Constants
  commentId: N:es.efor.Logging.Serilog.Constants
  language: CSharp
  name:
    CSharp: es.efor.Logging.Serilog.Constants
    VB: es.efor.Logging.Serilog.Constants
  nameWithType:
    CSharp: es.efor.Logging.Serilog.Constants
    VB: es.efor.Logging.Serilog.Constants
  qualifiedName:
    CSharp: es.efor.Logging.Serilog.Constants
    VB: es.efor.Logging.Serilog.Constants
  type: Namespace
  assemblies:
  - es.efor.Logging.Serilog
  modifiers: {}
  items:
  - id: es.efor.Logging.Serilog.Constants.EnrichProperties
    commentId: T:es.efor.Logging.Serilog.Constants.EnrichProperties
    language: CSharp
    name:
      CSharp: EnrichProperties
      VB: EnrichProperties
    nameWithType:
      CSharp: EnrichProperties
      VB: EnrichProperties
    qualifiedName:
      CSharp: es.efor.Logging.Serilog.Constants.EnrichProperties
      VB: es.efor.Logging.Serilog.Constants.EnrichProperties
    type: Class
    assemblies:
    - es.efor.Logging.Serilog
    namespace: es.efor.Logging.Serilog.Constants
    source:
      remote:
        path: es.efor.Logging.Serilog/Constants/EnrichProperties.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: EnrichProperties
      path: ../es.efor.Logging.Serilog/Constants/EnrichProperties.cs
      startLine: 4
    syntax:
      content:
        CSharp: public static class EnrichProperties
        VB: Public Module EnrichProperties
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HOSTNAME
      commentId: F:es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HOSTNAME
      language: CSharp
      name:
        CSharp: SERILOG_ENRICH_PROP_HOSTNAME
        VB: SERILOG_ENRICH_PROP_HOSTNAME
      nameWithType:
        CSharp: EnrichProperties.SERILOG_ENRICH_PROP_HOSTNAME
        VB: EnrichProperties.SERILOG_ENRICH_PROP_HOSTNAME
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HOSTNAME
        VB: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HOSTNAME
      type: Field
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Constants
      source:
        remote:
          path: es.efor.Logging.Serilog/Constants/EnrichProperties.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: SERILOG_ENRICH_PROP_HOSTNAME
        path: ../es.efor.Logging.Serilog/Constants/EnrichProperties.cs
        startLine: 6
      syntax:
        content:
          CSharp: public const string SERILOG_ENRICH_PROP_HOSTNAME = "Hostname"
          VB: Public Const SERILOG_ENRICH_PROP_HOSTNAME As String = "Hostname"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPNAME
      commentId: F:es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPNAME
      language: CSharp
      name:
        CSharp: SERILOG_ENRICH_PROP_APPNAME
        VB: SERILOG_ENRICH_PROP_APPNAME
      nameWithType:
        CSharp: EnrichProperties.SERILOG_ENRICH_PROP_APPNAME
        VB: EnrichProperties.SERILOG_ENRICH_PROP_APPNAME
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPNAME
        VB: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPNAME
      type: Field
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Constants
      source:
        remote:
          path: es.efor.Logging.Serilog/Constants/EnrichProperties.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: SERILOG_ENRICH_PROP_APPNAME
        path: ../es.efor.Logging.Serilog/Constants/EnrichProperties.cs
        startLine: 7
      syntax:
        content:
          CSharp: public const string SERILOG_ENRICH_PROP_APPNAME = "AppName"
          VB: Public Const SERILOG_ENRICH_PROP_APPNAME As String = "AppName"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPINSTANCEID
      commentId: F:es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPINSTANCEID
      language: CSharp
      name:
        CSharp: SERILOG_ENRICH_PROP_APPINSTANCEID
        VB: SERILOG_ENRICH_PROP_APPINSTANCEID
      nameWithType:
        CSharp: EnrichProperties.SERILOG_ENRICH_PROP_APPINSTANCEID
        VB: EnrichProperties.SERILOG_ENRICH_PROP_APPINSTANCEID
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPINSTANCEID
        VB: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPINSTANCEID
      type: Field
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Constants
      source:
        remote:
          path: es.efor.Logging.Serilog/Constants/EnrichProperties.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: SERILOG_ENRICH_PROP_APPINSTANCEID
        path: ../es.efor.Logging.Serilog/Constants/EnrichProperties.cs
        startLine: 8
      syntax:
        content:
          CSharp: public const string SERILOG_ENRICH_PROP_APPINSTANCEID = "AppInstance"
          VB: Public Const SERILOG_ENRICH_PROP_APPINSTANCEID As String = "AppInstance"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPVERSION
      commentId: F:es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPVERSION
      language: CSharp
      name:
        CSharp: SERILOG_ENRICH_PROP_APPVERSION
        VB: SERILOG_ENRICH_PROP_APPVERSION
      nameWithType:
        CSharp: EnrichProperties.SERILOG_ENRICH_PROP_APPVERSION
        VB: EnrichProperties.SERILOG_ENRICH_PROP_APPVERSION
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPVERSION
        VB: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPVERSION
      type: Field
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Constants
      source:
        remote:
          path: es.efor.Logging.Serilog/Constants/EnrichProperties.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: SERILOG_ENRICH_PROP_APPVERSION
        path: ../es.efor.Logging.Serilog/Constants/EnrichProperties.cs
        startLine: 9
      syntax:
        content:
          CSharp: public const string SERILOG_ENRICH_PROP_APPVERSION = "AppVersion"
          VB: Public Const SERILOG_ENRICH_PROP_APPVERSION As String = "AppVersion"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPINSTANCEDATETIME
      commentId: F:es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPINSTANCEDATETIME
      language: CSharp
      name:
        CSharp: SERILOG_ENRICH_PROP_APPINSTANCEDATETIME
        VB: SERILOG_ENRICH_PROP_APPINSTANCEDATETIME
      nameWithType:
        CSharp: EnrichProperties.SERILOG_ENRICH_PROP_APPINSTANCEDATETIME
        VB: EnrichProperties.SERILOG_ENRICH_PROP_APPINSTANCEDATETIME
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPINSTANCEDATETIME
        VB: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_APPINSTANCEDATETIME
      type: Field
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Constants
      source:
        remote:
          path: es.efor.Logging.Serilog/Constants/EnrichProperties.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: SERILOG_ENRICH_PROP_APPINSTANCEDATETIME
        path: ../es.efor.Logging.Serilog/Constants/EnrichProperties.cs
        startLine: 10
      syntax:
        content:
          CSharp: public const string SERILOG_ENRICH_PROP_APPINSTANCEDATETIME = "AppInstanceDatetime"
          VB: Public Const SERILOG_ENRICH_PROP_APPINSTANCEDATETIME As String = "AppInstanceDatetime"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_QUERY
      commentId: F:es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_QUERY
      language: CSharp
      name:
        CSharp: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_QUERY
        VB: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_QUERY
      nameWithType:
        CSharp: EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_QUERY
        VB: EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_QUERY
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_QUERY
        VB: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_QUERY
      type: Field
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Constants
      source:
        remote:
          path: es.efor.Logging.Serilog/Constants/EnrichProperties.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_QUERY
        path: ../es.efor.Logging.Serilog/Constants/EnrichProperties.cs
        startLine: 13
      syntax:
        content:
          CSharp: public const string SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_QUERY = "RequestQuery"
          VB: Public Const SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_QUERY As String = "RequestQuery"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_BODY
      commentId: F:es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_BODY
      language: CSharp
      name:
        CSharp: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_BODY
        VB: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_BODY
      nameWithType:
        CSharp: EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_BODY
        VB: EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_BODY
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_BODY
        VB: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_BODY
      type: Field
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Constants
      source:
        remote:
          path: es.efor.Logging.Serilog/Constants/EnrichProperties.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_BODY
        path: ../es.efor.Logging.Serilog/Constants/EnrichProperties.cs
        startLine: 14
      syntax:
        content:
          CSharp: public const string SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_BODY = "RequestBody"
          VB: Public Const SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_REQUEST_BODY As String = "RequestBody"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_BODY
      commentId: F:es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_BODY
      language: CSharp
      name:
        CSharp: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_BODY
        VB: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_BODY
      nameWithType:
        CSharp: EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_BODY
        VB: EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_BODY
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_BODY
        VB: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_BODY
      type: Field
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Constants
      source:
        remote:
          path: es.efor.Logging.Serilog/Constants/EnrichProperties.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_BODY
        path: ../es.efor.Logging.Serilog/Constants/EnrichProperties.cs
        startLine: 16
      syntax:
        content:
          CSharp: public const string SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_BODY = "ResponseBody"
          VB: Public Const SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_BODY As String = "ResponseBody"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_FLOW
      commentId: F:es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_FLOW
      language: CSharp
      name:
        CSharp: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_FLOW
        VB: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_FLOW
      nameWithType:
        CSharp: EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_FLOW
        VB: EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_FLOW
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_FLOW
        VB: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_FLOW
      type: Field
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Constants
      source:
        remote:
          path: es.efor.Logging.Serilog/Constants/EnrichProperties.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_FLOW
        path: ../es.efor.Logging.Serilog/Constants/EnrichProperties.cs
        startLine: 23
      summary: "\nThis property, which should be of boolean value, represents if an exception\nwas catched when the <xref href=\"es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware\" data-throw-if-not-resolved=\"false\"></xref> tried to complete\ncalls to the API or other middleware.\n"
      example: []
      syntax:
        content:
          CSharp: public const string SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_FLOW = "ExceptionOnFlow"
          VB: Public Const SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_FLOW As String = "ExceptionOnFlow"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
      references:
        es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware: 
    - id: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_READER
      commentId: F:es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_READER
      language: CSharp
      name:
        CSharp: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_READER
        VB: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_READER
      nameWithType:
        CSharp: EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_READER
        VB: EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_READER
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_READER
        VB: es.efor.Logging.Serilog.Constants.EnrichProperties.SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_READER
      type: Field
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Constants
      source:
        remote:
          path: es.efor.Logging.Serilog/Constants/EnrichProperties.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_READER
        path: ../es.efor.Logging.Serilog/Constants/EnrichProperties.cs
        startLine: 29
      summary: "\nThis property, which sould be of string value (the exception log), represents\nthat an exception was catched when the <xref href=\"es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware\" data-throw-if-not-resolved=\"false\"></xref> tried\nto read the response body as string.\n"
      example: []
      syntax:
        content:
          CSharp: public const string SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_READER = "ExceptionOnReader"
          VB: Public Const SERILOG_ENRICH_PROP_HTTPMIDDLEWARE_RESPONSE_EXCEPTION_READER As String = "ExceptionOnReader"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
      references:
        es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware: 
- id: es.efor.Logging.Serilog.Extensions
  commentId: N:es.efor.Logging.Serilog.Extensions
  language: CSharp
  name:
    CSharp: es.efor.Logging.Serilog.Extensions
    VB: es.efor.Logging.Serilog.Extensions
  nameWithType:
    CSharp: es.efor.Logging.Serilog.Extensions
    VB: es.efor.Logging.Serilog.Extensions
  qualifiedName:
    CSharp: es.efor.Logging.Serilog.Extensions
    VB: es.efor.Logging.Serilog.Extensions
  type: Namespace
  assemblies:
  - es.efor.Logging.Serilog
  modifiers: {}
  items:
  - id: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions
    commentId: T:es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions
    language: CSharp
    name:
      CSharp: IApplicationBuilderExtensions
      VB: IApplicationBuilderExtensions
    nameWithType:
      CSharp: IApplicationBuilderExtensions
      VB: IApplicationBuilderExtensions
    qualifiedName:
      CSharp: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions
      VB: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions
    type: Class
    assemblies:
    - es.efor.Logging.Serilog
    namespace: es.efor.Logging.Serilog.Extensions
    source:
      remote:
        path: es.efor.Logging.Serilog/Extensions/IApplicationBuilderExtensions.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: IApplicationBuilderExtensions
      path: ../es.efor.Logging.Serilog/Extensions/IApplicationBuilderExtensions.cs
      startLine: 6
    syntax:
      content:
        CSharp: public static class IApplicationBuilderExtensions
        VB: Public Module IApplicationBuilderExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions.UseEforSerilog(Microsoft.AspNetCore.Builder.IApplicationBuilder)
      commentId: M:es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions.UseEforSerilog(Microsoft.AspNetCore.Builder.IApplicationBuilder)
      language: CSharp
      name:
        CSharp: UseEforSerilog(IApplicationBuilder)
        VB: UseEforSerilog(IApplicationBuilder)
      nameWithType:
        CSharp: IApplicationBuilderExtensions.UseEforSerilog(IApplicationBuilder)
        VB: IApplicationBuilderExtensions.UseEforSerilog(IApplicationBuilder)
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions.UseEforSerilog(Microsoft.AspNetCore.Builder.IApplicationBuilder)
        VB: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions.UseEforSerilog(Microsoft.AspNetCore.Builder.IApplicationBuilder)
      type: Method
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Extensions
      source:
        remote:
          path: es.efor.Logging.Serilog/Extensions/IApplicationBuilderExtensions.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UseEforSerilog
        path: ../es.efor.Logging.Serilog/Extensions/IApplicationBuilderExtensions.cs
        startLine: 11
      summary: "\nThis extension should be called first on the middleware pipe.\n"
      example: []
      syntax:
        content:
          CSharp: public static IApplicationBuilder UseEforSerilog(this IApplicationBuilder app)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function UseEforSerilog(app As IApplicationBuilder) As IApplicationBuilder
        parameters:
        - id: app
          type: Microsoft.AspNetCore.Builder.IApplicationBuilder
        return:
          type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      overload: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions.UseEforSerilog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions
    commentId: T:es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions
    language: CSharp
    name:
      CSharp: IHostBuilderExtensions
      VB: IHostBuilderExtensions
    nameWithType:
      CSharp: IHostBuilderExtensions
      VB: IHostBuilderExtensions
    qualifiedName:
      CSharp: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions
      VB: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions
    type: Class
    assemblies:
    - es.efor.Logging.Serilog
    namespace: es.efor.Logging.Serilog.Extensions
    source:
      remote:
        path: es.efor.Logging.Serilog/Extensions/IHostBuilderExtensions.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: IHostBuilderExtensions
      path: ../es.efor.Logging.Serilog/Extensions/IHostBuilderExtensions.cs
      startLine: 11
    syntax:
      content:
        CSharp: public static class IHostBuilderExtensions
        VB: Public Module IHostBuilderExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog``1(Microsoft.Extensions.Hosting.IHostBuilder,System.DateTimeOffset,System.String,System.String)
      commentId: M:es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog``1(Microsoft.Extensions.Hosting.IHostBuilder,System.DateTimeOffset,System.String,System.String)
      language: CSharp
      name:
        CSharp: UseEforSerilog<TProgram>(IHostBuilder, DateTimeOffset, String, String)
        VB: UseEforSerilog(Of TProgram)(IHostBuilder, DateTimeOffset, String, String)
      nameWithType:
        CSharp: IHostBuilderExtensions.UseEforSerilog<TProgram>(IHostBuilder, DateTimeOffset, String, String)
        VB: IHostBuilderExtensions.UseEforSerilog(Of TProgram)(IHostBuilder, DateTimeOffset, String, String)
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog<TProgram>(Microsoft.Extensions.Hosting.IHostBuilder, System.DateTimeOffset, System.String, System.String)
        VB: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog(Of TProgram)(Microsoft.Extensions.Hosting.IHostBuilder, System.DateTimeOffset, System.String, System.String)
      type: Method
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Extensions
      source:
        remote:
          path: es.efor.Logging.Serilog/Extensions/IHostBuilderExtensions.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UseEforSerilog
        path: ../es.efor.Logging.Serilog/Extensions/IHostBuilderExtensions.cs
        startLine: 19
      example: []
      syntax:
        content:
          CSharp: public static IHostBuilder UseEforSerilog<TProgram>(this IHostBuilder hostBuilder, DateTimeOffset appStartDatetime, string appInstanceId, string hostName)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function UseEforSerilog(Of TProgram)(hostBuilder As IHostBuilder, appStartDatetime As DateTimeOffset, appInstanceId As String, hostName As String) As IHostBuilder
        parameters:
        - id: hostBuilder
          type: Microsoft.Extensions.Hosting.IHostBuilder
          description: ''
        - id: appStartDatetime
          type: System.DateTimeOffset
        - id: appInstanceId
          type: System.String
          description: ''
        - id: hostName
          type: System.String
          description: ''
        typeParameters:
        - id: TProgram
          description: Clase de &quot;Program&quot; o &quot;Startup&quot; que ejecuta la aplicación.
        return:
          type: Microsoft.Extensions.Hosting.IHostBuilder
          description: ''
      overload: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        ? es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog(Microsoft.Extensions.Hosting.IHostBuilder,System.Reflection.Assembly,System.DateTimeOffset,System.String,System.String)
        : 
    - isExtensionMethod: true
      id: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog(Microsoft.Extensions.Hosting.IHostBuilder,System.Reflection.Assembly,System.DateTimeOffset,System.String,System.String)
      commentId: M:es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog(Microsoft.Extensions.Hosting.IHostBuilder,System.Reflection.Assembly,System.DateTimeOffset,System.String,System.String)
      language: CSharp
      name:
        CSharp: UseEforSerilog(IHostBuilder, Assembly, DateTimeOffset, String, String)
        VB: UseEforSerilog(IHostBuilder, Assembly, DateTimeOffset, String, String)
      nameWithType:
        CSharp: IHostBuilderExtensions.UseEforSerilog(IHostBuilder, Assembly, DateTimeOffset, String, String)
        VB: IHostBuilderExtensions.UseEforSerilog(IHostBuilder, Assembly, DateTimeOffset, String, String)
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog(Microsoft.Extensions.Hosting.IHostBuilder, System.Reflection.Assembly, System.DateTimeOffset, System.String, System.String)
        VB: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog(Microsoft.Extensions.Hosting.IHostBuilder, System.Reflection.Assembly, System.DateTimeOffset, System.String, System.String)
      type: Method
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Extensions
      source:
        remote:
          path: es.efor.Logging.Serilog/Extensions/IHostBuilderExtensions.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UseEforSerilog
        path: ../es.efor.Logging.Serilog/Extensions/IHostBuilderExtensions.cs
        startLine: 39
      summary: "\nImplementa el módulo de Serilog para registro de datos y peticiones.\n"
      example: []
      syntax:
        content:
          CSharp: public static IHostBuilder UseEforSerilog(this IHostBuilder hostBuilder, Assembly mainAppAssembly, DateTimeOffset appStartDatetime, string appInstanceId, string hostName)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function UseEforSerilog(hostBuilder As IHostBuilder, mainAppAssembly As Assembly, appStartDatetime As DateTimeOffset, appInstanceId As String, hostName As String) As IHostBuilder
        parameters:
        - id: hostBuilder
          type: Microsoft.Extensions.Hosting.IHostBuilder
        - id: mainAppAssembly
          type: System.Reflection.Assembly
          description: Ensamblado que ejecuta la aplicación
        - id: appStartDatetime
          type: System.DateTimeOffset
          description: Fecha y hora en la cual se ha iniciado la instancia de la aplicación
        - id: appInstanceId
          type: System.String
          description: Instancia única de la aplicación, que ha de cambiar en cada ejecución de la aplicación
        - id: hostName
          type: System.String
          description: Nombre del anfitrión que ejecuta la instancia de la aplicación
        return:
          type: Microsoft.Extensions.Hosting.IHostBuilder
          description: ''
      overload: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog(Microsoft.Extensions.Hosting.IHostBuilder,System.ValueTuple{System.String,System.Object}[])
      commentId: M:es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog(Microsoft.Extensions.Hosting.IHostBuilder,System.ValueTuple{System.String,System.Object}[])
      language: CSharp
      name:
        CSharp: UseEforSerilog(IHostBuilder, (String propertyName, Object propertyValue)[])
        VB: UseEforSerilog(IHostBuilder, (propertyName As String, propertyValue As Object)())
      nameWithType:
        CSharp: IHostBuilderExtensions.UseEforSerilog(IHostBuilder, (String propertyName, Object propertyValue)[])
        VB: IHostBuilderExtensions.UseEforSerilog(IHostBuilder, (propertyName As String, propertyValue As Object)())
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog(Microsoft.Extensions.Hosting.IHostBuilder, System.ValueTuple<System.String, System.Object>[])
        VB: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog(Microsoft.Extensions.Hosting.IHostBuilder, System.ValueTuple(Of System.String, System.Object)())
      type: Method
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Extensions
      source:
        remote:
          path: es.efor.Logging.Serilog/Extensions/IHostBuilderExtensions.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: UseEforSerilog
        path: ../es.efor.Logging.Serilog/Extensions/IHostBuilderExtensions.cs
        startLine: 65
      summary: "\nImplementa el módulo de Serilog para registro de datos y peticiones.\n"
      example: []
      syntax:
        content:
          CSharp: public static IHostBuilder UseEforSerilog(this IHostBuilder hostBuilder, params (string propertyName, object propertyValue)[] extraProperties)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function UseEforSerilog(hostBuilder As IHostBuilder, ParamArray extraProperties As(propertyName As String, propertyValue As Object)()) As IHostBuilder
        parameters:
        - id: hostBuilder
          type: Microsoft.Extensions.Hosting.IHostBuilder
          description: ''
        - id: extraProperties
          type: System.ValueTuple{System.String,System.Object}[]
          description: ''
        return:
          type: Microsoft.Extensions.Hosting.IHostBuilder
          description: ''
      overload: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: es.efor.Logging.Serilog.Middleware
  commentId: N:es.efor.Logging.Serilog.Middleware
  language: CSharp
  name:
    CSharp: es.efor.Logging.Serilog.Middleware
    VB: es.efor.Logging.Serilog.Middleware
  nameWithType:
    CSharp: es.efor.Logging.Serilog.Middleware
    VB: es.efor.Logging.Serilog.Middleware
  qualifiedName:
    CSharp: es.efor.Logging.Serilog.Middleware
    VB: es.efor.Logging.Serilog.Middleware
  type: Namespace
  assemblies:
  - es.efor.Logging.Serilog
  modifiers: {}
  items:
  - id: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware
    commentId: T:es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware
    language: CSharp
    name:
      CSharp: BodyLoggerMiddleware
      VB: BodyLoggerMiddleware
    nameWithType:
      CSharp: BodyLoggerMiddleware
      VB: BodyLoggerMiddleware
    qualifiedName:
      CSharp: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware
      VB: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware
    type: Class
    assemblies:
    - es.efor.Logging.Serilog
    namespace: es.efor.Logging.Serilog.Middleware
    source:
      remote:
        path: es.efor.Logging.Serilog/Middleware/BodyLoggerMiddleware.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
      id: BodyLoggerMiddleware
      path: ../es.efor.Logging.Serilog/Middleware/BodyLoggerMiddleware.cs
      startLine: 13
    syntax:
      content:
        CSharp: public class BodyLoggerMiddleware
        VB: Public Class BodyLoggerMiddleware
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Serilog.IDiagnosticContext)
      commentId: M:es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Serilog.IDiagnosticContext)
      language: CSharp
      name:
        CSharp: BodyLoggerMiddleware(RequestDelegate, IDiagnosticContext)
        VB: BodyLoggerMiddleware(RequestDelegate, IDiagnosticContext)
      nameWithType:
        CSharp: BodyLoggerMiddleware.BodyLoggerMiddleware(RequestDelegate, IDiagnosticContext)
        VB: BodyLoggerMiddleware.BodyLoggerMiddleware(RequestDelegate, IDiagnosticContext)
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.BodyLoggerMiddleware(Microsoft.AspNetCore.Http.RequestDelegate, Serilog.IDiagnosticContext)
        VB: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.BodyLoggerMiddleware(Microsoft.AspNetCore.Http.RequestDelegate, Serilog.IDiagnosticContext)
      type: Constructor
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Middleware
      source:
        remote:
          path: es.efor.Logging.Serilog/Middleware/BodyLoggerMiddleware.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: .ctor
        path: ../es.efor.Logging.Serilog/Middleware/BodyLoggerMiddleware.cs
        startLine: 18
      syntax:
        content:
          CSharp: public BodyLoggerMiddleware(RequestDelegate next, IDiagnosticContext serilogContext)
          VB: Public Sub New(next As RequestDelegate, serilogContext As IDiagnosticContext)
        parameters:
        - id: next
          type: Microsoft.AspNetCore.Http.RequestDelegate
        - id: serilogContext
          type: Serilog.IDiagnosticContext
      overload: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)
      commentId: M:es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)
      language: CSharp
      name:
        CSharp: Invoke(HttpContext)
        VB: Invoke(HttpContext)
      nameWithType:
        CSharp: BodyLoggerMiddleware.Invoke(HttpContext)
        VB: BodyLoggerMiddleware.Invoke(HttpContext)
      qualifiedName:
        CSharp: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)
        VB: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)
      type: Method
      assemblies:
      - es.efor.Logging.Serilog
      namespace: es.efor.Logging.Serilog.Middleware
      source:
        remote:
          path: es.efor.Logging.Serilog/Middleware/BodyLoggerMiddleware.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
        id: Invoke
        path: ../es.efor.Logging.Serilog/Middleware/BodyLoggerMiddleware.cs
        startLine: 23
      syntax:
        content:
          CSharp: public Task Invoke(HttpContext context)
          VB: Public Function Invoke(context As HttpContext) As Task
        parameters:
        - id: context
          type: Microsoft.AspNetCore.Http.HttpContext
        return:
          type: System.Threading.Tasks.Task
      overload: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.Invoke*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware:
    name:
      CSharp:
      - id: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware
        name: BodyLoggerMiddleware
        nameWithType: BodyLoggerMiddleware
        qualifiedName: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware
      VB:
      - id: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware
        name: BodyLoggerMiddleware
        nameWithType: BodyLoggerMiddleware
        qualifiedName: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware
    isDefinition: true
    commentId: T:es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware
  es.efor.Logging.Serilog.Constants.EnrichProperties:
    name:
      CSharp:
      - id: es.efor.Logging.Serilog.Constants.EnrichProperties
        name: EnrichProperties
        nameWithType: EnrichProperties
        qualifiedName: es.efor.Logging.Serilog.Constants.EnrichProperties
      VB:
      - id: es.efor.Logging.Serilog.Constants.EnrichProperties
        name: EnrichProperties
        nameWithType: EnrichProperties
        qualifiedName: es.efor.Logging.Serilog.Constants.EnrichProperties
    isDefinition: true
    commentId: T:es.efor.Logging.Serilog.Constants.EnrichProperties
  es.efor.Logging.Serilog.Constants:
    name:
      CSharp:
      - name: es.efor.Logging.Serilog.Constants
        nameWithType: es.efor.Logging.Serilog.Constants
        qualifiedName: es.efor.Logging.Serilog.Constants
      VB:
      - name: es.efor.Logging.Serilog.Constants
        nameWithType: es.efor.Logging.Serilog.Constants
        qualifiedName: es.efor.Logging.Serilog.Constants
    isDefinition: true
    commentId: N:es.efor.Logging.Serilog.Constants
  Microsoft.AspNetCore.Builder:
    name:
      CSharp:
      - name: Microsoft.AspNetCore.Builder
        nameWithType: Microsoft.AspNetCore.Builder
        qualifiedName: Microsoft.AspNetCore.Builder
        isExternal: true
      VB:
      - name: Microsoft.AspNetCore.Builder
        nameWithType: Microsoft.AspNetCore.Builder
        qualifiedName: Microsoft.AspNetCore.Builder
    isDefinition: true
    commentId: N:Microsoft.AspNetCore.Builder
  Microsoft.AspNetCore.Builder.IApplicationBuilder:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Builder.IApplicationBuilder
        name: IApplicationBuilder
        nameWithType: IApplicationBuilder
        qualifiedName: Microsoft.AspNetCore.Builder.IApplicationBuilder
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Builder.IApplicationBuilder
        name: IApplicationBuilder
        nameWithType: IApplicationBuilder
        qualifiedName: Microsoft.AspNetCore.Builder.IApplicationBuilder
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Builder
    commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions.UseEforSerilog*:
    name:
      CSharp:
      - id: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions.UseEforSerilog*
        name: UseEforSerilog
        nameWithType: IApplicationBuilderExtensions.UseEforSerilog
        qualifiedName: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions.UseEforSerilog
      VB:
      - id: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions.UseEforSerilog*
        name: UseEforSerilog
        nameWithType: IApplicationBuilderExtensions.UseEforSerilog
        qualifiedName: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions.UseEforSerilog
    isDefinition: true
    commentId: Overload:es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions.UseEforSerilog
  es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions:
    name:
      CSharp:
      - id: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions
        name: IApplicationBuilderExtensions
        nameWithType: IApplicationBuilderExtensions
        qualifiedName: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions
      VB:
      - id: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions
        name: IApplicationBuilderExtensions
        nameWithType: IApplicationBuilderExtensions
        qualifiedName: es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions
    isDefinition: true
    commentId: T:es.efor.Logging.Serilog.Extensions.IApplicationBuilderExtensions
  ? es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog(Microsoft.Extensions.Hosting.IHostBuilder,System.Reflection.Assembly,System.DateTimeOffset,System.String,System.String)
  : commentId: M:es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog(Microsoft.Extensions.Hosting.IHostBuilder,System.Reflection.Assembly,System.DateTimeOffset,System.String,System.String)
  Microsoft.Extensions.Hosting:
    name:
      CSharp:
      - name: Microsoft.Extensions.Hosting
        nameWithType: Microsoft.Extensions.Hosting
        qualifiedName: Microsoft.Extensions.Hosting
        isExternal: true
      VB:
      - name: Microsoft.Extensions.Hosting
        nameWithType: Microsoft.Extensions.Hosting
        qualifiedName: Microsoft.Extensions.Hosting
    isDefinition: true
    commentId: N:Microsoft.Extensions.Hosting
  Microsoft.Extensions.Hosting.IHostBuilder:
    name:
      CSharp:
      - id: Microsoft.Extensions.Hosting.IHostBuilder
        name: IHostBuilder
        nameWithType: IHostBuilder
        qualifiedName: Microsoft.Extensions.Hosting.IHostBuilder
        isExternal: true
      VB:
      - id: Microsoft.Extensions.Hosting.IHostBuilder
        name: IHostBuilder
        nameWithType: IHostBuilder
        qualifiedName: Microsoft.Extensions.Hosting.IHostBuilder
        isExternal: true
    isDefinition: true
    parent: Microsoft.Extensions.Hosting
    commentId: T:Microsoft.Extensions.Hosting.IHostBuilder
  System.DateTimeOffset:
    name:
      CSharp:
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      VB:
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.DateTimeOffset
  es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog*:
    name:
      CSharp:
      - id: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog*
        name: UseEforSerilog
        nameWithType: IHostBuilderExtensions.UseEforSerilog
        qualifiedName: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog
      VB:
      - id: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog*
        name: UseEforSerilog
        nameWithType: IHostBuilderExtensions.UseEforSerilog
        qualifiedName: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog
    isDefinition: true
    commentId: Overload:es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions.UseEforSerilog
  System.Reflection:
    name:
      CSharp:
      - name: System.Reflection
        nameWithType: System.Reflection
        qualifiedName: System.Reflection
        isExternal: true
      VB:
      - name: System.Reflection
        nameWithType: System.Reflection
        qualifiedName: System.Reflection
    isDefinition: true
    commentId: N:System.Reflection
  System.Reflection.Assembly:
    name:
      CSharp:
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      VB:
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
    isDefinition: true
    parent: System.Reflection
    commentId: T:System.Reflection.Assembly
  System.ValueTuple{System.String,System.Object}[]:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: ValueTuple
        nameWithType: ValueTuple
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.ValueTuple`2
        name: ValueTuple
        nameWithType: ValueTuple
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions:
    name:
      CSharp:
      - id: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions
        name: IHostBuilderExtensions
        nameWithType: IHostBuilderExtensions
        qualifiedName: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions
      VB:
      - id: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions
        name: IHostBuilderExtensions
        nameWithType: IHostBuilderExtensions
        qualifiedName: es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions
    isDefinition: true
    commentId: T:es.efor.Logging.Serilog.Extensions.IHostBuilderExtensions
  es.efor.Logging.Serilog.Extensions:
    name:
      CSharp:
      - name: es.efor.Logging.Serilog.Extensions
        nameWithType: es.efor.Logging.Serilog.Extensions
        qualifiedName: es.efor.Logging.Serilog.Extensions
      VB:
      - name: es.efor.Logging.Serilog.Extensions
        nameWithType: es.efor.Logging.Serilog.Extensions
        qualifiedName: es.efor.Logging.Serilog.Extensions
    isDefinition: true
    commentId: N:es.efor.Logging.Serilog.Extensions
  es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings):
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
        name: CopyMap<TDestination>
        nameWithType: ObjectHelper.CopyMap<TDestination>
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Newtonsoft.Json.JsonSerializerSettings
        name: JsonSerializerSettings
        nameWithType: JsonSerializerSettings
        qualifiedName: Newtonsoft.Json.JsonSerializerSettings
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
        name: CopyMap(Of TDestination)
        nameWithType: ObjectHelper.CopyMap(Of TDestination)
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Newtonsoft.Json.JsonSerializerSettings
        name: JsonSerializerSettings
        nameWithType: JsonSerializerSettings
        qualifiedName: Newtonsoft.Json.JsonSerializerSettings
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  es.efor.Utilities.General.Helpers:
    name:
      CSharp:
      - name: es.efor.Utilities.General.Helpers
        nameWithType: es.efor.Utilities.General.Helpers
        qualifiedName: es.efor.Utilities.General.Helpers
      VB:
      - name: es.efor.Utilities.General.Helpers
        nameWithType: es.efor.Utilities.General.Helpers
        qualifiedName: es.efor.Utilities.General.Helpers
    isDefinition: true
    commentId: N:es.efor.Utilities.General.Helpers
  es.efor.Utilities.General.Helpers.ObjectHelper:
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper
        name: ObjectHelper
        nameWithType: ObjectHelper
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper
        name: ObjectHelper
        nameWithType: ObjectHelper
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper
    isDefinition: true
    parent: es.efor.Utilities.General.Helpers
    commentId: T:es.efor.Utilities.General.Helpers.ObjectHelper
  System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings):
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
        name: CopyMap<TDestination>
        nameWithType: ObjectHelper.CopyMap<TDestination>
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Newtonsoft.Json.JsonSerializerSettings
        name: JsonSerializerSettings
        nameWithType: JsonSerializerSettings
        qualifiedName: Newtonsoft.Json.JsonSerializerSettings
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
        name: CopyMap(Of TDestination)
        nameWithType: ObjectHelper.CopyMap(Of TDestination)
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Newtonsoft.Json.JsonSerializerSettings
        name: JsonSerializerSettings
        nameWithType: JsonSerializerSettings
        qualifiedName: Newtonsoft.Json.JsonSerializerSettings
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
    parent: es.efor.Utilities.General.Helpers.ObjectHelper
    commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling):
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
        name: CopyMap<TDestination>
        nameWithType: ObjectHelper.CopyMap<TDestination>
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Newtonsoft.Json.ReferenceLoopHandling
        name: ReferenceLoopHandling
        nameWithType: ReferenceLoopHandling
        qualifiedName: Newtonsoft.Json.ReferenceLoopHandling
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
        name: CopyMap(Of TDestination)
        nameWithType: ObjectHelper.CopyMap(Of TDestination)
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Newtonsoft.Json.ReferenceLoopHandling
        name: ReferenceLoopHandling
        nameWithType: ReferenceLoopHandling
        qualifiedName: Newtonsoft.Json.ReferenceLoopHandling
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling):
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
        name: CopyMap<TDestination>
        nameWithType: ObjectHelper.CopyMap<TDestination>
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Newtonsoft.Json.ReferenceLoopHandling
        name: ReferenceLoopHandling
        nameWithType: ReferenceLoopHandling
        qualifiedName: Newtonsoft.Json.ReferenceLoopHandling
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
        name: CopyMap(Of TDestination)
        nameWithType: ObjectHelper.CopyMap(Of TDestination)
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Newtonsoft.Json.ReferenceLoopHandling
        name: ReferenceLoopHandling
        nameWithType: ReferenceLoopHandling
        qualifiedName: Newtonsoft.Json.ReferenceLoopHandling
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
    parent: es.efor.Utilities.General.Helpers.ObjectHelper
    commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  Microsoft.AspNetCore.Http:
    name:
      CSharp:
      - name: Microsoft.AspNetCore.Http
        nameWithType: Microsoft.AspNetCore.Http
        qualifiedName: Microsoft.AspNetCore.Http
        isExternal: true
      VB:
      - name: Microsoft.AspNetCore.Http
        nameWithType: Microsoft.AspNetCore.Http
        qualifiedName: Microsoft.AspNetCore.Http
    isDefinition: true
    commentId: N:Microsoft.AspNetCore.Http
  Microsoft.AspNetCore.Http.RequestDelegate:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Http.RequestDelegate
        name: RequestDelegate
        nameWithType: RequestDelegate
        qualifiedName: Microsoft.AspNetCore.Http.RequestDelegate
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Http.RequestDelegate
        name: RequestDelegate
        nameWithType: RequestDelegate
        qualifiedName: Microsoft.AspNetCore.Http.RequestDelegate
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Http
    commentId: T:Microsoft.AspNetCore.Http.RequestDelegate
  Serilog:
    name:
      CSharp:
      - name: Serilog
        nameWithType: Serilog
        qualifiedName: Serilog
        isExternal: true
      VB:
      - name: Serilog
        nameWithType: Serilog
        qualifiedName: Serilog
    isDefinition: true
    commentId: N:Serilog
  Serilog.IDiagnosticContext:
    name:
      CSharp:
      - id: Serilog.IDiagnosticContext
        name: IDiagnosticContext
        nameWithType: IDiagnosticContext
        qualifiedName: Serilog.IDiagnosticContext
        isExternal: true
      VB:
      - id: Serilog.IDiagnosticContext
        name: IDiagnosticContext
        nameWithType: IDiagnosticContext
        qualifiedName: Serilog.IDiagnosticContext
        isExternal: true
    isDefinition: true
    parent: Serilog
    commentId: T:Serilog.IDiagnosticContext
  es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.#ctor*:
    name:
      CSharp:
      - id: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.#ctor*
        name: BodyLoggerMiddleware
        nameWithType: BodyLoggerMiddleware.BodyLoggerMiddleware
        qualifiedName: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.BodyLoggerMiddleware
      VB:
      - id: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.#ctor*
        name: BodyLoggerMiddleware
        nameWithType: BodyLoggerMiddleware.BodyLoggerMiddleware
        qualifiedName: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.BodyLoggerMiddleware
    isDefinition: true
    commentId: Overload:es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.#ctor
  System.Threading.Tasks:
    name:
      CSharp:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
        isExternal: true
      VB:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
    isDefinition: true
    commentId: N:System.Threading.Tasks
  System.Threading.Tasks.Task:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      VB:
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
    isDefinition: true
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task
  Microsoft.AspNetCore.Http.HttpContext:
    name:
      CSharp:
      - id: Microsoft.AspNetCore.Http.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: Microsoft.AspNetCore.Http.HttpContext
        isExternal: true
      VB:
      - id: Microsoft.AspNetCore.Http.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: Microsoft.AspNetCore.Http.HttpContext
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNetCore.Http
    commentId: T:Microsoft.AspNetCore.Http.HttpContext
  es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.Invoke*:
    name:
      CSharp:
      - id: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.Invoke*
        name: Invoke
        nameWithType: BodyLoggerMiddleware.Invoke
        qualifiedName: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.Invoke
      VB:
      - id: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.Invoke*
        name: Invoke
        nameWithType: BodyLoggerMiddleware.Invoke
        qualifiedName: es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.Invoke
    isDefinition: true
    commentId: Overload:es.efor.Logging.Serilog.Middleware.BodyLoggerMiddleware.Invoke
  es.efor.Logging.Serilog.Middleware:
    name:
      CSharp:
      - name: es.efor.Logging.Serilog.Middleware
        nameWithType: es.efor.Logging.Serilog.Middleware
        qualifiedName: es.efor.Logging.Serilog.Middleware
      VB:
      - name: es.efor.Logging.Serilog.Middleware
        nameWithType: es.efor.Logging.Serilog.Middleware
        qualifiedName: es.efor.Logging.Serilog.Middleware
    isDefinition: true
    commentId: N:es.efor.Logging.Serilog.Middleware
