### YamlMime:ManagedReference
items:
- uid: es.efor.Auth.Managers.IdentitySignInManager`2
  commentId: T:es.efor.Auth.Managers.IdentitySignInManager`2
  id: IdentitySignInManager`2
  parent: es.efor.Auth.Managers
  children:
  - es.efor.Auth.Managers.IdentitySignInManager`2.#ctor(es.efor.Auth.Managers.IdentityUserManager{`0,`1},Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{`1},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.Extensions.Logging.ILogger{es.efor.Auth.Managers.IdentitySignInManager{`0,`1}},Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider,Microsoft.AspNetCore.Identity.IUserConfirmation{`1})
  langs:
  - csharp
  - vb
  name: IdentitySignInManager<TUserId, TUser>
  nameWithType: IdentitySignInManager<TUserId, TUser>
  fullName: es.efor.Auth.Managers.IdentitySignInManager<TUserId, TUser>
  type: Class
  source:
    remote:
      path: es.efor.Auth/Managers/IdentitySignInManager.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: IdentitySignInManager
    path: ../es.efor.Auth/Managers/IdentitySignInManager.cs
    startLine: 10
  assemblies:
  - es.efor.Auth
  namespace: es.efor.Auth.Managers
  syntax:
    content: 'public class IdentitySignInManager<TUserId, TUser> : SignInManager<TUser> where TUserId : IEquatable<TUserId> where TUser : User<TUserId>'
    typeParameters:
    - id: TUserId
    - id: TUser
    content.vb: >-
      Public Class IdentitySignInManager(Of TUserId As IEquatable(Of TUserId), TUser As User(Of TUserId))

          Inherits SignInManager(Of TUser)
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  inheritedMembers:
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.CanSignInAsync({TUser})
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.CheckPasswordSignInAsync({TUser},System.String,System.Boolean)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.CreateUserPrincipalAsync({TUser})
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ForgetTwoFactorClientAsync
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.GetExternalAuthenticationSchemesAsync
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.GetExternalLoginInfoAsync(System.String)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.GetTwoFactorAuthenticationUserAsync
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.IsLockedOut({TUser})
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.IsTwoFactorClientRememberedAsync({TUser})
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.LockedOut({TUser})
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.PasswordSignInAsync({TUser},System.String,System.Boolean,System.Boolean)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.PreSignInCheck({TUser})
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.RefreshSignInAsync({TUser})
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.RememberTwoFactorClientAsync({TUser})
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ResetLockout({TUser})
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInAsync({TUser},Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInAsync({TUser},System.Boolean,System.String)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInOrTwoFactorAsync({TUser},System.Boolean,System.String,System.Boolean)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInWithClaimsAsync({TUser},Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInWithClaimsAsync({TUser},System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignOutAsync
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.TwoFactorRecoveryCodeSignInAsync(System.String)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ValidateSecurityStampAsync({TUser},System.String)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ClaimsFactory
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.Context
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.Logger
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.Options
  - Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.UserManager
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
  - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
  nameWithType.vb: IdentitySignInManager(Of TUserId, TUser)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: es.efor.Auth.Managers.IdentitySignInManager(Of TUserId, TUser)
  name.vb: IdentitySignInManager(Of TUserId, TUser)
- uid: es.efor.Auth.Managers.IdentitySignInManager`2.#ctor(es.efor.Auth.Managers.IdentityUserManager{`0,`1},Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{`1},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.Extensions.Logging.ILogger{es.efor.Auth.Managers.IdentitySignInManager{`0,`1}},Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider,Microsoft.AspNetCore.Identity.IUserConfirmation{`1})
  commentId: M:es.efor.Auth.Managers.IdentitySignInManager`2.#ctor(es.efor.Auth.Managers.IdentityUserManager{`0,`1},Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{`1},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.Extensions.Logging.ILogger{es.efor.Auth.Managers.IdentitySignInManager{`0,`1}},Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider,Microsoft.AspNetCore.Identity.IUserConfirmation{`1})
  id: '#ctor(es.efor.Auth.Managers.IdentityUserManager{`0,`1},Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{`1},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.Extensions.Logging.ILogger{es.efor.Auth.Managers.IdentitySignInManager{`0,`1}},Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider,Microsoft.AspNetCore.Identity.IUserConfirmation{`1})'
  parent: es.efor.Auth.Managers.IdentitySignInManager`2
  langs:
  - csharp
  - vb
  name: IdentitySignInManager(IdentityUserManager<TUserId, TUser>, IHttpContextAccessor, IUserClaimsPrincipalFactory<TUser>, IOptions<IdentityOptions>, ILogger<IdentitySignInManager<TUserId, TUser>>, IAuthenticationSchemeProvider, IUserConfirmation<TUser>)
  nameWithType: IdentitySignInManager<TUserId, TUser>.IdentitySignInManager(IdentityUserManager<TUserId, TUser>, IHttpContextAccessor, IUserClaimsPrincipalFactory<TUser>, IOptions<IdentityOptions>, ILogger<IdentitySignInManager<TUserId, TUser>>, IAuthenticationSchemeProvider, IUserConfirmation<TUser>)
  fullName: es.efor.Auth.Managers.IdentitySignInManager<TUserId, TUser>.IdentitySignInManager(es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>, Microsoft.AspNetCore.Http.IHttpContextAccessor, Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory<TUser>, Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.IdentityOptions>, Microsoft.Extensions.Logging.ILogger<es.efor.Auth.Managers.IdentitySignInManager<TUserId, TUser>>, Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider, Microsoft.AspNetCore.Identity.IUserConfirmation<TUser>)
  type: Constructor
  source:
    remote:
      path: es.efor.Auth/Managers/IdentitySignInManager.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: .ctor
    path: ../es.efor.Auth/Managers/IdentitySignInManager.cs
    startLine: 14
  assemblies:
  - es.efor.Auth
  namespace: es.efor.Auth.Managers
  syntax:
    content: public IdentitySignInManager(IdentityUserManager<TUserId, TUser> userManager, IHttpContextAccessor contextAccessor, IUserClaimsPrincipalFactory<TUser> claimsFactory, IOptions<IdentityOptions> optionsAccessor, ILogger<IdentitySignInManager<TUserId, TUser>> logger, IAuthenticationSchemeProvider schemes, IUserConfirmation<TUser> confirmation)
    parameters:
    - id: userManager
      type: es.efor.Auth.Managers.IdentityUserManager{{TUserId},{TUser}}
    - id: contextAccessor
      type: Microsoft.AspNetCore.Http.IHttpContextAccessor
    - id: claimsFactory
      type: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{{TUser}}
    - id: optionsAccessor
      type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{es.efor.Auth.Managers.IdentitySignInManager`2}
    - id: schemes
      type: Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider
    - id: confirmation
      type: Microsoft.AspNetCore.Identity.IUserConfirmation{{TUser}}
    content.vb: Public Sub New(userManager As IdentityUserManager(Of TUserId, TUser), contextAccessor As IHttpContextAccessor, claimsFactory As IUserClaimsPrincipalFactory(Of TUser), optionsAccessor As IOptions(Of IdentityOptions), logger As ILogger(Of IdentitySignInManager(Of TUserId, TUser)), schemes As IAuthenticationSchemeProvider, confirmation As IUserConfirmation(Of TUser))
  overload: es.efor.Auth.Managers.IdentitySignInManager`2.#ctor*
  nameWithType.vb: IdentitySignInManager(Of TUserId, TUser).IdentitySignInManager(IdentityUserManager(Of TUserId, TUser), IHttpContextAccessor, IUserClaimsPrincipalFactory(Of TUser), IOptions(Of IdentityOptions), ILogger(Of IdentitySignInManager(Of TUserId, TUser)), IAuthenticationSchemeProvider, IUserConfirmation(Of TUser))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: es.efor.Auth.Managers.IdentitySignInManager(Of TUserId, TUser).IdentitySignInManager(es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser), Microsoft.AspNetCore.Http.IHttpContextAccessor, Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory(Of TUser), Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Identity.IdentityOptions), Microsoft.Extensions.Logging.ILogger(Of es.efor.Auth.Managers.IdentitySignInManager(Of TUserId, TUser)), Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider, Microsoft.AspNetCore.Identity.IUserConfirmation(Of TUser))
  name.vb: IdentitySignInManager(IdentityUserManager(Of TUserId, TUser), IHttpContextAccessor, IUserClaimsPrincipalFactory(Of TUser), IOptions(Of IdentityOptions), ILogger(Of IdentitySignInManager(Of TUserId, TUser)), IAuthenticationSchemeProvider, IUserConfirmation(Of TUser))
references:
- uid: es.efor.Auth.Managers
  commentId: N:es.efor.Auth.Managers
  name: es.efor.Auth.Managers
  nameWithType: es.efor.Auth.Managers
  fullName: es.efor.Auth.Managers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.SignInManager{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.SignInManager`1
  name: SignInManager<TUser>
  nameWithType: SignInManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>
  nameWithType.vb: SignInManager(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser)
  name.vb: SignInManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: Microsoft.AspNetCore.Identity.SignInManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: Microsoft.AspNetCore.Identity.SignInManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.CanSignInAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.CanSignInAsync(`1)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
  name: CanSignInAsync(TUser)
  nameWithType: SignInManager<TUser>.CanSignInAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CanSignInAsync(TUser)
  nameWithType.vb: SignInManager(Of TUser).CanSignInAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CanSignInAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
    name: CanSignInAsync
    nameWithType: SignInManager<TUser>.CanSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CanSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
    name: CanSignInAsync
    nameWithType: SignInManager(Of TUser).CanSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CanSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.CheckPasswordSignInAsync({TUser},System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.CheckPasswordSignInAsync(`1,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
  name: CheckPasswordSignInAsync(TUser, String, Boolean)
  nameWithType: SignInManager<TUser>.CheckPasswordSignInAsync(TUser, String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CheckPasswordSignInAsync(TUser, System.String, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).CheckPasswordSignInAsync(TUser, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CheckPasswordSignInAsync(TUser, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
    name: CheckPasswordSignInAsync
    nameWithType: SignInManager<TUser>.CheckPasswordSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CheckPasswordSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
    name: CheckPasswordSignInAsync
    nameWithType: SignInManager(Of TUser).CheckPasswordSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CheckPasswordSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
  name: ConfigureExternalAuthenticationProperties(String, String, String)
  nameWithType: SignInManager<TUser>.ConfigureExternalAuthenticationProperties(String, String, String)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ConfigureExternalAuthenticationProperties(System.String, System.String, System.String)
  nameWithType.vb: SignInManager(Of TUser).ConfigureExternalAuthenticationProperties(String, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ConfigureExternalAuthenticationProperties(System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
    name: ConfigureExternalAuthenticationProperties
    nameWithType: SignInManager<TUser>.ConfigureExternalAuthenticationProperties
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ConfigureExternalAuthenticationProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
    name: ConfigureExternalAuthenticationProperties
    nameWithType: SignInManager(Of TUser).ConfigureExternalAuthenticationProperties
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ConfigureExternalAuthenticationProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.CreateUserPrincipalAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.CreateUserPrincipalAsync(`1)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
  name: CreateUserPrincipalAsync(TUser)
  nameWithType: SignInManager<TUser>.CreateUserPrincipalAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CreateUserPrincipalAsync(TUser)
  nameWithType.vb: SignInManager(Of TUser).CreateUserPrincipalAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CreateUserPrincipalAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
    name: CreateUserPrincipalAsync
    nameWithType: SignInManager<TUser>.CreateUserPrincipalAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CreateUserPrincipalAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
    name: CreateUserPrincipalAsync
    nameWithType: SignInManager(Of TUser).CreateUserPrincipalAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CreateUserPrincipalAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
  name: ExternalLoginSignInAsync(String, String, Boolean)
  nameWithType: SignInManager<TUser>.ExternalLoginSignInAsync(String, String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync(System.String, System.String, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).ExternalLoginSignInAsync(String, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ExternalLoginSignInAsync(System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
    name: ExternalLoginSignInAsync
    nameWithType: SignInManager<TUser>.ExternalLoginSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
    name: ExternalLoginSignInAsync
    nameWithType: SignInManager(Of TUser).ExternalLoginSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ExternalLoginSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  name: ExternalLoginSignInAsync(String, String, Boolean, Boolean)
  nameWithType: SignInManager<TUser>.ExternalLoginSignInAsync(String, String, Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync(System.String, System.String, System.Boolean, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).ExternalLoginSignInAsync(String, String, Boolean, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ExternalLoginSignInAsync(System.String, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    name: ExternalLoginSignInAsync
    nameWithType: SignInManager<TUser>.ExternalLoginSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    name: ExternalLoginSignInAsync
    nameWithType: SignInManager(Of TUser).ExternalLoginSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ExternalLoginSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ForgetTwoFactorClientAsync
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ForgetTwoFactorClientAsync
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
  name: ForgetTwoFactorClientAsync()
  nameWithType: SignInManager<TUser>.ForgetTwoFactorClientAsync()
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ForgetTwoFactorClientAsync()
  nameWithType.vb: SignInManager(Of TUser).ForgetTwoFactorClientAsync()
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ForgetTwoFactorClientAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
    name: ForgetTwoFactorClientAsync
    nameWithType: SignInManager<TUser>.ForgetTwoFactorClientAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ForgetTwoFactorClientAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
    name: ForgetTwoFactorClientAsync
    nameWithType: SignInManager(Of TUser).ForgetTwoFactorClientAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ForgetTwoFactorClientAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.GetExternalAuthenticationSchemesAsync
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.GetExternalAuthenticationSchemesAsync
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
  name: GetExternalAuthenticationSchemesAsync()
  nameWithType: SignInManager<TUser>.GetExternalAuthenticationSchemesAsync()
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetExternalAuthenticationSchemesAsync()
  nameWithType.vb: SignInManager(Of TUser).GetExternalAuthenticationSchemesAsync()
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetExternalAuthenticationSchemesAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
    name: GetExternalAuthenticationSchemesAsync
    nameWithType: SignInManager<TUser>.GetExternalAuthenticationSchemesAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetExternalAuthenticationSchemesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
    name: GetExternalAuthenticationSchemesAsync
    nameWithType: SignInManager(Of TUser).GetExternalAuthenticationSchemesAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetExternalAuthenticationSchemesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.GetExternalLoginInfoAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.GetExternalLoginInfoAsync(System.String)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
  name: GetExternalLoginInfoAsync(String)
  nameWithType: SignInManager<TUser>.GetExternalLoginInfoAsync(String)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetExternalLoginInfoAsync(System.String)
  nameWithType.vb: SignInManager(Of TUser).GetExternalLoginInfoAsync(String)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetExternalLoginInfoAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
    name: GetExternalLoginInfoAsync
    nameWithType: SignInManager<TUser>.GetExternalLoginInfoAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetExternalLoginInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
    name: GetExternalLoginInfoAsync
    nameWithType: SignInManager(Of TUser).GetExternalLoginInfoAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetExternalLoginInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.GetTwoFactorAuthenticationUserAsync
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.GetTwoFactorAuthenticationUserAsync
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
  name: GetTwoFactorAuthenticationUserAsync()
  nameWithType: SignInManager<TUser>.GetTwoFactorAuthenticationUserAsync()
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetTwoFactorAuthenticationUserAsync()
  nameWithType.vb: SignInManager(Of TUser).GetTwoFactorAuthenticationUserAsync()
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetTwoFactorAuthenticationUserAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
    name: GetTwoFactorAuthenticationUserAsync
    nameWithType: SignInManager<TUser>.GetTwoFactorAuthenticationUserAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetTwoFactorAuthenticationUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
    name: GetTwoFactorAuthenticationUserAsync
    nameWithType: SignInManager(Of TUser).GetTwoFactorAuthenticationUserAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetTwoFactorAuthenticationUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.IsLockedOut({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.IsLockedOut(`1)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
  name: IsLockedOut(TUser)
  nameWithType: SignInManager<TUser>.IsLockedOut(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsLockedOut(TUser)
  nameWithType.vb: SignInManager(Of TUser).IsLockedOut(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsLockedOut(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
    name: IsLockedOut
    nameWithType: SignInManager<TUser>.IsLockedOut
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsLockedOut
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
    name: IsLockedOut
    nameWithType: SignInManager(Of TUser).IsLockedOut
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsLockedOut
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
  name: IsSignedIn(ClaimsPrincipal)
  nameWithType: SignInManager<TUser>.IsSignedIn(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: SignInManager(Of TUser).IsSignedIn(ClaimsPrincipal)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsSignedIn(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
    name: IsSignedIn
    nameWithType: SignInManager<TUser>.IsSignedIn
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsSignedIn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
    name: IsSignedIn
    nameWithType: SignInManager(Of TUser).IsSignedIn
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsSignedIn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.IsTwoFactorClientRememberedAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.IsTwoFactorClientRememberedAsync(`1)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
  name: IsTwoFactorClientRememberedAsync(TUser)
  nameWithType: SignInManager<TUser>.IsTwoFactorClientRememberedAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsTwoFactorClientRememberedAsync(TUser)
  nameWithType.vb: SignInManager(Of TUser).IsTwoFactorClientRememberedAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsTwoFactorClientRememberedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
    name: IsTwoFactorClientRememberedAsync
    nameWithType: SignInManager<TUser>.IsTwoFactorClientRememberedAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsTwoFactorClientRememberedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
    name: IsTwoFactorClientRememberedAsync
    nameWithType: SignInManager(Of TUser).IsTwoFactorClientRememberedAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsTwoFactorClientRememberedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.LockedOut({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.LockedOut(`1)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
  name: LockedOut(TUser)
  nameWithType: SignInManager<TUser>.LockedOut(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.LockedOut(TUser)
  nameWithType.vb: SignInManager(Of TUser).LockedOut(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).LockedOut(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
    name: LockedOut
    nameWithType: SignInManager<TUser>.LockedOut
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.LockedOut
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
    name: LockedOut
    nameWithType: SignInManager(Of TUser).LockedOut
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).LockedOut
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  name: PasswordSignInAsync(String, String, Boolean, Boolean)
  nameWithType: SignInManager<TUser>.PasswordSignInAsync(String, String, Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync(System.String, System.String, System.Boolean, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).PasswordSignInAsync(String, String, Boolean, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PasswordSignInAsync(System.String, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    name: PasswordSignInAsync
    nameWithType: SignInManager<TUser>.PasswordSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    name: PasswordSignInAsync
    nameWithType: SignInManager(Of TUser).PasswordSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PasswordSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.PasswordSignInAsync({TUser},System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.PasswordSignInAsync(`1,System.String,System.Boolean,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
  name: PasswordSignInAsync(TUser, String, Boolean, Boolean)
  nameWithType: SignInManager<TUser>.PasswordSignInAsync(TUser, String, Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync(TUser, System.String, System.Boolean, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).PasswordSignInAsync(TUser, String, Boolean, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PasswordSignInAsync(TUser, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
    name: PasswordSignInAsync
    nameWithType: SignInManager<TUser>.PasswordSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
    name: PasswordSignInAsync
    nameWithType: SignInManager(Of TUser).PasswordSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PasswordSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.PreSignInCheck({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.PreSignInCheck(`1)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
  name: PreSignInCheck(TUser)
  nameWithType: SignInManager<TUser>.PreSignInCheck(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PreSignInCheck(TUser)
  nameWithType.vb: SignInManager(Of TUser).PreSignInCheck(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PreSignInCheck(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
    name: PreSignInCheck
    nameWithType: SignInManager<TUser>.PreSignInCheck
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PreSignInCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
    name: PreSignInCheck
    nameWithType: SignInManager(Of TUser).PreSignInCheck
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PreSignInCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.RefreshSignInAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.RefreshSignInAsync(`1)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
  name: RefreshSignInAsync(TUser)
  nameWithType: SignInManager<TUser>.RefreshSignInAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.RefreshSignInAsync(TUser)
  nameWithType.vb: SignInManager(Of TUser).RefreshSignInAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).RefreshSignInAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
    name: RefreshSignInAsync
    nameWithType: SignInManager<TUser>.RefreshSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.RefreshSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
    name: RefreshSignInAsync
    nameWithType: SignInManager(Of TUser).RefreshSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).RefreshSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.RememberTwoFactorClientAsync({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.RememberTwoFactorClientAsync(`1)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
  name: RememberTwoFactorClientAsync(TUser)
  nameWithType: SignInManager<TUser>.RememberTwoFactorClientAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.RememberTwoFactorClientAsync(TUser)
  nameWithType.vb: SignInManager(Of TUser).RememberTwoFactorClientAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).RememberTwoFactorClientAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
    name: RememberTwoFactorClientAsync
    nameWithType: SignInManager<TUser>.RememberTwoFactorClientAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.RememberTwoFactorClientAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
    name: RememberTwoFactorClientAsync
    nameWithType: SignInManager(Of TUser).RememberTwoFactorClientAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).RememberTwoFactorClientAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ResetLockout({TUser})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ResetLockout(`1)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
  name: ResetLockout(TUser)
  nameWithType: SignInManager<TUser>.ResetLockout(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ResetLockout(TUser)
  nameWithType.vb: SignInManager(Of TUser).ResetLockout(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ResetLockout(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
    name: ResetLockout
    nameWithType: SignInManager<TUser>.ResetLockout
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ResetLockout
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
    name: ResetLockout
    nameWithType: SignInManager(Of TUser).ResetLockout
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ResetLockout
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInAsync({TUser},Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.SignInAsync(`1,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  name: SignInAsync(TUser, AuthenticationProperties, String)
  nameWithType: SignInManager<TUser>.SignInAsync(TUser, AuthenticationProperties, String)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync(TUser, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String)
  nameWithType.vb: SignInManager(Of TUser).SignInAsync(TUser, AuthenticationProperties, String)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInAsync(TUser, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    name: SignInAsync
    nameWithType: SignInManager<TUser>.SignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    name: SignInAsync
    nameWithType: SignInManager(Of TUser).SignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInAsync({TUser},System.Boolean,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.SignInAsync(`1,System.Boolean,System.String)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
  name: SignInAsync(TUser, Boolean, String)
  nameWithType: SignInManager<TUser>.SignInAsync(TUser, Boolean, String)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync(TUser, System.Boolean, System.String)
  nameWithType.vb: SignInManager(Of TUser).SignInAsync(TUser, Boolean, String)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInAsync(TUser, System.Boolean, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
    name: SignInAsync
    nameWithType: SignInManager<TUser>.SignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
    name: SignInAsync
    nameWithType: SignInManager(Of TUser).SignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInOrTwoFactorAsync({TUser},System.Boolean,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.SignInOrTwoFactorAsync(`1,System.Boolean,System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
  name: SignInOrTwoFactorAsync(TUser, Boolean, String, Boolean)
  nameWithType: SignInManager<TUser>.SignInOrTwoFactorAsync(TUser, Boolean, String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInOrTwoFactorAsync(TUser, System.Boolean, System.String, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).SignInOrTwoFactorAsync(TUser, Boolean, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInOrTwoFactorAsync(TUser, System.Boolean, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
    name: SignInOrTwoFactorAsync
    nameWithType: SignInManager<TUser>.SignInOrTwoFactorAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInOrTwoFactorAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
    name: SignInOrTwoFactorAsync
    nameWithType: SignInManager(Of TUser).SignInOrTwoFactorAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInOrTwoFactorAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInWithClaimsAsync({TUser},Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.SignInWithClaimsAsync(`1,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  name: SignInWithClaimsAsync(TUser, AuthenticationProperties, IEnumerable<Claim>)
  nameWithType: SignInManager<TUser>.SignInWithClaimsAsync(TUser, AuthenticationProperties, IEnumerable<Claim>)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInWithClaimsAsync(TUser, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  nameWithType.vb: SignInManager(Of TUser).SignInWithClaimsAsync(TUser, AuthenticationProperties, IEnumerable(Of Claim))
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInWithClaimsAsync(TUser, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: SignInWithClaimsAsync(TUser, AuthenticationProperties, IEnumerable(Of Claim))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: SignInWithClaimsAsync
    nameWithType: SignInManager<TUser>.SignInWithClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInWithClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: SignInWithClaimsAsync
    nameWithType: SignInManager(Of TUser).SignInWithClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInWithClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignInWithClaimsAsync({TUser},System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.SignInWithClaimsAsync(`1,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  name: SignInWithClaimsAsync(TUser, Boolean, IEnumerable<Claim>)
  nameWithType: SignInManager<TUser>.SignInWithClaimsAsync(TUser, Boolean, IEnumerable<Claim>)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInWithClaimsAsync(TUser, System.Boolean, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  nameWithType.vb: SignInManager(Of TUser).SignInWithClaimsAsync(TUser, Boolean, IEnumerable(Of Claim))
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInWithClaimsAsync(TUser, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: SignInWithClaimsAsync(TUser, Boolean, IEnumerable(Of Claim))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: SignInWithClaimsAsync
    nameWithType: SignInManager<TUser>.SignInWithClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInWithClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: SignInWithClaimsAsync
    nameWithType: SignInManager(Of TUser).SignInWithClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInWithClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.SignOutAsync
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.SignOutAsync
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
  name: SignOutAsync()
  nameWithType: SignInManager<TUser>.SignOutAsync()
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignOutAsync()
  nameWithType.vb: SignInManager(Of TUser).SignOutAsync()
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignOutAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
    name: SignOutAsync
    nameWithType: SignInManager<TUser>.SignOutAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
    name: SignOutAsync
    nameWithType: SignInManager(Of TUser).SignOutAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
  name: TwoFactorAuthenticatorSignInAsync(String, Boolean, Boolean)
  nameWithType: SignInManager<TUser>.TwoFactorAuthenticatorSignInAsync(String, Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorAuthenticatorSignInAsync(System.String, System.Boolean, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).TwoFactorAuthenticatorSignInAsync(String, Boolean, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorAuthenticatorSignInAsync(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
    name: TwoFactorAuthenticatorSignInAsync
    nameWithType: SignInManager<TUser>.TwoFactorAuthenticatorSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorAuthenticatorSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
    name: TwoFactorAuthenticatorSignInAsync
    nameWithType: SignInManager(Of TUser).TwoFactorAuthenticatorSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorAuthenticatorSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.TwoFactorRecoveryCodeSignInAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.TwoFactorRecoveryCodeSignInAsync(System.String)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
  name: TwoFactorRecoveryCodeSignInAsync(String)
  nameWithType: SignInManager<TUser>.TwoFactorRecoveryCodeSignInAsync(String)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorRecoveryCodeSignInAsync(System.String)
  nameWithType.vb: SignInManager(Of TUser).TwoFactorRecoveryCodeSignInAsync(String)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorRecoveryCodeSignInAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
    name: TwoFactorRecoveryCodeSignInAsync
    nameWithType: SignInManager<TUser>.TwoFactorRecoveryCodeSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorRecoveryCodeSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
    name: TwoFactorRecoveryCodeSignInAsync
    nameWithType: SignInManager(Of TUser).TwoFactorRecoveryCodeSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorRecoveryCodeSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  name: TwoFactorSignInAsync(String, String, Boolean, Boolean)
  nameWithType: SignInManager<TUser>.TwoFactorSignInAsync(String, String, Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorSignInAsync(System.String, System.String, System.Boolean, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).TwoFactorSignInAsync(String, String, Boolean, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorSignInAsync(System.String, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    name: TwoFactorSignInAsync
    nameWithType: SignInManager<TUser>.TwoFactorSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    name: TwoFactorSignInAsync
    nameWithType: SignInManager(Of TUser).TwoFactorSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  name: UpdateExternalAuthenticationTokensAsync(ExternalLoginInfo)
  nameWithType: SignInManager<TUser>.UpdateExternalAuthenticationTokensAsync(ExternalLoginInfo)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  nameWithType.vb: SignInManager(Of TUser).UpdateExternalAuthenticationTokensAsync(ExternalLoginInfo)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
    name: UpdateExternalAuthenticationTokensAsync
    nameWithType: SignInManager<TUser>.UpdateExternalAuthenticationTokensAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.UpdateExternalAuthenticationTokensAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.ExternalLoginInfo
    name: ExternalLoginInfo
    nameWithType: ExternalLoginInfo
    fullName: Microsoft.AspNetCore.Identity.ExternalLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
    name: UpdateExternalAuthenticationTokensAsync
    nameWithType: SignInManager(Of TUser).UpdateExternalAuthenticationTokensAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).UpdateExternalAuthenticationTokensAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.ExternalLoginInfo
    name: ExternalLoginInfo
    nameWithType: ExternalLoginInfo
    fullName: Microsoft.AspNetCore.Identity.ExternalLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  name: ValidateSecurityStampAsync(ClaimsPrincipal)
  nameWithType: SignInManager<TUser>.ValidateSecurityStampAsync(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: SignInManager(Of TUser).ValidateSecurityStampAsync(ClaimsPrincipal)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
    name: ValidateSecurityStampAsync
    nameWithType: SignInManager<TUser>.ValidateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
    name: ValidateSecurityStampAsync
    nameWithType: SignInManager(Of TUser).ValidateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ValidateSecurityStampAsync({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ValidateSecurityStampAsync(`1,System.String)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
  name: ValidateSecurityStampAsync(TUser, String)
  nameWithType: SignInManager<TUser>.ValidateSecurityStampAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateSecurityStampAsync(TUser, System.String)
  nameWithType.vb: SignInManager(Of TUser).ValidateSecurityStampAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateSecurityStampAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
    name: ValidateSecurityStampAsync
    nameWithType: SignInManager<TUser>.ValidateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
    name: ValidateSecurityStampAsync
    nameWithType: SignInManager(Of TUser).ValidateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager{`1}.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  name: ValidateTwoFactorSecurityStampAsync(ClaimsPrincipal)
  nameWithType: SignInManager<TUser>.ValidateTwoFactorSecurityStampAsync(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: SignInManager(Of TUser).ValidateTwoFactorSecurityStampAsync(ClaimsPrincipal)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
    name: ValidateTwoFactorSecurityStampAsync
    nameWithType: SignInManager<TUser>.ValidateTwoFactorSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateTwoFactorSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
    name: ValidateTwoFactorSecurityStampAsync
    nameWithType: SignInManager(Of TUser).ValidateTwoFactorSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateTwoFactorSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.ClaimsFactory
  commentId: P:Microsoft.AspNetCore.Identity.SignInManager{`1}.ClaimsFactory
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.ClaimsFactory
  name: ClaimsFactory
  nameWithType: SignInManager<TUser>.ClaimsFactory
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ClaimsFactory
  nameWithType.vb: SignInManager(Of TUser).ClaimsFactory
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ClaimsFactory
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.Context
  commentId: P:Microsoft.AspNetCore.Identity.SignInManager{`1}.Context
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.Context
  name: Context
  nameWithType: SignInManager<TUser>.Context
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.Context
  nameWithType.vb: SignInManager(Of TUser).Context
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).Context
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.Logger
  commentId: P:Microsoft.AspNetCore.Identity.SignInManager{`1}.Logger
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.Logger
  name: Logger
  nameWithType: SignInManager<TUser>.Logger
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.Logger
  nameWithType.vb: SignInManager(Of TUser).Logger
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).Logger
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.Options
  commentId: P:Microsoft.AspNetCore.Identity.SignInManager{`1}.Options
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.Options
  name: Options
  nameWithType: SignInManager<TUser>.Options
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.Options
  nameWithType.vb: SignInManager(Of TUser).Options
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).Options
- uid: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}.UserManager
  commentId: P:Microsoft.AspNetCore.Identity.SignInManager{`1}.UserManager
  parent: Microsoft.AspNetCore.Identity.SignInManager{{TUser}}
  definition: Microsoft.AspNetCore.Identity.SignInManager`1.UserManager
  name: UserManager
  nameWithType: SignInManager<TUser>.UserManager
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.UserManager
  nameWithType.vb: SignInManager(Of TUser).UserManager
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).UserManager
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  parent: es.efor.Utilities.General.Helpers.ObjectHelper
  definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  name: CopyMap<TDestination>(JsonSerializerSettings)
  nameWithType: ObjectHelper.CopyMap<TDestination>(JsonSerializerSettings)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(Newtonsoft.Json.JsonSerializerSettings)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(JsonSerializerSettings)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(Newtonsoft.Json.JsonSerializerSettings)
  name.vb: CopyMap(Of TDestination)(JsonSerializerSettings)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  parent: es.efor.Utilities.General.Helpers.ObjectHelper
  definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  name: CopyMap<TDestination>(ReferenceLoopHandling)
  nameWithType: ObjectHelper.CopyMap<TDestination>(ReferenceLoopHandling)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(Newtonsoft.Json.ReferenceLoopHandling)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(ReferenceLoopHandling)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(Newtonsoft.Json.ReferenceLoopHandling)
  name.vb: CopyMap(Of TDestination)(ReferenceLoopHandling)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.SignInManager`1
  commentId: T:Microsoft.AspNetCore.Identity.SignInManager`1
  isExternal: true
  name: SignInManager<TUser>
  nameWithType: SignInManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>
  nameWithType.vb: SignInManager(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser)
  name.vb: SignInManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: Microsoft.AspNetCore.Identity.SignInManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: Microsoft.AspNetCore.Identity.SignInManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: true
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
  isExternal: true
  name: CanSignInAsync(TUser)
  nameWithType: SignInManager<TUser>.CanSignInAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CanSignInAsync(TUser)
  nameWithType.vb: SignInManager(Of TUser).CanSignInAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CanSignInAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
    name: CanSignInAsync
    nameWithType: SignInManager<TUser>.CanSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CanSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.CanSignInAsync(`0)
    name: CanSignInAsync
    nameWithType: SignInManager(Of TUser).CanSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CanSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
  isExternal: true
  name: CheckPasswordSignInAsync(TUser, String, Boolean)
  nameWithType: SignInManager<TUser>.CheckPasswordSignInAsync(TUser, String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CheckPasswordSignInAsync(TUser, System.String, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).CheckPasswordSignInAsync(TUser, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CheckPasswordSignInAsync(TUser, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
    name: CheckPasswordSignInAsync
    nameWithType: SignInManager<TUser>.CheckPasswordSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CheckPasswordSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.CheckPasswordSignInAsync(`0,System.String,System.Boolean)
    name: CheckPasswordSignInAsync
    nameWithType: SignInManager(Of TUser).CheckPasswordSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CheckPasswordSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
  isExternal: true
  name: ConfigureExternalAuthenticationProperties(String, String, String)
  nameWithType: SignInManager<TUser>.ConfigureExternalAuthenticationProperties(String, String, String)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ConfigureExternalAuthenticationProperties(System.String, System.String, System.String)
  nameWithType.vb: SignInManager(Of TUser).ConfigureExternalAuthenticationProperties(String, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ConfigureExternalAuthenticationProperties(System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
    name: ConfigureExternalAuthenticationProperties
    nameWithType: SignInManager<TUser>.ConfigureExternalAuthenticationProperties
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ConfigureExternalAuthenticationProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ConfigureExternalAuthenticationProperties(System.String,System.String,System.String)
    name: ConfigureExternalAuthenticationProperties
    nameWithType: SignInManager(Of TUser).ConfigureExternalAuthenticationProperties
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ConfigureExternalAuthenticationProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
  isExternal: true
  name: CreateUserPrincipalAsync(TUser)
  nameWithType: SignInManager<TUser>.CreateUserPrincipalAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CreateUserPrincipalAsync(TUser)
  nameWithType.vb: SignInManager(Of TUser).CreateUserPrincipalAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CreateUserPrincipalAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
    name: CreateUserPrincipalAsync
    nameWithType: SignInManager<TUser>.CreateUserPrincipalAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.CreateUserPrincipalAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.CreateUserPrincipalAsync(`0)
    name: CreateUserPrincipalAsync
    nameWithType: SignInManager(Of TUser).CreateUserPrincipalAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).CreateUserPrincipalAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
  isExternal: true
  name: ExternalLoginSignInAsync(String, String, Boolean)
  nameWithType: SignInManager<TUser>.ExternalLoginSignInAsync(String, String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync(System.String, System.String, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).ExternalLoginSignInAsync(String, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ExternalLoginSignInAsync(System.String, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
    name: ExternalLoginSignInAsync
    nameWithType: SignInManager<TUser>.ExternalLoginSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean)
    name: ExternalLoginSignInAsync
    nameWithType: SignInManager(Of TUser).ExternalLoginSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ExternalLoginSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  isExternal: true
  name: ExternalLoginSignInAsync(String, String, Boolean, Boolean)
  nameWithType: SignInManager<TUser>.ExternalLoginSignInAsync(String, String, Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync(System.String, System.String, System.Boolean, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).ExternalLoginSignInAsync(String, String, Boolean, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ExternalLoginSignInAsync(System.String, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    name: ExternalLoginSignInAsync
    nameWithType: SignInManager<TUser>.ExternalLoginSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ExternalLoginSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ExternalLoginSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    name: ExternalLoginSignInAsync
    nameWithType: SignInManager(Of TUser).ExternalLoginSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ExternalLoginSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
  isExternal: true
  name: ForgetTwoFactorClientAsync()
  nameWithType: SignInManager<TUser>.ForgetTwoFactorClientAsync()
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ForgetTwoFactorClientAsync()
  nameWithType.vb: SignInManager(Of TUser).ForgetTwoFactorClientAsync()
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ForgetTwoFactorClientAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
    name: ForgetTwoFactorClientAsync
    nameWithType: SignInManager<TUser>.ForgetTwoFactorClientAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ForgetTwoFactorClientAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ForgetTwoFactorClientAsync
    name: ForgetTwoFactorClientAsync
    nameWithType: SignInManager(Of TUser).ForgetTwoFactorClientAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ForgetTwoFactorClientAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
  isExternal: true
  name: GetExternalAuthenticationSchemesAsync()
  nameWithType: SignInManager<TUser>.GetExternalAuthenticationSchemesAsync()
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetExternalAuthenticationSchemesAsync()
  nameWithType.vb: SignInManager(Of TUser).GetExternalAuthenticationSchemesAsync()
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetExternalAuthenticationSchemesAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
    name: GetExternalAuthenticationSchemesAsync
    nameWithType: SignInManager<TUser>.GetExternalAuthenticationSchemesAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetExternalAuthenticationSchemesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalAuthenticationSchemesAsync
    name: GetExternalAuthenticationSchemesAsync
    nameWithType: SignInManager(Of TUser).GetExternalAuthenticationSchemesAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetExternalAuthenticationSchemesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
  isExternal: true
  name: GetExternalLoginInfoAsync(String)
  nameWithType: SignInManager<TUser>.GetExternalLoginInfoAsync(String)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetExternalLoginInfoAsync(System.String)
  nameWithType.vb: SignInManager(Of TUser).GetExternalLoginInfoAsync(String)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetExternalLoginInfoAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
    name: GetExternalLoginInfoAsync
    nameWithType: SignInManager<TUser>.GetExternalLoginInfoAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetExternalLoginInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetExternalLoginInfoAsync(System.String)
    name: GetExternalLoginInfoAsync
    nameWithType: SignInManager(Of TUser).GetExternalLoginInfoAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetExternalLoginInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
  isExternal: true
  name: GetTwoFactorAuthenticationUserAsync()
  nameWithType: SignInManager<TUser>.GetTwoFactorAuthenticationUserAsync()
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetTwoFactorAuthenticationUserAsync()
  nameWithType.vb: SignInManager(Of TUser).GetTwoFactorAuthenticationUserAsync()
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetTwoFactorAuthenticationUserAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
    name: GetTwoFactorAuthenticationUserAsync
    nameWithType: SignInManager<TUser>.GetTwoFactorAuthenticationUserAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.GetTwoFactorAuthenticationUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.GetTwoFactorAuthenticationUserAsync
    name: GetTwoFactorAuthenticationUserAsync
    nameWithType: SignInManager(Of TUser).GetTwoFactorAuthenticationUserAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).GetTwoFactorAuthenticationUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
  isExternal: true
  name: IsLockedOut(TUser)
  nameWithType: SignInManager<TUser>.IsLockedOut(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsLockedOut(TUser)
  nameWithType.vb: SignInManager(Of TUser).IsLockedOut(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsLockedOut(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
    name: IsLockedOut
    nameWithType: SignInManager<TUser>.IsLockedOut
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsLockedOut
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsLockedOut(`0)
    name: IsLockedOut
    nameWithType: SignInManager(Of TUser).IsLockedOut
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsLockedOut
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
  isExternal: true
  name: IsSignedIn(ClaimsPrincipal)
  nameWithType: SignInManager<TUser>.IsSignedIn(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: SignInManager(Of TUser).IsSignedIn(ClaimsPrincipal)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsSignedIn(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
    name: IsSignedIn
    nameWithType: SignInManager<TUser>.IsSignedIn
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsSignedIn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsSignedIn(System.Security.Claims.ClaimsPrincipal)
    name: IsSignedIn
    nameWithType: SignInManager(Of TUser).IsSignedIn
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsSignedIn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
  isExternal: true
  name: IsTwoFactorClientRememberedAsync(TUser)
  nameWithType: SignInManager<TUser>.IsTwoFactorClientRememberedAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsTwoFactorClientRememberedAsync(TUser)
  nameWithType.vb: SignInManager(Of TUser).IsTwoFactorClientRememberedAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsTwoFactorClientRememberedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
    name: IsTwoFactorClientRememberedAsync
    nameWithType: SignInManager<TUser>.IsTwoFactorClientRememberedAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.IsTwoFactorClientRememberedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.IsTwoFactorClientRememberedAsync(`0)
    name: IsTwoFactorClientRememberedAsync
    nameWithType: SignInManager(Of TUser).IsTwoFactorClientRememberedAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).IsTwoFactorClientRememberedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
  isExternal: true
  name: LockedOut(TUser)
  nameWithType: SignInManager<TUser>.LockedOut(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.LockedOut(TUser)
  nameWithType.vb: SignInManager(Of TUser).LockedOut(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).LockedOut(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
    name: LockedOut
    nameWithType: SignInManager<TUser>.LockedOut
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.LockedOut
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.LockedOut(`0)
    name: LockedOut
    nameWithType: SignInManager(Of TUser).LockedOut
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).LockedOut
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  isExternal: true
  name: PasswordSignInAsync(String, String, Boolean, Boolean)
  nameWithType: SignInManager<TUser>.PasswordSignInAsync(String, String, Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync(System.String, System.String, System.Boolean, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).PasswordSignInAsync(String, String, Boolean, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PasswordSignInAsync(System.String, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    name: PasswordSignInAsync
    nameWithType: SignInManager<TUser>.PasswordSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    name: PasswordSignInAsync
    nameWithType: SignInManager(Of TUser).PasswordSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PasswordSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
  isExternal: true
  name: PasswordSignInAsync(TUser, String, Boolean, Boolean)
  nameWithType: SignInManager<TUser>.PasswordSignInAsync(TUser, String, Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync(TUser, System.String, System.Boolean, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).PasswordSignInAsync(TUser, String, Boolean, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PasswordSignInAsync(TUser, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
    name: PasswordSignInAsync
    nameWithType: SignInManager<TUser>.PasswordSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PasswordSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(`0,System.String,System.Boolean,System.Boolean)
    name: PasswordSignInAsync
    nameWithType: SignInManager(Of TUser).PasswordSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PasswordSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
  isExternal: true
  name: PreSignInCheck(TUser)
  nameWithType: SignInManager<TUser>.PreSignInCheck(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PreSignInCheck(TUser)
  nameWithType.vb: SignInManager(Of TUser).PreSignInCheck(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PreSignInCheck(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
    name: PreSignInCheck
    nameWithType: SignInManager<TUser>.PreSignInCheck
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.PreSignInCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.PreSignInCheck(`0)
    name: PreSignInCheck
    nameWithType: SignInManager(Of TUser).PreSignInCheck
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).PreSignInCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
  isExternal: true
  name: RefreshSignInAsync(TUser)
  nameWithType: SignInManager<TUser>.RefreshSignInAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.RefreshSignInAsync(TUser)
  nameWithType.vb: SignInManager(Of TUser).RefreshSignInAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).RefreshSignInAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
    name: RefreshSignInAsync
    nameWithType: SignInManager<TUser>.RefreshSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.RefreshSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.RefreshSignInAsync(`0)
    name: RefreshSignInAsync
    nameWithType: SignInManager(Of TUser).RefreshSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).RefreshSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
  isExternal: true
  name: RememberTwoFactorClientAsync(TUser)
  nameWithType: SignInManager<TUser>.RememberTwoFactorClientAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.RememberTwoFactorClientAsync(TUser)
  nameWithType.vb: SignInManager(Of TUser).RememberTwoFactorClientAsync(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).RememberTwoFactorClientAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
    name: RememberTwoFactorClientAsync
    nameWithType: SignInManager<TUser>.RememberTwoFactorClientAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.RememberTwoFactorClientAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.RememberTwoFactorClientAsync(`0)
    name: RememberTwoFactorClientAsync
    nameWithType: SignInManager(Of TUser).RememberTwoFactorClientAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).RememberTwoFactorClientAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
  isExternal: true
  name: ResetLockout(TUser)
  nameWithType: SignInManager<TUser>.ResetLockout(TUser)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ResetLockout(TUser)
  nameWithType.vb: SignInManager(Of TUser).ResetLockout(TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ResetLockout(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
    name: ResetLockout
    nameWithType: SignInManager<TUser>.ResetLockout
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ResetLockout
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ResetLockout(`0)
    name: ResetLockout
    nameWithType: SignInManager(Of TUser).ResetLockout
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ResetLockout
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  isExternal: true
  name: SignInAsync(TUser, AuthenticationProperties, String)
  nameWithType: SignInManager<TUser>.SignInAsync(TUser, AuthenticationProperties, String)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync(TUser, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String)
  nameWithType.vb: SignInManager(Of TUser).SignInAsync(TUser, AuthenticationProperties, String)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInAsync(TUser, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    name: SignInAsync
    nameWithType: SignInManager<TUser>.SignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    name: SignInAsync
    nameWithType: SignInManager(Of TUser).SignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
  isExternal: true
  name: SignInAsync(TUser, Boolean, String)
  nameWithType: SignInManager<TUser>.SignInAsync(TUser, Boolean, String)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync(TUser, System.Boolean, System.String)
  nameWithType.vb: SignInManager(Of TUser).SignInAsync(TUser, Boolean, String)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInAsync(TUser, System.Boolean, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
    name: SignInAsync
    nameWithType: SignInManager<TUser>.SignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInAsync(`0,System.Boolean,System.String)
    name: SignInAsync
    nameWithType: SignInManager(Of TUser).SignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
  isExternal: true
  name: SignInOrTwoFactorAsync(TUser, Boolean, String, Boolean)
  nameWithType: SignInManager<TUser>.SignInOrTwoFactorAsync(TUser, Boolean, String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInOrTwoFactorAsync(TUser, System.Boolean, System.String, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).SignInOrTwoFactorAsync(TUser, Boolean, String, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInOrTwoFactorAsync(TUser, System.Boolean, System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
    name: SignInOrTwoFactorAsync
    nameWithType: SignInManager<TUser>.SignInOrTwoFactorAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInOrTwoFactorAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInOrTwoFactorAsync(`0,System.Boolean,System.String,System.Boolean)
    name: SignInOrTwoFactorAsync
    nameWithType: SignInManager(Of TUser).SignInOrTwoFactorAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInOrTwoFactorAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  isExternal: true
  name: SignInWithClaimsAsync(TUser, AuthenticationProperties, IEnumerable<Claim>)
  nameWithType: SignInManager<TUser>.SignInWithClaimsAsync(TUser, AuthenticationProperties, IEnumerable<Claim>)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInWithClaimsAsync(TUser, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  nameWithType.vb: SignInManager(Of TUser).SignInWithClaimsAsync(TUser, AuthenticationProperties, IEnumerable(Of Claim))
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInWithClaimsAsync(TUser, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: SignInWithClaimsAsync(TUser, AuthenticationProperties, IEnumerable(Of Claim))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: SignInWithClaimsAsync
    nameWithType: SignInManager<TUser>.SignInWithClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInWithClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: SignInWithClaimsAsync
    nameWithType: SignInManager(Of TUser).SignInWithClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInWithClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  isExternal: true
  name: SignInWithClaimsAsync(TUser, Boolean, IEnumerable<Claim>)
  nameWithType: SignInManager<TUser>.SignInWithClaimsAsync(TUser, Boolean, IEnumerable<Claim>)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInWithClaimsAsync(TUser, System.Boolean, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  nameWithType.vb: SignInManager(Of TUser).SignInWithClaimsAsync(TUser, Boolean, IEnumerable(Of Claim))
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInWithClaimsAsync(TUser, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: SignInWithClaimsAsync(TUser, Boolean, IEnumerable(Of Claim))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: SignInWithClaimsAsync
    nameWithType: SignInManager<TUser>.SignInWithClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignInWithClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignInWithClaimsAsync(`0,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: SignInWithClaimsAsync
    nameWithType: SignInManager(Of TUser).SignInWithClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignInWithClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
  isExternal: true
  name: SignOutAsync()
  nameWithType: SignInManager<TUser>.SignOutAsync()
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignOutAsync()
  nameWithType.vb: SignInManager(Of TUser).SignOutAsync()
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignOutAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
    name: SignOutAsync
    nameWithType: SignInManager<TUser>.SignOutAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.SignOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.SignOutAsync
    name: SignOutAsync
    nameWithType: SignInManager(Of TUser).SignOutAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).SignOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
  isExternal: true
  name: TwoFactorAuthenticatorSignInAsync(String, Boolean, Boolean)
  nameWithType: SignInManager<TUser>.TwoFactorAuthenticatorSignInAsync(String, Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorAuthenticatorSignInAsync(System.String, System.Boolean, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).TwoFactorAuthenticatorSignInAsync(String, Boolean, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorAuthenticatorSignInAsync(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
    name: TwoFactorAuthenticatorSignInAsync
    nameWithType: SignInManager<TUser>.TwoFactorAuthenticatorSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorAuthenticatorSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorAuthenticatorSignInAsync(System.String,System.Boolean,System.Boolean)
    name: TwoFactorAuthenticatorSignInAsync
    nameWithType: SignInManager(Of TUser).TwoFactorAuthenticatorSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorAuthenticatorSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
  isExternal: true
  name: TwoFactorRecoveryCodeSignInAsync(String)
  nameWithType: SignInManager<TUser>.TwoFactorRecoveryCodeSignInAsync(String)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorRecoveryCodeSignInAsync(System.String)
  nameWithType.vb: SignInManager(Of TUser).TwoFactorRecoveryCodeSignInAsync(String)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorRecoveryCodeSignInAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
    name: TwoFactorRecoveryCodeSignInAsync
    nameWithType: SignInManager<TUser>.TwoFactorRecoveryCodeSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorRecoveryCodeSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorRecoveryCodeSignInAsync(System.String)
    name: TwoFactorRecoveryCodeSignInAsync
    nameWithType: SignInManager(Of TUser).TwoFactorRecoveryCodeSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorRecoveryCodeSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  isExternal: true
  name: TwoFactorSignInAsync(String, String, Boolean, Boolean)
  nameWithType: SignInManager<TUser>.TwoFactorSignInAsync(String, String, Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorSignInAsync(System.String, System.String, System.Boolean, System.Boolean)
  nameWithType.vb: SignInManager(Of TUser).TwoFactorSignInAsync(String, String, Boolean, Boolean)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorSignInAsync(System.String, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    name: TwoFactorSignInAsync
    nameWithType: SignInManager<TUser>.TwoFactorSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.TwoFactorSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    name: TwoFactorSignInAsync
    nameWithType: SignInManager(Of TUser).TwoFactorSignInAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).TwoFactorSignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  isExternal: true
  name: UpdateExternalAuthenticationTokensAsync(ExternalLoginInfo)
  nameWithType: SignInManager<TUser>.UpdateExternalAuthenticationTokensAsync(ExternalLoginInfo)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  nameWithType.vb: SignInManager(Of TUser).UpdateExternalAuthenticationTokensAsync(ExternalLoginInfo)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
    name: UpdateExternalAuthenticationTokensAsync
    nameWithType: SignInManager<TUser>.UpdateExternalAuthenticationTokensAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.UpdateExternalAuthenticationTokensAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.ExternalLoginInfo
    name: ExternalLoginInfo
    nameWithType: ExternalLoginInfo
    fullName: Microsoft.AspNetCore.Identity.ExternalLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.UpdateExternalAuthenticationTokensAsync(Microsoft.AspNetCore.Identity.ExternalLoginInfo)
    name: UpdateExternalAuthenticationTokensAsync
    nameWithType: SignInManager(Of TUser).UpdateExternalAuthenticationTokensAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).UpdateExternalAuthenticationTokensAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.ExternalLoginInfo
    name: ExternalLoginInfo
    nameWithType: ExternalLoginInfo
    fullName: Microsoft.AspNetCore.Identity.ExternalLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  isExternal: true
  name: ValidateSecurityStampAsync(ClaimsPrincipal)
  nameWithType: SignInManager<TUser>.ValidateSecurityStampAsync(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: SignInManager(Of TUser).ValidateSecurityStampAsync(ClaimsPrincipal)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
    name: ValidateSecurityStampAsync
    nameWithType: SignInManager<TUser>.ValidateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
    name: ValidateSecurityStampAsync
    nameWithType: SignInManager(Of TUser).ValidateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
  isExternal: true
  name: ValidateSecurityStampAsync(TUser, String)
  nameWithType: SignInManager<TUser>.ValidateSecurityStampAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateSecurityStampAsync(TUser, System.String)
  nameWithType.vb: SignInManager(Of TUser).ValidateSecurityStampAsync(TUser, String)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateSecurityStampAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
    name: ValidateSecurityStampAsync
    nameWithType: SignInManager<TUser>.ValidateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateSecurityStampAsync(`0,System.String)
    name: ValidateSecurityStampAsync
    nameWithType: SignInManager(Of TUser).ValidateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  isExternal: true
  name: ValidateTwoFactorSecurityStampAsync(ClaimsPrincipal)
  nameWithType: SignInManager<TUser>.ValidateTwoFactorSecurityStampAsync(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: SignInManager(Of TUser).ValidateTwoFactorSecurityStampAsync(ClaimsPrincipal)
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
    name: ValidateTwoFactorSecurityStampAsync
    nameWithType: SignInManager<TUser>.ValidateTwoFactorSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ValidateTwoFactorSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.SignInManager`1.ValidateTwoFactorSecurityStampAsync(System.Security.Claims.ClaimsPrincipal)
    name: ValidateTwoFactorSecurityStampAsync
    nameWithType: SignInManager(Of TUser).ValidateTwoFactorSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ValidateTwoFactorSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.ClaimsFactory
  commentId: P:Microsoft.AspNetCore.Identity.SignInManager`1.ClaimsFactory
  isExternal: true
  name: ClaimsFactory
  nameWithType: SignInManager<TUser>.ClaimsFactory
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.ClaimsFactory
  nameWithType.vb: SignInManager(Of TUser).ClaimsFactory
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).ClaimsFactory
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.Context
  commentId: P:Microsoft.AspNetCore.Identity.SignInManager`1.Context
  isExternal: true
  name: Context
  nameWithType: SignInManager<TUser>.Context
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.Context
  nameWithType.vb: SignInManager(Of TUser).Context
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).Context
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.Logger
  commentId: P:Microsoft.AspNetCore.Identity.SignInManager`1.Logger
  isExternal: true
  name: Logger
  nameWithType: SignInManager<TUser>.Logger
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.Logger
  nameWithType.vb: SignInManager(Of TUser).Logger
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).Logger
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.Options
  commentId: P:Microsoft.AspNetCore.Identity.SignInManager`1.Options
  isExternal: true
  name: Options
  nameWithType: SignInManager<TUser>.Options
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.Options
  nameWithType.vb: SignInManager(Of TUser).Options
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).Options
- uid: Microsoft.AspNetCore.Identity.SignInManager`1.UserManager
  commentId: P:Microsoft.AspNetCore.Identity.SignInManager`1.UserManager
  isExternal: true
  name: UserManager
  nameWithType: SignInManager<TUser>.UserManager
  fullName: Microsoft.AspNetCore.Identity.SignInManager<TUser>.UserManager
  nameWithType.vb: SignInManager(Of TUser).UserManager
  fullName.vb: Microsoft.AspNetCore.Identity.SignInManager(Of TUser).UserManager
- uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  isExternal: true
  name: CopyMap<TDestination>(Object, JsonSerializerSettings)
  nameWithType: ObjectHelper.CopyMap<TDestination>(Object, JsonSerializerSettings)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(System.Object, Newtonsoft.Json.JsonSerializerSettings)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(Object, JsonSerializerSettings)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(System.Object, Newtonsoft.Json.JsonSerializerSettings)
  name.vb: CopyMap(Of TDestination)(Object, JsonSerializerSettings)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Utilities.General.Helpers.ObjectHelper
  commentId: T:es.efor.Utilities.General.Helpers.ObjectHelper
  parent: es.efor.Utilities.General.Helpers
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper
- uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  isExternal: true
  name: CopyMap<TDestination>(Object, ReferenceLoopHandling)
  nameWithType: ObjectHelper.CopyMap<TDestination>(Object, ReferenceLoopHandling)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(System.Object, Newtonsoft.Json.ReferenceLoopHandling)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(Object, ReferenceLoopHandling)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(System.Object, Newtonsoft.Json.ReferenceLoopHandling)
  name.vb: CopyMap(Of TDestination)(Object, ReferenceLoopHandling)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Utilities.General.Helpers
  commentId: N:es.efor.Utilities.General.Helpers
  name: es.efor.Utilities.General.Helpers
  nameWithType: es.efor.Utilities.General.Helpers
  fullName: es.efor.Utilities.General.Helpers
- uid: es.efor.Auth.Managers.IdentitySignInManager`2.#ctor*
  commentId: Overload:es.efor.Auth.Managers.IdentitySignInManager`2.#ctor
  name: IdentitySignInManager
  nameWithType: IdentitySignInManager<TUserId, TUser>.IdentitySignInManager
  fullName: es.efor.Auth.Managers.IdentitySignInManager<TUserId, TUser>.IdentitySignInManager
  nameWithType.vb: IdentitySignInManager(Of TUserId, TUser).IdentitySignInManager
  fullName.vb: es.efor.Auth.Managers.IdentitySignInManager(Of TUserId, TUser).IdentitySignInManager
- uid: es.efor.Auth.Managers.IdentityUserManager{{TUserId},{TUser}}
  commentId: T:es.efor.Auth.Managers.IdentityUserManager{`0,`1}
  parent: es.efor.Auth.Managers
  definition: es.efor.Auth.Managers.IdentityUserManager`2
  name: IdentityUserManager<TUserId, TUser>
  nameWithType: IdentityUserManager<TUserId, TUser>
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser)
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser)
  name.vb: IdentityUserManager(Of TUserId, TUser)
  spec.csharp:
  - uid: es.efor.Auth.Managers.IdentityUserManager`2
    name: IdentityUserManager
    nameWithType: IdentityUserManager
    fullName: es.efor.Auth.Managers.IdentityUserManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserId
    nameWithType: TUserId
    fullName: TUserId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: es.efor.Auth.Managers.IdentityUserManager`2
    name: IdentityUserManager
    nameWithType: IdentityUserManager
    fullName: es.efor.Auth.Managers.IdentityUserManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserId
    nameWithType: TUserId
    fullName: TUserId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.IHttpContextAccessor
  commentId: T:Microsoft.AspNetCore.Http.IHttpContextAccessor
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IHttpContextAccessor
  nameWithType: IHttpContextAccessor
  fullName: Microsoft.AspNetCore.Http.IHttpContextAccessor
- uid: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{`1}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
  name: IUserClaimsPrincipalFactory<TUser>
  nameWithType: IUserClaimsPrincipalFactory<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory<TUser>
  nameWithType.vb: IUserClaimsPrincipalFactory(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory(Of TUser)
  name.vb: IUserClaimsPrincipalFactory(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
    name: IUserClaimsPrincipalFactory
    nameWithType: IUserClaimsPrincipalFactory
    fullName: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
    name: IUserClaimsPrincipalFactory
    nameWithType: IUserClaimsPrincipalFactory
    fullName: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<IdentityOptions>
  nameWithType: IOptions<IdentityOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.IdentityOptions>
  nameWithType.vb: IOptions(Of IdentityOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Identity.IdentityOptions)
  name.vb: IOptions(Of IdentityOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IdentityOptions
    name: IdentityOptions
    nameWithType: IdentityOptions
    fullName: Microsoft.AspNetCore.Identity.IdentityOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IdentityOptions
    name: IdentityOptions
    nameWithType: IdentityOptions
    fullName: Microsoft.AspNetCore.Identity.IdentityOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger{es.efor.Auth.Managers.IdentitySignInManager`2}
  commentId: T:Microsoft.Extensions.Logging.ILogger{es.efor.Auth.Managers.IdentitySignInManager`2}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<IdentitySignInManager<TUserId, TUser>>
  nameWithType: ILogger<IdentitySignInManager<TUserId, TUser>>
  fullName: Microsoft.Extensions.Logging.ILogger<es.efor.Auth.Managers.IdentitySignInManager<TUserId, TUser>>
  nameWithType.vb: ILogger(Of IdentitySignInManager(Of TUserId, TUser))
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of es.efor.Auth.Managers.IdentitySignInManager(Of TUserId, TUser))
  name.vb: ILogger(Of IdentitySignInManager(Of TUserId, TUser))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: es.efor.Auth.Managers.IdentitySignInManager`2
    name: IdentitySignInManager
    nameWithType: IdentitySignInManager
    fullName: es.efor.Auth.Managers.IdentitySignInManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserId
    nameWithType: TUserId
    fullName: TUserId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: es.efor.Auth.Managers.IdentitySignInManager`2
    name: IdentitySignInManager
    nameWithType: IdentitySignInManager
    fullName: es.efor.Auth.Managers.IdentitySignInManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserId
    nameWithType: TUserId
    fullName: TUserId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider
  commentId: T:Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider
  parent: Microsoft.AspNetCore.Authentication
  isExternal: true
  name: IAuthenticationSchemeProvider
  nameWithType: IAuthenticationSchemeProvider
  fullName: Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider
- uid: Microsoft.AspNetCore.Identity.IUserConfirmation{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserConfirmation{`1}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserConfirmation`1
  name: IUserConfirmation<TUser>
  nameWithType: IUserConfirmation<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserConfirmation<TUser>
  nameWithType.vb: IUserConfirmation(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserConfirmation(Of TUser)
  name.vb: IUserConfirmation(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserConfirmation`1
    name: IUserConfirmation
    nameWithType: IUserConfirmation
    fullName: Microsoft.AspNetCore.Identity.IUserConfirmation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserConfirmation`1
    name: IUserConfirmation
    nameWithType: IUserConfirmation
    fullName: Microsoft.AspNetCore.Identity.IUserConfirmation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Auth.Managers.IdentityUserManager`2
  commentId: T:es.efor.Auth.Managers.IdentityUserManager`2
  name: IdentityUserManager<TUserId, TUser>
  nameWithType: IdentityUserManager<TUserId, TUser>
  fullName: es.efor.Auth.Managers.IdentityUserManager<TUserId, TUser>
  nameWithType.vb: IdentityUserManager(Of TUserId, TUser)
  fullName.vb: es.efor.Auth.Managers.IdentityUserManager(Of TUserId, TUser)
  name.vb: IdentityUserManager(Of TUserId, TUser)
  spec.csharp:
  - uid: es.efor.Auth.Managers.IdentityUserManager`2
    name: IdentityUserManager
    nameWithType: IdentityUserManager
    fullName: es.efor.Auth.Managers.IdentityUserManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserId
    nameWithType: TUserId
    fullName: TUserId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: es.efor.Auth.Managers.IdentityUserManager`2
    name: IdentityUserManager
    nameWithType: IdentityUserManager
    fullName: es.efor.Auth.Managers.IdentityUserManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserId
    nameWithType: TUserId
    fullName: TUserId
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
  isExternal: true
  name: IUserClaimsPrincipalFactory<TUser>
  nameWithType: IUserClaimsPrincipalFactory<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory<TUser>
  nameWithType.vb: IUserClaimsPrincipalFactory(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory(Of TUser)
  name.vb: IUserClaimsPrincipalFactory(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
    name: IUserClaimsPrincipalFactory
    nameWithType: IUserClaimsPrincipalFactory
    fullName: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1
    name: IUserClaimsPrincipalFactory
    nameWithType: IUserClaimsPrincipalFactory
    fullName: Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: true
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: true
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: Microsoft.AspNetCore.Identity.IUserConfirmation`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserConfirmation`1
  isExternal: true
  name: IUserConfirmation<TUser>
  nameWithType: IUserConfirmation<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserConfirmation<TUser>
  nameWithType.vb: IUserConfirmation(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserConfirmation(Of TUser)
  name.vb: IUserConfirmation(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserConfirmation`1
    name: IUserConfirmation
    nameWithType: IUserConfirmation
    fullName: Microsoft.AspNetCore.Identity.IUserConfirmation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserConfirmation`1
    name: IUserConfirmation
    nameWithType: IUserConfirmation
    fullName: Microsoft.AspNetCore.Identity.IUserConfirmation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
