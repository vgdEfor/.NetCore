### YamlMime:ManagedReference
items:
- uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService
  commentId: T:es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService
  id: AccessLoggerService
  parent: es.efor.Musaat.Login.Model.Services.AccessLoggerServices
  children:
  - es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.#ctor(es.efor.Musaat.Data.Context.NexusContext,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService})
  - es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.CreateLog(es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO)
  - es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.GetAll
  langs:
  - csharp
  - vb
  name: AccessLoggerService
  nameWithType: AccessLoggerService
  fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService
  type: Class
  source:
    remote:
      path: es.efor.Musaat.Login.Business/Services/AccessLoggerServices/AccessLoggerService.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: AccessLoggerService
    path: ../es.efor.Musaat.Login.Business/Services/AccessLoggerServices/AccessLoggerService.cs
    startLine: 12
  assemblies:
  - es.efor.Musaat.Login.Business
  namespace: es.efor.Musaat.Login.Model.Services.AccessLoggerServices
  syntax:
    content: 'public class AccessLoggerService : IAccessLoggerService'
    content.vb: >-
      Public Class AccessLoggerService

          Implements IAccessLoggerService
  inheritance:
  - System.Object
  implements:
  - es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
  - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.#ctor(es.efor.Musaat.Data.Context.NexusContext,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService})
  commentId: M:es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.#ctor(es.efor.Musaat.Data.Context.NexusContext,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService})
  id: '#ctor(es.efor.Musaat.Data.Context.NexusContext,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService})'
  parent: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService
  langs:
  - csharp
  - vb
  name: AccessLoggerService(NexusContext, IMapper, ILogger<AccessLoggerService>)
  nameWithType: AccessLoggerService.AccessLoggerService(NexusContext, IMapper, ILogger<AccessLoggerService>)
  fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.AccessLoggerService(es.efor.Musaat.Data.Context.NexusContext, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger<es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService>)
  type: Constructor
  source:
    remote:
      path: es.efor.Musaat.Login.Business/Services/AccessLoggerServices/AccessLoggerService.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: .ctor
    path: ../es.efor.Musaat.Login.Business/Services/AccessLoggerServices/AccessLoggerService.cs
    startLine: 21
  assemblies:
  - es.efor.Musaat.Login.Business
  namespace: es.efor.Musaat.Login.Model.Services.AccessLoggerServices
  syntax:
    content: public AccessLoggerService(NexusContext NexusContext, IMapper mapper, ILogger<AccessLoggerService> logger)
    parameters:
    - id: NexusContext
      type: es.efor.Musaat.Data.Context.NexusContext
    - id: mapper
      type: AutoMapper.IMapper
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService}
    content.vb: Public Sub New(NexusContext As NexusContext, mapper As IMapper, logger As ILogger(Of AccessLoggerService))
  overload: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.#ctor*
  nameWithType.vb: AccessLoggerService.AccessLoggerService(NexusContext, IMapper, ILogger(Of AccessLoggerService))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.AccessLoggerService(es.efor.Musaat.Data.Context.NexusContext, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger(Of es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService))
  name.vb: AccessLoggerService(NexusContext, IMapper, ILogger(Of AccessLoggerService))
- uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.GetAll
  commentId: M:es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.GetAll
  id: GetAll
  parent: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService
  langs:
  - csharp
  - vb
  name: GetAll()
  nameWithType: AccessLoggerService.GetAll()
  fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.GetAll()
  type: Method
  source:
    remote:
      path: es.efor.Musaat.Login.Business/Services/AccessLoggerServices/AccessLoggerService.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: GetAll
    path: ../es.efor.Musaat.Login.Business/Services/AccessLoggerServices/AccessLoggerService.cs
    startLine: 32
  assemblies:
  - es.efor.Musaat.Login.Business
  namespace: es.efor.Musaat.Login.Model.Services.AccessLoggerServices
  syntax:
    content: public Task<List<AccessLoggerDTO>> GetAll()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO}}
    content.vb: Public Function GetAll As Task(Of List(Of AccessLoggerDTO))
  overload: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.GetAll*
  implements:
  - es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.GetAll
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.CreateLog(es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO)
  commentId: M:es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.CreateLog(es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO)
  id: CreateLog(es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO)
  parent: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService
  langs:
  - csharp
  - vb
  name: CreateLog(AccessLoggerDTO)
  nameWithType: AccessLoggerService.CreateLog(AccessLoggerDTO)
  fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.CreateLog(es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO)
  type: Method
  source:
    remote:
      path: es.efor.Musaat.Login.Business/Services/AccessLoggerServices/AccessLoggerService.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: CreateLog
    path: ../es.efor.Musaat.Login.Business/Services/AccessLoggerServices/AccessLoggerService.cs
    startLine: 38
  assemblies:
  - es.efor.Musaat.Login.Business
  namespace: es.efor.Musaat.Login.Model.Services.AccessLoggerServices
  syntax:
    content: public Task<bool> CreateLog(AccessLoggerDTO accessLog)
    parameters:
    - id: accessLog
      type: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function CreateLog(accessLog As AccessLoggerDTO) As Task(Of Boolean)
  overload: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.CreateLog*
  implements:
  - es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.CreateLog(es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices
  commentId: N:es.efor.Musaat.Login.Model.Services.AccessLoggerServices
  name: es.efor.Musaat.Login.Model.Services.AccessLoggerServices
  nameWithType: es.efor.Musaat.Login.Model.Services.AccessLoggerServices
  fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService
  commentId: T:es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService
  parent: es.efor.Musaat.Login.Model.Services.AccessLoggerServices
  name: IAccessLoggerService
  nameWithType: IAccessLoggerService
  fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  parent: es.efor.Utilities.General.Helpers.ObjectHelper
  definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  name: CopyMap<TDestination>(JsonSerializerSettings)
  nameWithType: ObjectHelper.CopyMap<TDestination>(JsonSerializerSettings)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(Newtonsoft.Json.JsonSerializerSettings)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(JsonSerializerSettings)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(Newtonsoft.Json.JsonSerializerSettings)
  name.vb: CopyMap(Of TDestination)(JsonSerializerSettings)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  parent: es.efor.Utilities.General.Helpers.ObjectHelper
  definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  name: CopyMap<TDestination>(ReferenceLoopHandling)
  nameWithType: ObjectHelper.CopyMap<TDestination>(ReferenceLoopHandling)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(Newtonsoft.Json.ReferenceLoopHandling)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(ReferenceLoopHandling)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(Newtonsoft.Json.ReferenceLoopHandling)
  name.vb: CopyMap(Of TDestination)(ReferenceLoopHandling)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  isExternal: true
  name: CopyMap<TDestination>(Object, JsonSerializerSettings)
  nameWithType: ObjectHelper.CopyMap<TDestination>(Object, JsonSerializerSettings)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(System.Object, Newtonsoft.Json.JsonSerializerSettings)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(Object, JsonSerializerSettings)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(System.Object, Newtonsoft.Json.JsonSerializerSettings)
  name.vb: CopyMap(Of TDestination)(Object, JsonSerializerSettings)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Utilities.General.Helpers.ObjectHelper
  commentId: T:es.efor.Utilities.General.Helpers.ObjectHelper
  parent: es.efor.Utilities.General.Helpers
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper
- uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  isExternal: true
  name: CopyMap<TDestination>(Object, ReferenceLoopHandling)
  nameWithType: ObjectHelper.CopyMap<TDestination>(Object, ReferenceLoopHandling)
  fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>(System.Object, Newtonsoft.Json.ReferenceLoopHandling)
  nameWithType.vb: ObjectHelper.CopyMap(Of TDestination)(Object, ReferenceLoopHandling)
  fullName.vb: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)(System.Object, Newtonsoft.Json.ReferenceLoopHandling)
  name.vb: CopyMap(Of TDestination)(Object, ReferenceLoopHandling)
  spec.csharp:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap<TDestination>
    nameWithType: ObjectHelper.CopyMap<TDestination>
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
    name: CopyMap(Of TDestination)
    nameWithType: ObjectHelper.CopyMap(Of TDestination)
    fullName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.ReferenceLoopHandling
    name: ReferenceLoopHandling
    nameWithType: ReferenceLoopHandling
    fullName: Newtonsoft.Json.ReferenceLoopHandling
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Utilities.General.Helpers
  commentId: N:es.efor.Utilities.General.Helpers
  name: es.efor.Utilities.General.Helpers
  nameWithType: es.efor.Utilities.General.Helpers
  fullName: es.efor.Utilities.General.Helpers
- uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.#ctor*
  commentId: Overload:es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.#ctor
  name: AccessLoggerService
  nameWithType: AccessLoggerService.AccessLoggerService
  fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.AccessLoggerService
- uid: es.efor.Musaat.Data.Context.NexusContext
  commentId: T:es.efor.Musaat.Data.Context.NexusContext
  parent: es.efor.Musaat.Data.Context
  name: NexusContext
  nameWithType: NexusContext
  fullName: es.efor.Musaat.Data.Context.NexusContext
- uid: AutoMapper.IMapper
  commentId: T:AutoMapper.IMapper
  parent: AutoMapper
  isExternal: true
  name: IMapper
  nameWithType: IMapper
  fullName: AutoMapper.IMapper
- uid: Microsoft.Extensions.Logging.ILogger{es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService}
  commentId: T:Microsoft.Extensions.Logging.ILogger{es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<AccessLoggerService>
  nameWithType: ILogger<AccessLoggerService>
  fullName: Microsoft.Extensions.Logging.ILogger<es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService>
  nameWithType.vb: ILogger(Of AccessLoggerService)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService)
  name.vb: ILogger(Of AccessLoggerService)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService
    name: AccessLoggerService
    nameWithType: AccessLoggerService
    fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService
    name: AccessLoggerService
    nameWithType: AccessLoggerService
    fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Musaat.Data.Context
  commentId: N:es.efor.Musaat.Data.Context
  name: es.efor.Musaat.Data.Context
  nameWithType: es.efor.Musaat.Data.Context
  fullName: es.efor.Musaat.Data.Context
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.GetAll*
  commentId: Overload:es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.GetAll
  name: GetAll
  nameWithType: AccessLoggerService.GetAll
  fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.GetAll
- uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.GetAll
  commentId: M:es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.GetAll
  parent: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService
  name: GetAll()
  nameWithType: IAccessLoggerService.GetAll()
  fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.GetAll()
  spec.csharp:
  - uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.GetAll
    name: GetAll
    nameWithType: IAccessLoggerService.GetAll
    fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.GetAll
    name: GetAll
    nameWithType: IAccessLoggerService.GetAll
    fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<AccessLoggerDTO>>
  nameWithType: Task<List<AccessLoggerDTO>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO>>
  nameWithType.vb: Task(Of List(Of AccessLoggerDTO))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO))
  name.vb: Task(Of List(Of AccessLoggerDTO))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO
    name: AccessLoggerDTO
    nameWithType: AccessLoggerDTO
    fullName: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO
    name: AccessLoggerDTO
    nameWithType: AccessLoggerDTO
    fullName: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.CreateLog*
  commentId: Overload:es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.CreateLog
  name: CreateLog
  nameWithType: AccessLoggerService.CreateLog
  fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.AccessLoggerService.CreateLog
- uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.CreateLog(es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO)
  commentId: M:es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.CreateLog(es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO)
  parent: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService
  name: CreateLog(AccessLoggerDTO)
  nameWithType: IAccessLoggerService.CreateLog(AccessLoggerDTO)
  fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.CreateLog(es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO)
  spec.csharp:
  - uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.CreateLog(es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO)
    name: CreateLog
    nameWithType: IAccessLoggerService.CreateLog
    fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.CreateLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO
    name: AccessLoggerDTO
    nameWithType: AccessLoggerDTO
    fullName: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.CreateLog(es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO)
    name: CreateLog
    nameWithType: IAccessLoggerService.CreateLog
    fullName: es.efor.Musaat.Login.Model.Services.AccessLoggerServices.IAccessLoggerService.CreateLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO
    name: AccessLoggerDTO
    nameWithType: AccessLoggerDTO
    fullName: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO
  commentId: T:es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO
  parent: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs
  name: AccessLoggerDTO
  nameWithType: AccessLoggerDTO
  fullName: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs.AccessLoggerDTO
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs
  commentId: N:es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs
  name: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs
  nameWithType: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs
  fullName: es.efor.Musaat.Infraestructure.DTO.AccessLoggerDTOs
