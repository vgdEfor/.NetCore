### YamlMime:ManagedReference
items:
- uid: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions
  commentId: T:es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions
  id: IdentityExtensions
  parent: es.efor.Musaat.Infraestructure.DTO.Extensions
  children:
  - es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.FilterUsers(System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal})
  - es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.SelectAdUsers(System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal})
  langs:
  - csharp
  - vb
  name: IdentityExtensions
  nameWithType: IdentityExtensions
  fullName: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions
  type: Class
  source:
    remote:
      path: es.efor.Musaat.Infraestructure/DTO/Extensions/IdentityExtensions.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: IdentityExtensions
    path: ../es.efor.Musaat.Infraestructure/DTO/Extensions/IdentityExtensions.cs
    startLine: 7
  assemblies:
  - es.efor.Musaat.Infraestructure
  namespace: es.efor.Musaat.Infraestructure.DTO.Extensions
  syntax:
    content: public static class IdentityExtensions
    content.vb: Public Module IdentityExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.FilterUsers(System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal})
  commentId: M:es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.FilterUsers(System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal})
  id: FilterUsers(System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal})
  isExtensionMethod: true
  parent: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions
  langs:
  - csharp
  - vb
  name: FilterUsers(IQueryable<UserPrincipal>)
  nameWithType: IdentityExtensions.FilterUsers(IQueryable<UserPrincipal>)
  fullName: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.FilterUsers(System.Linq.IQueryable<System.DirectoryServices.AccountManagement.UserPrincipal>)
  type: Method
  source:
    remote:
      path: es.efor.Musaat.Infraestructure/DTO/Extensions/IdentityExtensions.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: FilterUsers
    path: ../es.efor.Musaat.Infraestructure/DTO/Extensions/IdentityExtensions.cs
    startLine: 9
  assemblies:
  - es.efor.Musaat.Infraestructure
  namespace: es.efor.Musaat.Infraestructure.DTO.Extensions
  syntax:
    content: public static IQueryable<UserPrincipal> FilterUsers(this IQueryable<UserPrincipal> principals)
    parameters:
    - id: principals
      type: System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal}
    return:
      type: System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FilterUsers(principals As IQueryable(Of UserPrincipal)) As IQueryable(Of UserPrincipal)
  overload: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.FilterUsers*
  nameWithType.vb: IdentityExtensions.FilterUsers(IQueryable(Of UserPrincipal))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.FilterUsers(System.Linq.IQueryable(Of System.DirectoryServices.AccountManagement.UserPrincipal))
  name.vb: FilterUsers(IQueryable(Of UserPrincipal))
- uid: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.SelectAdUsers(System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal})
  commentId: M:es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.SelectAdUsers(System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal})
  id: SelectAdUsers(System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal})
  isExtensionMethod: true
  parent: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions
  langs:
  - csharp
  - vb
  name: SelectAdUsers(IQueryable<UserPrincipal>)
  nameWithType: IdentityExtensions.SelectAdUsers(IQueryable<UserPrincipal>)
  fullName: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.SelectAdUsers(System.Linq.IQueryable<System.DirectoryServices.AccountManagement.UserPrincipal>)
  type: Method
  source:
    remote:
      path: es.efor.Musaat.Infraestructure/DTO/Extensions/IdentityExtensions.cs
      branch: master
      repo: https://dev.azure.com/EforDevelop/Musaat/_git/Musaat_Med
    id: SelectAdUsers
    path: ../es.efor.Musaat.Infraestructure/DTO/Extensions/IdentityExtensions.cs
    startLine: 12
  assemblies:
  - es.efor.Musaat.Infraestructure
  namespace: es.efor.Musaat.Infraestructure.DTO.Extensions
  syntax:
    content: public static IQueryable<ADUserDTO> SelectAdUsers(this IQueryable<UserPrincipal> principals)
    parameters:
    - id: principals
      type: System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal}
    return:
      type: System.Linq.IQueryable{es.efor.Musaat.Infraestructure.DTO.UserDTOs.ADUserDTO}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SelectAdUsers(principals As IQueryable(Of UserPrincipal)) As IQueryable(Of ADUserDTO)
  overload: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.SelectAdUsers*
  nameWithType.vb: IdentityExtensions.SelectAdUsers(IQueryable(Of UserPrincipal))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.SelectAdUsers(System.Linq.IQueryable(Of System.DirectoryServices.AccountManagement.UserPrincipal))
  name.vb: SelectAdUsers(IQueryable(Of UserPrincipal))
references:
- uid: es.efor.Musaat.Infraestructure.DTO.Extensions
  commentId: N:es.efor.Musaat.Infraestructure.DTO.Extensions
  name: es.efor.Musaat.Infraestructure.DTO.Extensions
  nameWithType: es.efor.Musaat.Infraestructure.DTO.Extensions
  fullName: es.efor.Musaat.Infraestructure.DTO.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.FilterUsers*
  commentId: Overload:es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.FilterUsers
  name: FilterUsers
  nameWithType: IdentityExtensions.FilterUsers
  fullName: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.FilterUsers
- uid: System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal}
  commentId: T:System.Linq.IQueryable{System.DirectoryServices.AccountManagement.UserPrincipal}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<UserPrincipal>
  nameWithType: IQueryable<UserPrincipal>
  fullName: System.Linq.IQueryable<System.DirectoryServices.AccountManagement.UserPrincipal>
  nameWithType.vb: IQueryable(Of UserPrincipal)
  fullName.vb: System.Linq.IQueryable(Of System.DirectoryServices.AccountManagement.UserPrincipal)
  name.vb: IQueryable(Of UserPrincipal)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.UserPrincipal
    name: UserPrincipal
    nameWithType: UserPrincipal
    fullName: System.DirectoryServices.AccountManagement.UserPrincipal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DirectoryServices.AccountManagement.UserPrincipal
    name: UserPrincipal
    nameWithType: UserPrincipal
    fullName: System.DirectoryServices.AccountManagement.UserPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.SelectAdUsers*
  commentId: Overload:es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.SelectAdUsers
  name: SelectAdUsers
  nameWithType: IdentityExtensions.SelectAdUsers
  fullName: es.efor.Musaat.Infraestructure.DTO.Extensions.IdentityExtensions.SelectAdUsers
- uid: System.Linq.IQueryable{es.efor.Musaat.Infraestructure.DTO.UserDTOs.ADUserDTO}
  commentId: T:System.Linq.IQueryable{es.efor.Musaat.Infraestructure.DTO.UserDTOs.ADUserDTO}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ADUserDTO>
  nameWithType: IQueryable<ADUserDTO>
  fullName: System.Linq.IQueryable<es.efor.Musaat.Infraestructure.DTO.UserDTOs.ADUserDTO>
  nameWithType.vb: IQueryable(Of ADUserDTO)
  fullName.vb: System.Linq.IQueryable(Of es.efor.Musaat.Infraestructure.DTO.UserDTOs.ADUserDTO)
  name.vb: IQueryable(Of ADUserDTO)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: es.efor.Musaat.Infraestructure.DTO.UserDTOs.ADUserDTO
    name: ADUserDTO
    nameWithType: ADUserDTO
    fullName: es.efor.Musaat.Infraestructure.DTO.UserDTOs.ADUserDTO
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: es.efor.Musaat.Infraestructure.DTO.UserDTOs.ADUserDTO
    name: ADUserDTO
    nameWithType: ADUserDTO
    fullName: es.efor.Musaat.Infraestructure.DTO.UserDTOs.ADUserDTO
  - name: )
    nameWithType: )
    fullName: )
