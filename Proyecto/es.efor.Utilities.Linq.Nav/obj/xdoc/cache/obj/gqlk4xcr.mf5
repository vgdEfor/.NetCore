id: es.efor.Utilities.Linq.Nav
language: CSharp
name:
  Default: es.efor.Utilities.Linq.Nav
qualifiedName:
  Default: es.efor.Utilities.Linq.Nav
type: Assembly
modifiers: {}
items:
- id: es.efor.Utilities.Linq.Nav.Models
  commentId: N:es.efor.Utilities.Linq.Nav.Models
  language: CSharp
  name:
    CSharp: es.efor.Utilities.Linq.Nav.Models
    VB: es.efor.Utilities.Linq.Nav.Models
  nameWithType:
    CSharp: es.efor.Utilities.Linq.Nav.Models
    VB: es.efor.Utilities.Linq.Nav.Models
  qualifiedName:
    CSharp: es.efor.Utilities.Linq.Nav.Models
    VB: es.efor.Utilities.Linq.Nav.Models
  type: Namespace
  assemblies:
  - es.efor.Utilities.Linq.Nav
  modifiers: {}
  items:
  - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1
    commentId: T:es.efor.Utilities.Linq.Nav.Models.NavFilter`1
    language: CSharp
    name:
      CSharp: NavFilter<TField>
      VB: NavFilter(Of TField)
    nameWithType:
      CSharp: NavFilter<TField>
      VB: NavFilter(Of TField)
    qualifiedName:
      CSharp: es.efor.Utilities.Linq.Nav.Models.NavFilter<TField>
      VB: es.efor.Utilities.Linq.Nav.Models.NavFilter(Of TField)
    type: Class
    assemblies:
    - es.efor.Utilities.Linq.Nav
    namespace: es.efor.Utilities.Linq.Nav.Models
    source:
      remote:
        path: es.efor.Utilities.Linq.Nav/Models/NavFilter.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
      id: NavFilter
      path: ../es.efor.Utilities.Linq.Nav/Models/NavFilter.cs
      startLine: 6
    syntax:
      content:
        CSharp: >-
          public class NavFilter<TField>

              where TField : struct, IConvertible
        VB: Public Class NavFilter(Of TField As {Structure, IConvertible})
      typeParameters:
      - id: TField
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Field
      commentId: P:es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Field
      language: CSharp
      name:
        CSharp: Field
        VB: Field
      nameWithType:
        CSharp: NavFilter<TField>.Field
        VB: NavFilter(Of TField).Field
      qualifiedName:
        CSharp: es.efor.Utilities.Linq.Nav.Models.NavFilter<TField>.Field
        VB: es.efor.Utilities.Linq.Nav.Models.NavFilter(Of TField).Field
      type: Property
      assemblies:
      - es.efor.Utilities.Linq.Nav
      namespace: es.efor.Utilities.Linq.Nav.Models
      source:
        remote:
          path: es.efor.Utilities.Linq.Nav/Models/NavFilter.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
        id: Field
        path: ../es.efor.Utilities.Linq.Nav/Models/NavFilter.cs
        startLine: 9
      syntax:
        content:
          CSharp: public TField Field { get; set; }
          VB: Public Property Field As TField
        parameters: []
        return:
          type: '{TField}'
      overload: es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Field*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Criteria
      commentId: P:es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Criteria
      language: CSharp
      name:
        CSharp: Criteria
        VB: Criteria
      nameWithType:
        CSharp: NavFilter<TField>.Criteria
        VB: NavFilter(Of TField).Criteria
      qualifiedName:
        CSharp: es.efor.Utilities.Linq.Nav.Models.NavFilter<TField>.Criteria
        VB: es.efor.Utilities.Linq.Nav.Models.NavFilter(Of TField).Criteria
      type: Property
      assemblies:
      - es.efor.Utilities.Linq.Nav
      namespace: es.efor.Utilities.Linq.Nav.Models
      source:
        remote:
          path: es.efor.Utilities.Linq.Nav/Models/NavFilter.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
        id: Criteria
        path: ../es.efor.Utilities.Linq.Nav/Models/NavFilter.cs
        startLine: 10
      syntax:
        content:
          CSharp: public string Criteria { get; set; }
          VB: Public Property Criteria As String
        parameters: []
        return:
          type: System.String
      overload: es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Criteria*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1.#ctor
      commentId: M:es.efor.Utilities.Linq.Nav.Models.NavFilter`1.#ctor
      language: CSharp
      name:
        CSharp: NavFilter()
        VB: NavFilter()
      nameWithType:
        CSharp: NavFilter<TField>.NavFilter()
        VB: NavFilter(Of TField).NavFilter()
      qualifiedName:
        CSharp: es.efor.Utilities.Linq.Nav.Models.NavFilter<TField>.NavFilter()
        VB: es.efor.Utilities.Linq.Nav.Models.NavFilter(Of TField).NavFilter()
      type: Constructor
      assemblies:
      - es.efor.Utilities.Linq.Nav
      namespace: es.efor.Utilities.Linq.Nav.Models
      source:
        remote:
          path: es.efor.Utilities.Linq.Nav/Models/NavFilter.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
        id: .ctor
        path: ../es.efor.Utilities.Linq.Nav/Models/NavFilter.cs
        startLine: 11
      syntax:
        content:
          CSharp: public NavFilter()
          VB: Public Sub New
      overload: es.efor.Utilities.Linq.Nav.Models.NavFilter`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: es.efor.Utilities.Linq.Nav.Tools
  commentId: N:es.efor.Utilities.Linq.Nav.Tools
  language: CSharp
  name:
    CSharp: es.efor.Utilities.Linq.Nav.Tools
    VB: es.efor.Utilities.Linq.Nav.Tools
  nameWithType:
    CSharp: es.efor.Utilities.Linq.Nav.Tools
    VB: es.efor.Utilities.Linq.Nav.Tools
  qualifiedName:
    CSharp: es.efor.Utilities.Linq.Nav.Tools
    VB: es.efor.Utilities.Linq.Nav.Tools
  type: Namespace
  assemblies:
  - es.efor.Utilities.Linq.Nav
  modifiers: {}
  items:
  - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2
    commentId: T:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2
    language: CSharp
    name:
      CSharp: NavConverter<TFilter, TField>
      VB: NavConverter(Of TFilter, TField)
    nameWithType:
      CSharp: NavConverter<TFilter, TField>
      VB: NavConverter(Of TFilter, TField)
    qualifiedName:
      CSharp: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>
      VB: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField)
    type: Class
    assemblies:
    - es.efor.Utilities.Linq.Nav
    namespace: es.efor.Utilities.Linq.Nav.Tools
    source:
      remote:
        path: es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
        branch: master
        repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
      id: NavConverter
      path: ../es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
      startLine: 10
    syntax:
      content:
        CSharp: >-
          public class NavConverter<TFilter, TField>

              where TFilter : class where TField : struct, IConvertible
        VB: Public Class NavConverter(Of TFilter As Class, TField As {Structure, IConvertible})
      typeParameters:
      - id: TFilter
      - id: TField
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
    - System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.#ctor
      commentId: M:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.#ctor
      language: CSharp
      name:
        CSharp: NavConverter()
        VB: NavConverter()
      nameWithType:
        CSharp: NavConverter<TFilter, TField>.NavConverter()
        VB: NavConverter(Of TFilter, TField).NavConverter()
      qualifiedName:
        CSharp: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.NavConverter()
        VB: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).NavConverter()
      type: Constructor
      assemblies:
      - es.efor.Utilities.Linq.Nav
      namespace: es.efor.Utilities.Linq.Nav.Tools
      source:
        remote:
          path: es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
        id: .ctor
        path: ../es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
        startLine: 14
      syntax:
        content:
          CSharp: public NavConverter()
          VB: Public Sub New
      overload: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildNavFilter(System.Collections.Generic.IEnumerable{es.efor.Utilities.Linq.Models.Filters.FilterCriteria})
      commentId: M:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildNavFilter(System.Collections.Generic.IEnumerable{es.efor.Utilities.Linq.Models.Filters.FilterCriteria})
      language: CSharp
      name:
        CSharp: BuildNavFilter(IEnumerable<FilterCriteria>)
        VB: BuildNavFilter(IEnumerable(Of FilterCriteria))
      nameWithType:
        CSharp: NavConverter<TFilter, TField>.BuildNavFilter(IEnumerable<FilterCriteria>)
        VB: NavConverter(Of TFilter, TField).BuildNavFilter(IEnumerable(Of FilterCriteria))
      qualifiedName:
        CSharp: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.BuildNavFilter(System.Collections.Generic.IEnumerable<es.efor.Utilities.Linq.Models.Filters.FilterCriteria>)
        VB: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).BuildNavFilter(System.Collections.Generic.IEnumerable(Of es.efor.Utilities.Linq.Models.Filters.FilterCriteria))
      type: Method
      assemblies:
      - es.efor.Utilities.Linq.Nav
      namespace: es.efor.Utilities.Linq.Nav.Tools
      source:
        remote:
          path: es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
        id: BuildNavFilter
        path: ../es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
        startLine: 23
      syntax:
        content:
          CSharp: public IEnumerable<TFilter> BuildNavFilter(IEnumerable<FilterCriteria> filter)
          VB: Public Function BuildNavFilter(filter As IEnumerable(Of FilterCriteria)) As IEnumerable(Of TFilter)
        parameters:
        - id: filter
          type: System.Collections.Generic.IEnumerable{es.efor.Utilities.Linq.Models.Filters.FilterCriteria}
        return:
          type: System.Collections.Generic.IEnumerable{{TFilter}}
      overload: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildNavFilter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.ConvertToFilter(System.Collections.Generic.IEnumerable{es.efor.Utilities.Linq.Nav.Models.NavFilter{`1}})
      commentId: M:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.ConvertToFilter(System.Collections.Generic.IEnumerable{es.efor.Utilities.Linq.Nav.Models.NavFilter{`1}})
      language: CSharp
      name:
        CSharp: ConvertToFilter(IEnumerable<NavFilter<TField>>)
        VB: ConvertToFilter(IEnumerable(Of NavFilter(Of TField)))
      nameWithType:
        CSharp: NavConverter<TFilter, TField>.ConvertToFilter(IEnumerable<NavFilter<TField>>)
        VB: NavConverter(Of TFilter, TField).ConvertToFilter(IEnumerable(Of NavFilter(Of TField)))
      qualifiedName:
        CSharp: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.ConvertToFilter(System.Collections.Generic.IEnumerable<es.efor.Utilities.Linq.Nav.Models.NavFilter<TField>>)
        VB: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).ConvertToFilter(System.Collections.Generic.IEnumerable(Of es.efor.Utilities.Linq.Nav.Models.NavFilter(Of TField)))
      type: Method
      assemblies:
      - es.efor.Utilities.Linq.Nav
      namespace: es.efor.Utilities.Linq.Nav.Tools
      source:
        remote:
          path: es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
        id: ConvertToFilter
        path: ../es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
        startLine: 64
      syntax:
        content:
          CSharp: public static IEnumerable<TFilter> ConvertToFilter(IEnumerable<NavFilter<TField>> filter)
          VB: Public Shared Function ConvertToFilter(filter As IEnumerable(Of NavFilter(Of TField))) As IEnumerable(Of TFilter)
        parameters:
        - id: filter
          type: System.Collections.Generic.IEnumerable{es.efor.Utilities.Linq.Nav.Models.NavFilter{{TField}}}
        return:
          type: System.Collections.Generic.IEnumerable{{TFilter}}
      overload: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.ConvertToFilter*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.ConvertToFilter(es.efor.Utilities.Linq.Nav.Models.NavFilter{`1})
      commentId: M:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.ConvertToFilter(es.efor.Utilities.Linq.Nav.Models.NavFilter{`1})
      language: CSharp
      name:
        CSharp: ConvertToFilter(NavFilter<TField>)
        VB: ConvertToFilter(NavFilter(Of TField))
      nameWithType:
        CSharp: NavConverter<TFilter, TField>.ConvertToFilter(NavFilter<TField>)
        VB: NavConverter(Of TFilter, TField).ConvertToFilter(NavFilter(Of TField))
      qualifiedName:
        CSharp: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.ConvertToFilter(es.efor.Utilities.Linq.Nav.Models.NavFilter<TField>)
        VB: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).ConvertToFilter(es.efor.Utilities.Linq.Nav.Models.NavFilter(Of TField))
      type: Method
      assemblies:
      - es.efor.Utilities.Linq.Nav
      namespace: es.efor.Utilities.Linq.Nav.Tools
      source:
        remote:
          path: es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
        id: ConvertToFilter
        path: ../es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
        startLine: 69
      syntax:
        content:
          CSharp: public static TFilter ConvertToFilter(NavFilter<TField> filter)
          VB: Public Shared Function ConvertToFilter(filter As NavFilter(Of TField)) As TFilter
        parameters:
        - id: filter
          type: es.efor.Utilities.Linq.Nav.Models.NavFilter{{TField}}
        return:
          type: '{TFilter}'
      overload: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.ConvertToFilter*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCondition(es.efor.Utilities.Linq.Models.Filters.FilterCriteria)
      commentId: M:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCondition(es.efor.Utilities.Linq.Models.Filters.FilterCriteria)
      language: CSharp
      name:
        CSharp: BuildCondition(FilterCriteria)
        VB: BuildCondition(FilterCriteria)
      nameWithType:
        CSharp: NavConverter<TFilter, TField>.BuildCondition(FilterCriteria)
        VB: NavConverter(Of TFilter, TField).BuildCondition(FilterCriteria)
      qualifiedName:
        CSharp: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.BuildCondition(es.efor.Utilities.Linq.Models.Filters.FilterCriteria)
        VB: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).BuildCondition(es.efor.Utilities.Linq.Models.Filters.FilterCriteria)
      type: Method
      assemblies:
      - es.efor.Utilities.Linq.Nav
      namespace: es.efor.Utilities.Linq.Nav.Tools
      source:
        remote:
          path: es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
        id: BuildCondition
        path: ../es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
        startLine: 74
      syntax:
        content:
          CSharp: public NavFilter<TField> BuildCondition(FilterCriteria filter)
          VB: Public Function BuildCondition(filter As FilterCriteria) As NavFilter(Of TField)
        parameters:
        - id: filter
          type: es.efor.Utilities.Linq.Models.Filters.FilterCriteria
        return:
          type: es.efor.Utilities.Linq.Nav.Models.NavFilter{{TField}}
      overload: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCondition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaCondition(es.efor.Utilities.Linq.Models.Filters.FilterCriteria)
      commentId: M:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaCondition(es.efor.Utilities.Linq.Models.Filters.FilterCriteria)
      language: CSharp
      name:
        CSharp: BuildCriteriaCondition(FilterCriteria)
        VB: BuildCriteriaCondition(FilterCriteria)
      nameWithType:
        CSharp: NavConverter<TFilter, TField>.BuildCriteriaCondition(FilterCriteria)
        VB: NavConverter(Of TFilter, TField).BuildCriteriaCondition(FilterCriteria)
      qualifiedName:
        CSharp: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.BuildCriteriaCondition(es.efor.Utilities.Linq.Models.Filters.FilterCriteria)
        VB: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).BuildCriteriaCondition(es.efor.Utilities.Linq.Models.Filters.FilterCriteria)
      type: Method
      assemblies:
      - es.efor.Utilities.Linq.Nav
      namespace: es.efor.Utilities.Linq.Nav.Tools
      source:
        remote:
          path: es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
        id: BuildCriteriaCondition
        path: ../es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
        startLine: 92
      syntax:
        content:
          CSharp: public string BuildCriteriaCondition(FilterCriteria filter)
          VB: Public Function BuildCriteriaCondition(filter As FilterCriteria) As String
        parameters:
        - id: filter
          type: es.efor.Utilities.Linq.Models.Filters.FilterCriteria
        return:
          type: System.String
      overload: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaCondition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaCondition(es.efor.Utilities.Linq.Models.Filters.FilterOperator,es.efor.Utilities.Linq.Models.Filters.FilterDBType,System.String)
      commentId: M:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaCondition(es.efor.Utilities.Linq.Models.Filters.FilterOperator,es.efor.Utilities.Linq.Models.Filters.FilterDBType,System.String)
      language: CSharp
      name:
        CSharp: BuildCriteriaCondition(FilterOperator, FilterDBType, String)
        VB: BuildCriteriaCondition(FilterOperator, FilterDBType, String)
      nameWithType:
        CSharp: NavConverter<TFilter, TField>.BuildCriteriaCondition(FilterOperator, FilterDBType, String)
        VB: NavConverter(Of TFilter, TField).BuildCriteriaCondition(FilterOperator, FilterDBType, String)
      qualifiedName:
        CSharp: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.BuildCriteriaCondition(es.efor.Utilities.Linq.Models.Filters.FilterOperator, es.efor.Utilities.Linq.Models.Filters.FilterDBType, System.String)
        VB: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).BuildCriteriaCondition(es.efor.Utilities.Linq.Models.Filters.FilterOperator, es.efor.Utilities.Linq.Models.Filters.FilterDBType, System.String)
      type: Method
      assemblies:
      - es.efor.Utilities.Linq.Nav
      namespace: es.efor.Utilities.Linq.Nav.Tools
      source:
        remote:
          path: es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
        id: BuildCriteriaCondition
        path: ../es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
        startLine: 96
      syntax:
        content:
          CSharp: public string BuildCriteriaCondition(FilterOperator op, FilterDBType format, string value)
          VB: Public Function BuildCriteriaCondition(op As FilterOperator, format As FilterDBType, value As String) As String
        parameters:
        - id: op
          type: es.efor.Utilities.Linq.Models.Filters.FilterOperator
        - id: format
          type: es.efor.Utilities.Linq.Models.Filters.FilterDBType
        - id: value
          type: System.String
        return:
          type: System.String
      overload: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaCondition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionDatetime(es.efor.Utilities.Linq.Models.Filters.FilterOperator,System.String)
      commentId: M:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionDatetime(es.efor.Utilities.Linq.Models.Filters.FilterOperator,System.String)
      language: CSharp
      name:
        CSharp: BuildCriteriaConditionDatetime(FilterOperator, String)
        VB: BuildCriteriaConditionDatetime(FilterOperator, String)
      nameWithType:
        CSharp: NavConverter<TFilter, TField>.BuildCriteriaConditionDatetime(FilterOperator, String)
        VB: NavConverter(Of TFilter, TField).BuildCriteriaConditionDatetime(FilterOperator, String)
      qualifiedName:
        CSharp: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.BuildCriteriaConditionDatetime(es.efor.Utilities.Linq.Models.Filters.FilterOperator, System.String)
        VB: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).BuildCriteriaConditionDatetime(es.efor.Utilities.Linq.Models.Filters.FilterOperator, System.String)
      type: Method
      assemblies:
      - es.efor.Utilities.Linq.Nav
      namespace: es.efor.Utilities.Linq.Nav.Tools
      source:
        remote:
          path: es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
        id: BuildCriteriaConditionDatetime
        path: ../es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
        startLine: 109
      syntax:
        content:
          CSharp: public string BuildCriteriaConditionDatetime(FilterOperator op, string value)
          VB: Public Function BuildCriteriaConditionDatetime(op As FilterOperator, value As String) As String
        parameters:
        - id: op
          type: es.efor.Utilities.Linq.Models.Filters.FilterOperator
        - id: value
          type: System.String
        return:
          type: System.String
      overload: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionDatetime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionString(es.efor.Utilities.Linq.Models.Filters.FilterOperator,System.String)
      commentId: M:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionString(es.efor.Utilities.Linq.Models.Filters.FilterOperator,System.String)
      language: CSharp
      name:
        CSharp: BuildCriteriaConditionString(FilterOperator, String)
        VB: BuildCriteriaConditionString(FilterOperator, String)
      nameWithType:
        CSharp: NavConverter<TFilter, TField>.BuildCriteriaConditionString(FilterOperator, String)
        VB: NavConverter(Of TFilter, TField).BuildCriteriaConditionString(FilterOperator, String)
      qualifiedName:
        CSharp: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.BuildCriteriaConditionString(es.efor.Utilities.Linq.Models.Filters.FilterOperator, System.String)
        VB: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).BuildCriteriaConditionString(es.efor.Utilities.Linq.Models.Filters.FilterOperator, System.String)
      type: Method
      assemblies:
      - es.efor.Utilities.Linq.Nav
      namespace: es.efor.Utilities.Linq.Nav.Tools
      source:
        remote:
          path: es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
          branch: master
          repo: https://dev.azure.com/EforDevelop/PryBase/_git/PryBase_Med
        id: BuildCriteriaConditionString
        path: ../es.efor.Utilities.Linq.Nav/Tools/NavConverter.cs
        startLine: 131
      syntax:
        content:
          CSharp: public string BuildCriteriaConditionString(FilterOperator op, string value)
          VB: Public Function BuildCriteriaConditionString(op As FilterOperator, value As String) As String
        parameters:
        - id: op
          type: es.efor.Utilities.Linq.Models.Filters.FilterOperator
        - id: value
          type: System.String
        return:
          type: System.String
      overload: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings):
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
        name: CopyMap<TDestination>
        nameWithType: ObjectHelper.CopyMap<TDestination>
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Newtonsoft.Json.JsonSerializerSettings
        name: JsonSerializerSettings
        nameWithType: JsonSerializerSettings
        qualifiedName: Newtonsoft.Json.JsonSerializerSettings
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
        name: CopyMap(Of TDestination)
        nameWithType: ObjectHelper.CopyMap(Of TDestination)
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Newtonsoft.Json.JsonSerializerSettings
        name: JsonSerializerSettings
        nameWithType: JsonSerializerSettings
        qualifiedName: Newtonsoft.Json.JsonSerializerSettings
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  es.efor.Utilities.General.Helpers:
    name:
      CSharp:
      - name: es.efor.Utilities.General.Helpers
        nameWithType: es.efor.Utilities.General.Helpers
        qualifiedName: es.efor.Utilities.General.Helpers
      VB:
      - name: es.efor.Utilities.General.Helpers
        nameWithType: es.efor.Utilities.General.Helpers
        qualifiedName: es.efor.Utilities.General.Helpers
    isDefinition: true
    commentId: N:es.efor.Utilities.General.Helpers
  es.efor.Utilities.General.Helpers.ObjectHelper:
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper
        name: ObjectHelper
        nameWithType: ObjectHelper
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper
        name: ObjectHelper
        nameWithType: ObjectHelper
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper
    isDefinition: true
    parent: es.efor.Utilities.General.Helpers
    commentId: T:es.efor.Utilities.General.Helpers.ObjectHelper
  System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings):
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
        name: CopyMap<TDestination>
        nameWithType: ObjectHelper.CopyMap<TDestination>
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Newtonsoft.Json.JsonSerializerSettings
        name: JsonSerializerSettings
        nameWithType: JsonSerializerSettings
        qualifiedName: Newtonsoft.Json.JsonSerializerSettings
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.JsonSerializerSettings)
        name: CopyMap(Of TDestination)
        nameWithType: ObjectHelper.CopyMap(Of TDestination)
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Newtonsoft.Json.JsonSerializerSettings
        name: JsonSerializerSettings
        nameWithType: JsonSerializerSettings
        qualifiedName: Newtonsoft.Json.JsonSerializerSettings
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
    parent: es.efor.Utilities.General.Helpers.ObjectHelper
    commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.JsonSerializerSettings)
  es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling):
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
        name: CopyMap<TDestination>
        nameWithType: ObjectHelper.CopyMap<TDestination>
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Newtonsoft.Json.ReferenceLoopHandling
        name: ReferenceLoopHandling
        nameWithType: ReferenceLoopHandling
        qualifiedName: Newtonsoft.Json.ReferenceLoopHandling
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
        name: CopyMap(Of TDestination)
        nameWithType: ObjectHelper.CopyMap(Of TDestination)
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Newtonsoft.Json.ReferenceLoopHandling
        name: ReferenceLoopHandling
        nameWithType: ReferenceLoopHandling
        qualifiedName: Newtonsoft.Json.ReferenceLoopHandling
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  System.Object.es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling):
    name:
      CSharp:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
        name: CopyMap<TDestination>
        nameWithType: ObjectHelper.CopyMap<TDestination>
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap<TDestination>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Newtonsoft.Json.ReferenceLoopHandling
        name: ReferenceLoopHandling
        nameWithType: ReferenceLoopHandling
        qualifiedName: Newtonsoft.Json.ReferenceLoopHandling
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(Newtonsoft.Json.ReferenceLoopHandling)
        name: CopyMap(Of TDestination)
        nameWithType: ObjectHelper.CopyMap(Of TDestination)
        qualifiedName: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap(Of TDestination)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Newtonsoft.Json.ReferenceLoopHandling
        name: ReferenceLoopHandling
        nameWithType: ReferenceLoopHandling
        qualifiedName: Newtonsoft.Json.ReferenceLoopHandling
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
    parent: es.efor.Utilities.General.Helpers.ObjectHelper
    commentId: M:es.efor.Utilities.General.Helpers.ObjectHelper.CopyMap``1(System.Object,Newtonsoft.Json.ReferenceLoopHandling)
  TField:
    name:
      CSharp:
      - name: TField
        nameWithType: TField
        qualifiedName: TField
      VB:
      - name: TField
        nameWithType: TField
        qualifiedName: TField
    isDefinition: true
    commentId: '!:TField'
  '{TField}':
    name:
      CSharp:
      - name: TField
        nameWithType: TField
        qualifiedName: TField
      VB:
      - name: TField
        nameWithType: TField
        qualifiedName: TField
    isDefinition: false
    definition: TField
    commentId: '!:TField'
  es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Field*:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Field*
        name: Field
        nameWithType: NavFilter<TField>.Field
        qualifiedName: es.efor.Utilities.Linq.Nav.Models.NavFilter<TField>.Field
      VB:
      - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Field*
        name: Field
        nameWithType: NavFilter(Of TField).Field
        qualifiedName: es.efor.Utilities.Linq.Nav.Models.NavFilter(Of TField).Field
    isDefinition: true
    commentId: Overload:es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Field
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Criteria*:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Criteria*
        name: Criteria
        nameWithType: NavFilter<TField>.Criteria
        qualifiedName: es.efor.Utilities.Linq.Nav.Models.NavFilter<TField>.Criteria
      VB:
      - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Criteria*
        name: Criteria
        nameWithType: NavFilter(Of TField).Criteria
        qualifiedName: es.efor.Utilities.Linq.Nav.Models.NavFilter(Of TField).Criteria
    isDefinition: true
    commentId: Overload:es.efor.Utilities.Linq.Nav.Models.NavFilter`1.Criteria
  es.efor.Utilities.Linq.Nav.Models.NavFilter`1.#ctor*:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1.#ctor*
        name: NavFilter
        nameWithType: NavFilter<TField>.NavFilter
        qualifiedName: es.efor.Utilities.Linq.Nav.Models.NavFilter<TField>.NavFilter
      VB:
      - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1.#ctor*
        name: NavFilter
        nameWithType: NavFilter(Of TField).NavFilter
        qualifiedName: es.efor.Utilities.Linq.Nav.Models.NavFilter(Of TField).NavFilter
    isDefinition: true
    commentId: Overload:es.efor.Utilities.Linq.Nav.Models.NavFilter`1.#ctor
  es.efor.Utilities.Linq.Nav.Models.NavFilter`1:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1
        name: NavFilter
        nameWithType: NavFilter
        qualifiedName: es.efor.Utilities.Linq.Nav.Models.NavFilter
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TField
        nameWithType: TField
        qualifiedName: TField
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1
        name: NavFilter
        nameWithType: NavFilter
        qualifiedName: es.efor.Utilities.Linq.Nav.Models.NavFilter
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TField
        nameWithType: TField
        qualifiedName: TField
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:es.efor.Utilities.Linq.Nav.Models.NavFilter`1
  es.efor.Utilities.Linq.Nav.Models:
    name:
      CSharp:
      - name: es.efor.Utilities.Linq.Nav.Models
        nameWithType: es.efor.Utilities.Linq.Nav.Models
        qualifiedName: es.efor.Utilities.Linq.Nav.Models
      VB:
      - name: es.efor.Utilities.Linq.Nav.Models
        nameWithType: es.efor.Utilities.Linq.Nav.Models
        qualifiedName: es.efor.Utilities.Linq.Nav.Models
    isDefinition: true
    commentId: N:es.efor.Utilities.Linq.Nav.Models
  es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.#ctor*:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.#ctor*
        name: NavConverter
        nameWithType: NavConverter<TFilter, TField>.NavConverter
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.NavConverter
      VB:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.#ctor*
        name: NavConverter
        nameWithType: NavConverter(Of TFilter, TField).NavConverter
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).NavConverter
    isDefinition: true
    commentId: Overload:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.#ctor
  System.Collections.Generic.IEnumerable`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerable`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.IEnumerable{{TFilter}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TFilter
        nameWithType: TFilter
        qualifiedName: TFilter
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TFilter
        nameWithType: TFilter
        qualifiedName: TFilter
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{`0}
  System.Collections.Generic.IEnumerable{es.efor.Utilities.Linq.Models.Filters.FilterCriteria}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: es.efor.Utilities.Linq.Models.Filters.FilterCriteria
        name: FilterCriteria
        nameWithType: FilterCriteria
        qualifiedName: es.efor.Utilities.Linq.Models.Filters.FilterCriteria
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: es.efor.Utilities.Linq.Models.Filters.FilterCriteria
        name: FilterCriteria
        nameWithType: FilterCriteria
        qualifiedName: es.efor.Utilities.Linq.Models.Filters.FilterCriteria
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{es.efor.Utilities.Linq.Models.Filters.FilterCriteria}
  es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildNavFilter*:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildNavFilter*
        name: BuildNavFilter
        nameWithType: NavConverter<TFilter, TField>.BuildNavFilter
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.BuildNavFilter
      VB:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildNavFilter*
        name: BuildNavFilter
        nameWithType: NavConverter(Of TFilter, TField).BuildNavFilter
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).BuildNavFilter
    isDefinition: true
    commentId: Overload:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildNavFilter
  System.Collections.Generic.IEnumerable{es.efor.Utilities.Linq.Nav.Models.NavFilter{{TField}}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1
        name: NavFilter
        nameWithType: NavFilter
        qualifiedName: es.efor.Utilities.Linq.Nav.Models.NavFilter
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TField
        nameWithType: TField
        qualifiedName: TField
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1
        name: NavFilter
        nameWithType: NavFilter
        qualifiedName: es.efor.Utilities.Linq.Nav.Models.NavFilter
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TField
        nameWithType: TField
        qualifiedName: TField
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{es.efor.Utilities.Linq.Nav.Models.NavFilter{`1}}
  es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.ConvertToFilter*:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.ConvertToFilter*
        name: ConvertToFilter
        nameWithType: NavConverter<TFilter, TField>.ConvertToFilter
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.ConvertToFilter
      VB:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.ConvertToFilter*
        name: ConvertToFilter
        nameWithType: NavConverter(Of TFilter, TField).ConvertToFilter
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).ConvertToFilter
    isDefinition: true
    commentId: Overload:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.ConvertToFilter
  TFilter:
    name:
      CSharp:
      - name: TFilter
        nameWithType: TFilter
        qualifiedName: TFilter
      VB:
      - name: TFilter
        nameWithType: TFilter
        qualifiedName: TFilter
    isDefinition: true
    commentId: '!:TFilter'
  '{TFilter}':
    name:
      CSharp:
      - name: TFilter
        nameWithType: TFilter
        qualifiedName: TFilter
      VB:
      - name: TFilter
        nameWithType: TFilter
        qualifiedName: TFilter
    isDefinition: false
    definition: TFilter
    commentId: '!:TFilter'
  es.efor.Utilities.Linq.Nav.Models.NavFilter{{TField}}:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1
        name: NavFilter
        nameWithType: NavFilter
        qualifiedName: es.efor.Utilities.Linq.Nav.Models.NavFilter
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TField
        nameWithType: TField
        qualifiedName: TField
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Utilities.Linq.Nav.Models.NavFilter`1
        name: NavFilter
        nameWithType: NavFilter
        qualifiedName: es.efor.Utilities.Linq.Nav.Models.NavFilter
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TField
        nameWithType: TField
        qualifiedName: TField
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: es.efor.Utilities.Linq.Nav.Models.NavFilter`1
    parent: es.efor.Utilities.Linq.Nav.Models
    commentId: T:es.efor.Utilities.Linq.Nav.Models.NavFilter{`1}
  es.efor.Utilities.Linq.Models.Filters:
    name:
      CSharp:
      - name: es.efor.Utilities.Linq.Models.Filters
        nameWithType: es.efor.Utilities.Linq.Models.Filters
        qualifiedName: es.efor.Utilities.Linq.Models.Filters
      VB:
      - name: es.efor.Utilities.Linq.Models.Filters
        nameWithType: es.efor.Utilities.Linq.Models.Filters
        qualifiedName: es.efor.Utilities.Linq.Models.Filters
    isDefinition: true
    commentId: N:es.efor.Utilities.Linq.Models.Filters
  es.efor.Utilities.Linq.Models.Filters.FilterCriteria:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Models.Filters.FilterCriteria
        name: FilterCriteria
        nameWithType: FilterCriteria
        qualifiedName: es.efor.Utilities.Linq.Models.Filters.FilterCriteria
      VB:
      - id: es.efor.Utilities.Linq.Models.Filters.FilterCriteria
        name: FilterCriteria
        nameWithType: FilterCriteria
        qualifiedName: es.efor.Utilities.Linq.Models.Filters.FilterCriteria
    isDefinition: true
    parent: es.efor.Utilities.Linq.Models.Filters
    commentId: T:es.efor.Utilities.Linq.Models.Filters.FilterCriteria
  es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCondition*:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCondition*
        name: BuildCondition
        nameWithType: NavConverter<TFilter, TField>.BuildCondition
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.BuildCondition
      VB:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCondition*
        name: BuildCondition
        nameWithType: NavConverter(Of TFilter, TField).BuildCondition
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).BuildCondition
    isDefinition: true
    commentId: Overload:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCondition
  es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaCondition*:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaCondition*
        name: BuildCriteriaCondition
        nameWithType: NavConverter<TFilter, TField>.BuildCriteriaCondition
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.BuildCriteriaCondition
      VB:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaCondition*
        name: BuildCriteriaCondition
        nameWithType: NavConverter(Of TFilter, TField).BuildCriteriaCondition
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).BuildCriteriaCondition
    isDefinition: true
    commentId: Overload:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaCondition
  es.efor.Utilities.Linq.Models.Filters.FilterOperator:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Models.Filters.FilterOperator
        name: FilterOperator
        nameWithType: FilterOperator
        qualifiedName: es.efor.Utilities.Linq.Models.Filters.FilterOperator
      VB:
      - id: es.efor.Utilities.Linq.Models.Filters.FilterOperator
        name: FilterOperator
        nameWithType: FilterOperator
        qualifiedName: es.efor.Utilities.Linq.Models.Filters.FilterOperator
    isDefinition: true
    parent: es.efor.Utilities.Linq.Models.Filters
    commentId: T:es.efor.Utilities.Linq.Models.Filters.FilterOperator
  es.efor.Utilities.Linq.Models.Filters.FilterDBType:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Models.Filters.FilterDBType
        name: FilterDBType
        nameWithType: FilterDBType
        qualifiedName: es.efor.Utilities.Linq.Models.Filters.FilterDBType
      VB:
      - id: es.efor.Utilities.Linq.Models.Filters.FilterDBType
        name: FilterDBType
        nameWithType: FilterDBType
        qualifiedName: es.efor.Utilities.Linq.Models.Filters.FilterDBType
    isDefinition: true
    parent: es.efor.Utilities.Linq.Models.Filters
    commentId: T:es.efor.Utilities.Linq.Models.Filters.FilterDBType
  es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionDatetime*:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionDatetime*
        name: BuildCriteriaConditionDatetime
        nameWithType: NavConverter<TFilter, TField>.BuildCriteriaConditionDatetime
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.BuildCriteriaConditionDatetime
      VB:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionDatetime*
        name: BuildCriteriaConditionDatetime
        nameWithType: NavConverter(Of TFilter, TField).BuildCriteriaConditionDatetime
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).BuildCriteriaConditionDatetime
    isDefinition: true
    commentId: Overload:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionDatetime
  es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionString*:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionString*
        name: BuildCriteriaConditionString
        nameWithType: NavConverter<TFilter, TField>.BuildCriteriaConditionString
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter<TFilter, TField>.BuildCriteriaConditionString
      VB:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionString*
        name: BuildCriteriaConditionString
        nameWithType: NavConverter(Of TFilter, TField).BuildCriteriaConditionString
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter(Of TFilter, TField).BuildCriteriaConditionString
    isDefinition: true
    commentId: Overload:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2.BuildCriteriaConditionString
  es.efor.Utilities.Linq.Nav.Tools.NavConverter`2:
    name:
      CSharp:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2
        name: NavConverter
        nameWithType: NavConverter
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TFilter
        nameWithType: TFilter
        qualifiedName: TFilter
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TField
        nameWithType: TField
        qualifiedName: TField
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: es.efor.Utilities.Linq.Nav.Tools.NavConverter`2
        name: NavConverter
        nameWithType: NavConverter
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools.NavConverter
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TFilter
        nameWithType: TFilter
        qualifiedName: TFilter
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TField
        nameWithType: TField
        qualifiedName: TField
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:es.efor.Utilities.Linq.Nav.Tools.NavConverter`2
  es.efor.Utilities.Linq.Nav.Tools:
    name:
      CSharp:
      - name: es.efor.Utilities.Linq.Nav.Tools
        nameWithType: es.efor.Utilities.Linq.Nav.Tools
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools
      VB:
      - name: es.efor.Utilities.Linq.Nav.Tools
        nameWithType: es.efor.Utilities.Linq.Nav.Tools
        qualifiedName: es.efor.Utilities.Linq.Nav.Tools
    isDefinition: true
    commentId: N:es.efor.Utilities.Linq.Nav.Tools
