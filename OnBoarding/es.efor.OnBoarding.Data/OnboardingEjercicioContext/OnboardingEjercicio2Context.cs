// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using es.efor.OnBoarding.Data.Entities;

#nullable disable

namespace es.efor.OnBoarding.Data.OnboardingEjercicioContext
{
    public partial class OnboardingEjercicio2Context : DbContext
    {
        public OnboardingEjercicio2Context()
        {
        }

        public OnboardingEjercicio2Context(DbContextOptions<OnboardingEjercicio2Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Empresas> Empresas { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<Empresas>(entity =>
            {
                entity.HasOne(d => d.Responsable)
                    .WithMany(p => p.Empresas)
                    .HasForeignKey(d => d.ResponsableId)
                    .HasConstraintName("FK_Empresas_Usuarios");
            });

            modelBuilder.Entity<Roles>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();
            });

            modelBuilder.Entity<Usuarios>(entity =>
            {
                entity.HasOne(d => d.Empresa)
                    .WithMany(p => p.Usuarios)
                    .HasForeignKey(d => d.EmpresaId)
                    .HasConstraintName("FK_Usuarios_Empresas");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.Usuarios)
                    .HasForeignKey(d => d.RoleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Usuarios_Roles");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}